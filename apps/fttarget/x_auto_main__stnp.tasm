#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/fttarget/auto_main.stnp
null;0;realx
null;0;clickx
null;0;clickbuff
null;0;locktmp
null;0;hit_du
null;0;hit_dl
null;0;score
null;0;badguy_X
null;0;badguy_Y
null;10x-150;badguy_int_y
null;10x8;badguy_fallspeed
null;0;kb
null;:1;:1
null;10x8;@8
null;:!;:!
null;:2;:2
null;10x12;@12
null;:@;:@
null;:3;:3
null;10x16;@16
null;:\p;:\p
null;:4;:4
null;10x20;@20
null;:$;:$
null;:5;:5
null;10x24;@24
null;:%;:%
null;:h;:h
null;:H;:H
null;:a;:a
null;:A;:A
null;:q;:q
null;:Q;:Q
null;10x0;@0
null;10x30;@30
null;---------;*---------
null;10x2;@2
null;10x100;@100
null;+++------;*+++------
null;10x-121;@-121
null;10x121;@121
null;+++00++++;*+++00++++
null;10x1;@1
null;+++++++++;*+++++++++
null;000000+++;*000000+++
null;10x3;@3
null;10x101;@101
#label
zerosize;;MAIN--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #23-0
include;fttarget/media/title.tas0#SSTNPL Source Line: '23-0' 
#prline
fopwri1;:F
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:T
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:3
fopwri1;:\n
#prline
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:E
fopwri1;:a
fopwri1;:s
fopwri1;:y
fopwri1;:\s
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:3
fopwri1;::
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:H
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:2
fopwri1;::
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:M
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:u
fopwri1;:m
fopwri1;:\s
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:4
fopwri1;::
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:C
fopwri1;:r
fopwri1;:a
fopwri1;:z
fopwri1;:y
fopwri1;:\s
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:5
fopwri1;::
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:O
fopwri1;:f
fopwri1;:\s
fopwri1;:Q
fopwri1;:u
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:a
fopwri1;:b
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:V
fopwri1;:i
fopwri1;:c
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:C
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\s
fopwri1;:>
fopwri1;::
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;::
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:a
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:q
fopwri1;::
fopwri1;:\s
fopwri1;:Q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#print
fopwri1;:>
fopwri1;:?
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-30-0
gotoif;>keyprompt--loop-30-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#print newline
fopwri1;:\n
#conditional set
dataread1;>kb
dataread2;>:1
gotoif;>goto--branch-33-0
goto;>goto--jumper-33-0
dataread1;>@8;goto--branch-33-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-33-0
#conditional set
dataread1;>kb
dataread2;>:!
gotoif;>goto--branch-34-0
goto;>goto--jumper-34-0
dataread1;>@8;goto--branch-34-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-34-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:1
gotoif;>goto--branch-35-0
goto;>goto--jumper-35-0
setreg1;>goto--jumper-35-0;goto--branch-35-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-35-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:!
gotoif;>goto--branch-36-0
goto;>goto--jumper-36-0
setreg1;>goto--jumper-36-0;goto--branch-36-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-36-0
#conditional set
dataread1;>kb
dataread2;>:2
gotoif;>goto--branch-37-0
goto;>goto--jumper-37-0
dataread1;>@12;goto--branch-37-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-37-0
#conditional set
dataread1;>kb
dataread2;>:@
gotoif;>goto--branch-38-0
goto;>goto--jumper-38-0
dataread1;>@12;goto--branch-38-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-38-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:2
gotoif;>goto--branch-39-0
goto;>goto--jumper-39-0
setreg1;>goto--jumper-39-0;goto--branch-39-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-39-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:@
gotoif;>goto--branch-40-0
goto;>goto--jumper-40-0
setreg1;>goto--jumper-40-0;goto--branch-40-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-40-0
#conditional set
dataread1;>kb
dataread2;>:3
gotoif;>goto--branch-41-0
goto;>goto--jumper-41-0
dataread1;>@16;goto--branch-41-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-41-0
#conditional set
dataread1;>kb
dataread2;>:\p
gotoif;>goto--branch-42-0
goto;>goto--jumper-42-0
dataread1;>@16;goto--branch-42-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-42-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:3
gotoif;>goto--branch-43-0
goto;>goto--jumper-43-0
setreg1;>goto--jumper-43-0;goto--branch-43-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-43-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:\p
gotoif;>goto--branch-44-0
goto;>goto--jumper-44-0
setreg1;>goto--jumper-44-0;goto--branch-44-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-44-0
#conditional set
dataread1;>kb
dataread2;>:4
gotoif;>goto--branch-45-0
goto;>goto--jumper-45-0
dataread1;>@20;goto--branch-45-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-45-0
#conditional set
dataread1;>kb
dataread2;>:$
gotoif;>goto--branch-46-0
goto;>goto--jumper-46-0
dataread1;>@20;goto--branch-46-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-46-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:4
gotoif;>goto--branch-47-0
goto;>goto--jumper-47-0
setreg1;>goto--jumper-47-0;goto--branch-47-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-47-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:$
gotoif;>goto--branch-48-0
goto;>goto--jumper-48-0
setreg1;>goto--jumper-48-0;goto--branch-48-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-48-0
#conditional set
dataread1;>kb
dataread2;>:5
gotoif;>goto--branch-49-0
goto;>goto--jumper-49-0
dataread1;>@24;goto--branch-49-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-49-0
#conditional set
dataread1;>kb
dataread2;>:%
gotoif;>goto--branch-50-0
goto;>goto--jumper-50-0
dataread1;>@24;goto--branch-50-0
datawrite1;>badguy_fallspeed
zerosize;;goto--jumper-50-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:5
gotoif;>goto--branch-51-0
goto;>goto--jumper-51-0
setreg1;>goto--jumper-51-0;goto--branch-51-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-51-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:%
gotoif;>goto--branch-52-0
goto;>goto--jumper-52-0
setreg1;>goto--jumper-52-0;goto--branch-52-0
s1push1
goto;>GAMESTART--label
zerosize;;goto--jumper-52-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:h
gotoif;>goto--branch-53-0
goto;>goto--jumper-53-0
setreg1;>goto--jumper-53-0;goto--branch-53-0
s1push1
goto;>Help--label
zerosize;;goto--jumper-53-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:H
gotoif;>goto--branch-54-0
goto;>goto--jumper-54-0
setreg1;>goto--jumper-54-0;goto--branch-54-0
s1push1
goto;>Help--label
zerosize;;goto--jumper-54-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-55-0
goto;>goto--jumper-55-0
setreg1;>goto--jumper-55-0;goto--branch-55-0
s1push1
goto;>About--label
zerosize;;goto--jumper-55-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:A
gotoif;>goto--branch-56-0
goto;>goto--jumper-56-0
setreg1;>goto--jumper-56-0;goto--branch-56-0
s1push1
goto;>About--label
zerosize;;goto--jumper-56-0
#conditional stop
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-57-0
goto;>goto--jumper-57-0
stop;;goto--branch-57-0

zerosize;;goto--jumper-57-0
#conditional stop
dataread1;>kb
dataread2;>:Q
gotoif;>goto--branch-58-0
goto;>goto--jumper-58-0
stop;;goto--branch-58-0

zerosize;;goto--jumper-58-0
#goto 
goto;>MAIN--label
#label
zerosize;;countdown--label
#val (used with set to change variable value during runtime.)
setreg1;10x-40
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#val (used with set to change variable value during runtime.)
setreg1;10x-121
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#val (used with set to change variable value during runtime.)
setreg1;10x27
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #72-0
setreg1;>image_cnt3#SSTNPL Source Line: '72-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-74-0
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-74-0
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#get(1) (may be used with set, or asm code)
dataread1;>@30
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>flk.internal_fcnt
#goto (extra code stores away return address.)
setreg1;>goto--jumper-76-3
s1push1
goto;>flk.internal_waitf--label
zerosize;;goto--jumper-76-3
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #77-0
setreg1;>image_cnt2#SSTNPL Source Line: '77-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-79-0
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-79-0
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#get(1) (may be used with set, or asm code)
dataread1;>@30
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>flk.internal_fcnt
#goto (extra code stores away return address.)
setreg1;>goto--jumper-81-3
s1push1
goto;>flk.internal_waitf--label
zerosize;;goto--jumper-81-3
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #82-0
setreg1;>image_cnt1#SSTNPL Source Line: '82-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-84-0
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-84-0
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#get(1) (may be used with set, or asm code)
dataread1;>@30
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>flk.internal_fcnt
#goto (extra code stores away return address.)
setreg1;>goto--jumper-86-3
s1push1
goto;>flk.internal_waitf--label
zerosize;;goto--jumper-86-3
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;GAMESTART--label
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#goto (extra code stores away return address.)
setreg1;>goto--jumper-92-0
s1push1
goto;>prep_bg--label
zerosize;;goto--jumper-92-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>score
#val (used with set to change variable value during runtime.)
setreg1;10x1
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #97-0
iowrite1;>snd.1.wave#SSTNPL Source Line: '97-0' 
#val (used with set to change variable value during runtime.)
setreg1;10x440
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #99-0
iowrite1;>snd.1.freq#SSTNPL Source Line: '99-0' 
#plotter fill
dataread1;>*---------
iowrite1;>plot.fill
#goto (extra code stores away return address.)
setreg1;>goto--jumper-102-0
s1push1
goto;>countdown--label
zerosize;;goto--jumper-102-0
#plotter width
dataread1;>@20
iowrite1;>plot.width
#plotter height
dataread1;>@20
iowrite1;>plot.height
#goto (extra code stores away return address.)
setreg1;>goto--jumper-107-0
s1push1
goto;>badG_start--label
zerosize;;goto--jumper-107-0
#goto (extra code stores away return address.)
setreg1;>goto--jumper-108-0
s1push1
goto;>gameloop--label
zerosize;;goto--jumper-108-0
#prline
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-110-0
gotoif;>keyprompt--loop-110-0
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;gameloop--label
#plotter buffer blit
dataread1;>@2
iowrite1;>plot.blit
#add (2op math)
dataread1;>badguy_Y
dataread2;>badguy_fallspeed
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>badguy_Y
#conditional goto
dataread1;>badguy_Y
dataread2;>@100
gotoifmore;>goto--branch-125-0
goto;>goto--jumper-125-0
setreg1;>goto--jumper-125-0;goto--branch-125-0
goto;>gameover--label
zerosize;;goto--jumper-125-0
#plotter draw line
dataread1;>*+++------
iowrite1;>plot.color
#plotter x pos 1
dataread1;>badguy_X
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>badguy_Y
iowrite1;>plot.y1
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>@121
iowrite1;>plot.x2
#plotter y pos 1
dataread1;>@121
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>@121
iowrite1;>plot.y2
#plotter y pos 3
dataread1;>@100
iowrite1;>plot.y3
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #146-0
ioread1;>mouse.realx#SSTNPL Source Line: '146-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>realx
#plotter x pos 3
dataread1;>realx
iowrite1;>plot.x3
#plotter draw line
dataread1;>*+++00++++
iowrite1;>plot.color
#plotter draw triangle
iowrite1;>plot.tri
#goto (extra code stores away return address.)
setreg1;>goto--jumper-154-0
s1push1
goto;>flk.flock--label
zerosize;;goto--jumper-154-0
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #157-0
ioread1;>mouse.button#SSTNPL Source Line: '157-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>clickbuff
#conditional goto
dataread1;>clickbuff
dataread2;>@0
gotoifmore;>goto--jumper-159-0
goto;>goto--branch-159-0
setreg1;>goto--jumper-159-0;goto--branch-159-0
goto;>gameloop--label
zerosize;;goto--jumper-159-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #161-0
ioread1;>mouse.lockx#SSTNPL Source Line: '161-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>clickx
#add (2op math)
dataread1;>@20
dataread2;>badguy_X
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>hit_du
#conditional goto
dataread1;>clickx
dataread2;>badguy_X
gotoifmore;>goto--halfstep-166-0
gotoif;>goto--halfstep-166-0
goto;>goto--jumper-166-0
dataread1;>clickx;goto--halfstep-166-0
dataread2;>hit_du
gotoifless;>goto--branch-166-0
gotoif;>goto--branch-166-0
goto;>goto--jumper-166-0
setreg1;>goto--jumper-166-0;goto--branch-166-0
goto;>DO_hit--label
zerosize;;goto--jumper-166-0
#goto 
goto;>DO_miss--label
#goto 
goto;>gameloop--label
#label
zerosize;;gameover--label
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #177-0
include;fttarget/media/gameover.tas0#SSTNPL Source Line: '177-0' 
#print newline
fopwri1;:\n
#print
fopwri1;:S
fopwri1;:c
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
#Dump (decimal)
dataread1;>score
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;DO_hit--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #186-0
iowrite1;>snd.1.play#SSTNPL Source Line: '186-0' 
#add (2op math)
dataread1;>@1
dataread2;>score
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>score
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#plotter x pos 1
dataread1;>badguy_X
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>badguy_Y
iowrite1;>plot.y1
#plotter draw rect
iowrite1;>plot.rect
#plotter y pos 2
dataread1;>@121
iowrite1;>plot.y2
#plotter x pos 1
dataread1;>clickx
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>clickx
iowrite1;>plot.x2
#plotter draw line
dataread1;>*000000+++
iowrite1;>plot.color
#plotter draw line
iowrite1;>plot.line
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#get(1) (may be used with set, or asm code)
dataread1;>@12
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>flk.internal_fcnt
#goto (extra code stores away return address.)
setreg1;>goto--jumper-204-3
s1push1
goto;>flk.internal_waitf--label
zerosize;;goto--jumper-204-3
#plotter draw line
dataread1;>*---------
iowrite1;>plot.color
#goto (extra code stores away return address.)
setreg1;>goto--jumper-212-0
s1push1
goto;>badG_start--label
zerosize;;goto--jumper-212-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #214-0
iowrite1;>snd.1.stop#SSTNPL Source Line: '214-0' 
#goto 
goto;>gameloop--label
#label
zerosize;;DO_miss--label
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>@121
iowrite1;>plot.y2
#plotter x pos 1
dataread1;>clickx
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>clickx
iowrite1;>plot.x2
#plotter draw line
dataread1;>*000000+++
iowrite1;>plot.color
#plotter draw line
iowrite1;>plot.line
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#get(1) (may be used with set, or asm code)
dataread1;>@3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>flk.internal_fcnt
#goto (extra code stores away return address.)
setreg1;>goto--jumper-230-3
s1push1
goto;>flk.internal_waitf--label
zerosize;;goto--jumper-230-3
#plotter draw line
dataread1;>*---------
iowrite1;>plot.color
#goto 
goto;>gameloop--label
#label
zerosize;;badG_start--label
#get(1) (may be used with set, or asm code)
dataread1;>badguy_int_y
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>badguy_Y
#Random ranged number
dataread1;>@-121
dataread2;>@101
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>badguy_X
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;Help--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #255-0
include;fttarget/media/help.tas0#SSTNPL Source Line: '255-0' 
#prline
fopwri1;:F
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:T
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:P
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:f
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:o
fopwri1;:i
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:e
fopwri1;:\n
#print
fopwri1;:L
fopwri1;:e
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:\s
fopwri1;:p
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:e
fopwri1;:\m
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:G
fopwri1;:A
fopwri1;:M
fopwri1;:E
fopwri1;:\s
fopwri1;:O
fopwri1;:V
fopwri1;:E
fopwri1;:R
fopwri1;:!
#print newline
fopwri1;:\n
#print
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\s
fopwri1;:>
fopwri1;:?
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-263-0
gotoif;>keyprompt--loop-263-0
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;About--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #268-0
include;fttarget/media/about.tas0#SSTNPL Source Line: '268-0' 
#prline
fopwri1;:F
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:T
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:4
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:f
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:W
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:b
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:l
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\s
fopwri1;:(
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:A
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:W
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:S
fopwri1;:S
fopwri1;:T
fopwri1;:N
fopwri1;:P
fopwri1;:L
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:2
fopwri1;:1
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:F
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:T
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\m
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\m
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:F
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:T
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:\m
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#print
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:F
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:T
fopwri1;:a
fopwri1;:r
fopwri1;:g
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\m
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
#print newline
fopwri1;:\n
#print
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\s
fopwri1;:>
fopwri1;:?
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-289-0
gotoif;>keyprompt--loop-289-0
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;prep_bg--label
#plotter buffer select
dataread1;>@2
iowrite1;>plot.select
#val (used with set to change variable value during runtime.)
setreg1;10x-121
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #301-0
setreg1;>image_offset1#SSTNPL Source Line: '301-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-303-0
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-303-0
#plotter buffer select
dataread1;>@1
iowrite1;>plot.select
#return from subroutine.
s1pop1
gotoreg1
#module include: line 308-0: flocklib as flk
includeas;flocklib,flk
#module include: line 309-0: plrle_noalpha as pl
includeas;plrle_noalpha,pl
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #310-0
include;fttarget/media/gamebg.tas0;image_offset1#SSTNPL Source Line: '310-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #311-0
include;fttarget/media/cnt3.tas0;image_cnt3#SSTNPL Source Line: '311-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #312-0
include;fttarget/media/cnt2.tas0;image_cnt2#SSTNPL Source Line: '312-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #313-0
include;fttarget/media/cnt1.tas0;image_cnt1#SSTNPL Source Line: '313-0' 
#END OF FILE
