#SSTNPL COMPILER v0.3.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/match/auto_main.stnp
null;0;cardx
null;0;cardy
null;0;cardplacebuff
null;0;kb
null;0;matches
null;0;card1
null;0;card2
null;0;card1val
null;0;card2val
null;0;x1
null;0;y1
null;0;x2
null;0;y2
null;0;kb2
null;10x0;cardv
null;10x1;@1
null;10x6;@6
null;0;pickx
null;0;picky
null;0;didpick
null;:g;:g
null;:a;:a
null;:q;:q
null;:h;:h
null;:+;:+
null;10x0;@0
null;:w;:w
null;:e;:e
null;10x2;@2
null;:r;:r
null;10x3;@3
null;:s;:s
null;:d;:d
null;:f;:f
null;:z;:z
null;:x;:x
null;:c;:c
null;:v;:v
null;:i;:i
#prline
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:i
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>cardv
setreg1;>uiter-retpos-29;uiter-loopback-29
s1push1
goto;>placecard--label
dataread1;>cardv;uiter-retpos-29
setreg2;10x1
add
datawrite1;>cardv
dataread2;>@6
gotoifless;>uiter-loopback-29
gotoif;>uiter-loopback-29

#Upward range iterator
dataread1;>@1
datawrite1;>cardv
setreg1;>uiter-retpos-30;uiter-loopback-30
s1push1
goto;>placecard--label
dataread1;>cardv;uiter-retpos-30
setreg2;10x1
add
datawrite1;>cardv
dataread2;>@6
gotoifless;>uiter-loopback-30
gotoif;>uiter-loopback-30

#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:s
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:y
fopwri1;:.
fopwri1;:\n
#label
null;;menu--label
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:1
fopwri1;:\n
#prline
fopwri1;:g
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:q
fopwri1;::
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;::
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:/
fopwri1;:r
fopwri1;:u
fopwri1;:l
fopwri1;:e
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:>
fopwri1;:\n
#print newline
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-50
gotoif;>keyprompt--loop-50
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb2
#conditional goto
dataread1;>kb2
dataread2;>:g
gotoif;>goto--branch-52
goto;>goto--jumper-52
setreg1;>goto--jumper-52;goto--branch-52
goto;>main--label
null;;goto--jumper-52
#conditional subroutine goto
dataread1;>kb2
dataread2;>:a
gotoif;>goto--branch-53
goto;>goto--jumper-53
setreg1;>goto--jumper-53;goto--branch-53
s1push1
goto;>about--label
null;;goto--jumper-53
#conditional stop
dataread1;>kb2
dataread2;>:q
gotoif;>goto--branch-54
goto;>goto--jumper-54
stop;;goto--branch-54

null;;goto--jumper-54
#conditional subroutine goto
dataread1;>kb2
dataread2;>:h
gotoif;>goto--branch-55
goto;>goto--jumper-55
setreg1;>goto--jumper-55;goto--branch-55
s1push1
goto;>help--label
null;;goto--jumper-55
#goto 
goto;>menu--label
#label
null;;main--label
#print newline
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\s
fopwri1;:N
fopwri1;:E
fopwri1;:X
fopwri1;:T
fopwri1;:\s
fopwri1;:R
fopwri1;:O
fopwri1;:U
fopwri1;:N
fopwri1;:D
fopwri1;:\s
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-64
s1push1
goto;>step1--label
null;;goto--jumper-64
#goto (extra code stores away return address.)
setreg1;>goto--jumper-65
s1push1
goto;>step2--label
null;;goto--jumper-65
#goto (extra code stores away return address.)
setreg1;>goto--jumper-66
s1push1
goto;>domatch--label
null;;goto--jumper-66
#conditional goto
dataread1;>matches
dataread2;>@6
gotoif;>goto--branch-67
goto;>goto--jumper-67
setreg1;>goto--jumper-67;goto--branch-67
goto;>win--label
null;;goto--jumper-67
#goto 
goto;>main--label
#label
null;;domatch--label
#conditional goto
dataread1;>card1
dataread2;>card2
gotoif;>goto--branch-72
goto;>goto--jumper-72
setreg1;>goto--jumper-72;goto--branch-72
goto;>domatch_same--label
null;;goto--jumper-72
#conditional goto
dataread1;>card1val
dataread2;>card2val
gotoif;>goto--branch-73
goto;>goto--jumper-73
setreg1;>goto--jumper-73;goto--branch-73
goto;>domatch_true--label
null;;goto--jumper-73
#prline
fopwri1;:T
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:A
fopwri1;:g
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:!
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;domatch_true--label
#add (2op math)
dataread1;>matches
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>matches
#prline
fopwri1;:Y
fopwri1;:a
fopwri1;:y
fopwri1;:!
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:!
fopwri1;:\n
#SSTNPL table write instruction.
setreg1;10x5
dataread2;>y1
mul
dataread2;>x1
add
setreg2;10x1
add
setreg2;>cardview--table
add
datawrite1;>tabw--adrbuff--81
dataread1;>:+
datawrite1;;tabw--adrbuff--81
#SSTNPL table write instruction.
setreg1;10x5
dataread2;>y2
mul
dataread2;>x2
add
setreg2;10x1
add
setreg2;>cardview--table
add
datawrite1;>tabw--adrbuff--82
dataread1;>:+
datawrite1;;tabw--adrbuff--82
#return from subroutine.
s1pop1
gotoreg1
#label
null;;domatch_same--label
#prline
fopwri1;:H
fopwri1;:E
fopwri1;:Y
fopwri1;:!
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:'
fopwri1;:t
fopwri1;:\s
fopwri1;:j
fopwri1;:u
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:p
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:!
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;step1--label
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-94
s1push1
goto;>showcards--label
null;;goto--jumper-94
#print newline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:f
fopwri1;:i
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:.
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:i
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-97
s1push1
goto;>getcard--label
null;;goto--jumper-97
#copy variables 
dataread1;>pickx
datawrite1;>x1
#copy variables 
dataread1;>picky
datawrite1;>y1
#SSTNPL table read instruction.
setreg1;10x4
dataread2;>picky
mul
dataread2;>pickx
add
setreg2;10x1
add
setreg2;>cardvals--table
add
datawrite1;>tabr--adrbuff--100
dataread1;;tabr--adrbuff--100
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>card1val
#SSTNPL table read instruction.
setreg1;10x5
dataread2;>picky
mul
dataread2;>pickx
add
setreg2;10x1
add
setreg2;>cardview--table
add
datawrite1;>tabr--adrbuff--102
dataread1;;tabr--adrbuff--102
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>card1
#print
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
#Dump (character)
dataread1;>kb
iowrite1;>io.ttywr
#print
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
#Dump (decimal)
dataread1;>card1val
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#conditional return
dataread1;>card1
dataread2;>:+
gotoif;>goto--jumper-111
goto;>goto--branch-111
s1pop1;;goto--branch-111
gotoreg1
null;;goto--jumper-111
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:y
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:!
fopwri1;:\n
#goto 
goto;>step1--label
#label
null;;step2--label
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-119
s1push1
goto;>showcards--label
null;;goto--jumper-119
#print newline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:.
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:i
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-122
s1push1
goto;>getcard--label
null;;goto--jumper-122
#copy variables 
dataread1;>pickx
datawrite1;>x2
#copy variables 
dataread1;>picky
datawrite1;>y2
#SSTNPL table read instruction.
setreg1;10x4
dataread2;>picky
mul
dataread2;>pickx
add
setreg2;10x1
add
setreg2;>cardvals--table
add
datawrite1;>tabr--adrbuff--126
dataread1;;tabr--adrbuff--126
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>card2val
#SSTNPL table read instruction.
setreg1;10x5
dataread2;>picky
mul
dataread2;>pickx
add
setreg2;10x1
add
setreg2;>cardview--table
add
datawrite1;>tabr--adrbuff--128
dataread1;;tabr--adrbuff--128
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>card2
#print
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
#Dump (character)
dataread1;>kb
iowrite1;>io.ttywr
#print
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
#Dump (decimal)
dataread1;>card2val
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#conditional return
dataread1;>card2
dataread2;>:+
gotoif;>goto--jumper-137
goto;>goto--branch-137
s1pop1;;goto--branch-137
gotoreg1
null;;goto--jumper-137
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:y
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:!
fopwri1;:\n
#goto 
goto;>step2--label
#label
null;;getcard--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>didpick
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-147
gotoif;>keyprompt--loop-147
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#conditional set
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-149
goto;>goto--jumper-149
dataread1;>@0;goto--branch-149
datawrite1;>pickx
null;;goto--jumper-149
#conditional set
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-150
goto;>goto--jumper-150
dataread1;>@0;goto--branch-150
datawrite1;>picky
null;;goto--jumper-150
#conditional set
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-151
goto;>goto--jumper-151
dataread1;>@1;goto--branch-151
datawrite1;>didpick
null;;goto--jumper-151
#conditional set
dataread1;>kb
dataread2;>:w
gotoif;>goto--branch-152
goto;>goto--jumper-152
dataread1;>@1;goto--branch-152
datawrite1;>pickx
null;;goto--jumper-152
#conditional set
dataread1;>kb
dataread2;>:w
gotoif;>goto--branch-153
goto;>goto--jumper-153
dataread1;>@0;goto--branch-153
datawrite1;>picky
null;;goto--jumper-153
#conditional set
dataread1;>kb
dataread2;>:w
gotoif;>goto--branch-154
goto;>goto--jumper-154
dataread1;>@1;goto--branch-154
datawrite1;>didpick
null;;goto--jumper-154
#conditional set
dataread1;>kb
dataread2;>:e
gotoif;>goto--branch-155
goto;>goto--jumper-155
dataread1;>@2;goto--branch-155
datawrite1;>pickx
null;;goto--jumper-155
#conditional set
dataread1;>kb
dataread2;>:e
gotoif;>goto--branch-156
goto;>goto--jumper-156
dataread1;>@0;goto--branch-156
datawrite1;>picky
null;;goto--jumper-156
#conditional set
dataread1;>kb
dataread2;>:e
gotoif;>goto--branch-157
goto;>goto--jumper-157
dataread1;>@1;goto--branch-157
datawrite1;>didpick
null;;goto--jumper-157
#conditional set
dataread1;>kb
dataread2;>:r
gotoif;>goto--branch-158
goto;>goto--jumper-158
dataread1;>@3;goto--branch-158
datawrite1;>pickx
null;;goto--jumper-158
#conditional set
dataread1;>kb
dataread2;>:r
gotoif;>goto--branch-159
goto;>goto--jumper-159
dataread1;>@0;goto--branch-159
datawrite1;>picky
null;;goto--jumper-159
#conditional set
dataread1;>kb
dataread2;>:r
gotoif;>goto--branch-160
goto;>goto--jumper-160
dataread1;>@1;goto--branch-160
datawrite1;>didpick
null;;goto--jumper-160
#conditional set
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-162
goto;>goto--jumper-162
dataread1;>@0;goto--branch-162
datawrite1;>pickx
null;;goto--jumper-162
#conditional set
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-163
goto;>goto--jumper-163
dataread1;>@1;goto--branch-163
datawrite1;>picky
null;;goto--jumper-163
#conditional set
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-164
goto;>goto--jumper-164
dataread1;>@1;goto--branch-164
datawrite1;>didpick
null;;goto--jumper-164
#conditional set
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-165
goto;>goto--jumper-165
dataread1;>@1;goto--branch-165
datawrite1;>pickx
null;;goto--jumper-165
#conditional set
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-166
goto;>goto--jumper-166
dataread1;>@1;goto--branch-166
datawrite1;>picky
null;;goto--jumper-166
#conditional set
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-167
goto;>goto--jumper-167
dataread1;>@1;goto--branch-167
datawrite1;>didpick
null;;goto--jumper-167
#conditional set
dataread1;>kb
dataread2;>:d
gotoif;>goto--branch-168
goto;>goto--jumper-168
dataread1;>@2;goto--branch-168
datawrite1;>pickx
null;;goto--jumper-168
#conditional set
dataread1;>kb
dataread2;>:d
gotoif;>goto--branch-169
goto;>goto--jumper-169
dataread1;>@1;goto--branch-169
datawrite1;>picky
null;;goto--jumper-169
#conditional set
dataread1;>kb
dataread2;>:d
gotoif;>goto--branch-170
goto;>goto--jumper-170
dataread1;>@1;goto--branch-170
datawrite1;>didpick
null;;goto--jumper-170
#conditional set
dataread1;>kb
dataread2;>:f
gotoif;>goto--branch-171
goto;>goto--jumper-171
dataread1;>@3;goto--branch-171
datawrite1;>pickx
null;;goto--jumper-171
#conditional set
dataread1;>kb
dataread2;>:f
gotoif;>goto--branch-172
goto;>goto--jumper-172
dataread1;>@1;goto--branch-172
datawrite1;>picky
null;;goto--jumper-172
#conditional set
dataread1;>kb
dataread2;>:f
gotoif;>goto--branch-173
goto;>goto--jumper-173
dataread1;>@1;goto--branch-173
datawrite1;>didpick
null;;goto--jumper-173
#conditional set
dataread1;>kb
dataread2;>:z
gotoif;>goto--branch-175
goto;>goto--jumper-175
dataread1;>@0;goto--branch-175
datawrite1;>pickx
null;;goto--jumper-175
#conditional set
dataread1;>kb
dataread2;>:z
gotoif;>goto--branch-176
goto;>goto--jumper-176
dataread1;>@2;goto--branch-176
datawrite1;>picky
null;;goto--jumper-176
#conditional set
dataread1;>kb
dataread2;>:z
gotoif;>goto--branch-177
goto;>goto--jumper-177
dataread1;>@1;goto--branch-177
datawrite1;>didpick
null;;goto--jumper-177
#conditional set
dataread1;>kb
dataread2;>:x
gotoif;>goto--branch-178
goto;>goto--jumper-178
dataread1;>@1;goto--branch-178
datawrite1;>pickx
null;;goto--jumper-178
#conditional set
dataread1;>kb
dataread2;>:x
gotoif;>goto--branch-179
goto;>goto--jumper-179
dataread1;>@2;goto--branch-179
datawrite1;>picky
null;;goto--jumper-179
#conditional set
dataread1;>kb
dataread2;>:x
gotoif;>goto--branch-180
goto;>goto--jumper-180
dataread1;>@1;goto--branch-180
datawrite1;>didpick
null;;goto--jumper-180
#conditional set
dataread1;>kb
dataread2;>:c
gotoif;>goto--branch-181
goto;>goto--jumper-181
dataread1;>@2;goto--branch-181
datawrite1;>pickx
null;;goto--jumper-181
#conditional set
dataread1;>kb
dataread2;>:c
gotoif;>goto--branch-182
goto;>goto--jumper-182
dataread1;>@2;goto--branch-182
datawrite1;>picky
null;;goto--jumper-182
#conditional set
dataread1;>kb
dataread2;>:c
gotoif;>goto--branch-183
goto;>goto--jumper-183
dataread1;>@1;goto--branch-183
datawrite1;>didpick
null;;goto--jumper-183
#conditional set
dataread1;>kb
dataread2;>:v
gotoif;>goto--branch-184
goto;>goto--jumper-184
dataread1;>@3;goto--branch-184
datawrite1;>pickx
null;;goto--jumper-184
#conditional set
dataread1;>kb
dataread2;>:v
gotoif;>goto--branch-185
goto;>goto--jumper-185
dataread1;>@2;goto--branch-185
datawrite1;>picky
null;;goto--jumper-185
#conditional set
dataread1;>kb
dataread2;>:v
gotoif;>goto--branch-186
goto;>goto--jumper-186
dataread1;>@1;goto--branch-186
datawrite1;>didpick
null;;goto--jumper-186
#conditional goto
dataread1;>kb
dataread2;>:i
gotoif;>goto--branch-187
goto;>goto--jumper-187
setreg1;>goto--jumper-187;goto--branch-187
goto;>quit--label
null;;goto--jumper-187
#conditional return
dataread1;>didpick
dataread2;>@1
gotoif;>goto--branch-188
goto;>goto--jumper-188
s1pop1;;goto--branch-188
gotoreg1
null;;goto--jumper-188
#goto 
goto;>getcard--label
#label
null;;win--label
#print newline
fopwri1;:\n
#prline
fopwri1;:\b
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:/
fopwri1;:\s
fopwri1;:_
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\b
fopwri1;:\s
fopwri1;:/
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:*
fopwri1;:\s
fopwri1;:\v
fopwri1;:\b
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:_
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:_
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:_
fopwri1;:\v
fopwri1;:_
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:*
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-203
gotoif;>keyprompt--loop-203
#stop (shutdown vm)
stop
#label
null;;quit--label
#prline
fopwri1;:G
fopwri1;:o
fopwri1;:o
fopwri1;:d
fopwri1;:b
fopwri1;:y
fopwri1;:e
fopwri1;:!
fopwri1;:\s
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-210
gotoif;>keyprompt--loop-210
#stop (shutdown vm)
stop
#label
null;;showcards--label
#table width=5, height=3
null;;cardview--table
#prline
fopwri1;:Q
fopwri1;:W
fopwri1;:E
fopwri1;:R
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:S
fopwri1;:D
fopwri1;:F
fopwri1;:\n
#prline
fopwri1;:Z
fopwri1;:X
fopwri1;:C
fopwri1;:V
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;placecard--label
#Random ranged number
dataread1;>@0
dataread2;>@3
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cardx
#Random ranged number
dataread1;>@0
dataread2;>@2
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cardy
#SSTNPL table read instruction.
setreg1;10x4
dataread2;>cardy
mul
dataread2;>cardx
add
setreg2;10x1
add
setreg2;>cardvals--table
add
datawrite1;>tabr--adrbuff--236
dataread1;;tabr--adrbuff--236
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cardplacebuff
#conditional goto
dataread1;>cardplacebuff
dataread2;>@0
gotoif;>goto--branch-238
goto;>goto--jumper-238
setreg1;>goto--jumper-238;goto--branch-238
goto;>placecard_write--label
null;;goto--jumper-238
#goto 
goto;>placecard--label
#label
null;;placecard_write--label
#SSTNPL table write instruction.
setreg1;10x4
dataread2;>cardy
mul
dataread2;>cardx
add
setreg2;10x1
add
setreg2;>cardvals--table
add
datawrite1;>tabw--adrbuff--242
dataread1;>cardv
datawrite1;;tabw--adrbuff--242
#return from subroutine.
s1pop1
gotoreg1
#table width=4, height=3
null;;cardvals--table
#tdat
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
#label
null;;about--label
#print newline
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:A
fopwri1;:B
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:o
fopwri1;:m
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:2
fopwri1;:0
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:,
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:,
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:R
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#print
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-276
gotoif;>keyprompt--loop-276
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help--label
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:o
fopwri1;:m
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:R
fopwri1;:U
fopwri1;:L
fopwri1;:E
fopwri1;:S
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:e
fopwri1;:a
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Q
fopwri1;:W
fopwri1;:E
fopwri1;:R
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:S
fopwri1;:D
fopwri1;:F
fopwri1;:\n
#prline
fopwri1;:Z
fopwri1;:X
fopwri1;:C
fopwri1;:V
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:'
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:'
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:'
fopwri1;:+
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:p
fopwri1;:a
fopwri1;:i
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:r
fopwri1;:d
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:n
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:R
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#print
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-295
gotoif;>keyprompt--loop-295
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
