#SSTNPL COMPILER v0.4.0
#header
head-rname=help
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/dos/tools/help/help.stnp
null;0;cmdflg
null;0;validflg
null;++0---;*++0---
null;10x0;@0
null;10x1;@1
null;000000;*000000
null;+0+---;*+0+---
#goto (extra code stores away return address.)
setreg1;>goto--jumper-3
s1push1
goto;>dosargs.getentry--label
null;;goto--jumper-3
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;10x1
adddata1;>dosargs.buffer--table
datawrite1;>tabstrc--adrbuff--7
null;;tabstrc--adrbuff--7
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--7
null;;tabstrc--outbuff--7
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_1
dataread1;;tabstrc--recurs-tabbuff--7_1
datawrite1;>tabstrc--recurs-tabbuff_read--7_1
dataread1;;tabstrc--recurs-tabbuff_read--7_1

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--7_1
goto;>tabstrc--recurs-checkno--7_1
null;;tabstrc--recurs-checkyes--7_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--7
setreg2;+
add
datawrite1;>tabstrc--adrbuff--7

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_2
dataread1;;tabstrc--recurs-tabbuff--7_2
datawrite1;>tabstrc--recurs-tabbuff_read--7_2
dataread1;;tabstrc--recurs-tabbuff_read--7_2

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--7_2
goto;>tabstrc--recurs-checkno--7_2
null;;tabstrc--recurs-checkyes--7_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--7
setreg2;+
add
datawrite1;>tabstrc--adrbuff--7

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_3
dataread1;;tabstrc--recurs-tabbuff--7_3
datawrite1;>tabstrc--recurs-tabbuff_read--7_3
dataread1;;tabstrc--recurs-tabbuff_read--7_3

setreg2;:m


gotoif;>tabstrc--recurs-checkyes--7_3
goto;>tabstrc--recurs-checkno--7_3
null;;tabstrc--recurs-checkyes--7_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--7
setreg2;+
add
datawrite1;>tabstrc--adrbuff--7

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_4
dataread1;;tabstrc--recurs-tabbuff--7_4
datawrite1;>tabstrc--recurs-tabbuff_read--7_4
dataread1;;tabstrc--recurs-tabbuff_read--7_4

setreg2;:m


gotoif;>tabstrc--recurs-checkyes--7_4
goto;>tabstrc--recurs-checkno--7_4
null;;tabstrc--recurs-checkyes--7_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--7
setreg2;+
add
datawrite1;>tabstrc--adrbuff--7

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_5
dataread1;;tabstrc--recurs-tabbuff--7_5
datawrite1;>tabstrc--recurs-tabbuff_read--7_5
dataread1;;tabstrc--recurs-tabbuff_read--7_5

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--7_5
goto;>tabstrc--recurs-checkno--7_5
null;;tabstrc--recurs-checkyes--7_5
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--7
setreg2;+
add
datawrite1;>tabstrc--adrbuff--7

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_6
dataread1;;tabstrc--recurs-tabbuff--7_6
datawrite1;>tabstrc--recurs-tabbuff_read--7_6
dataread1;;tabstrc--recurs-tabbuff_read--7_6

setreg2;:n


gotoif;>tabstrc--recurs-checkyes--7_6
goto;>tabstrc--recurs-checkno--7_6
null;;tabstrc--recurs-checkyes--7_6
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--7
setreg2;+
add
datawrite1;>tabstrc--adrbuff--7

setreg1;>tabstrc--adrbuff--7

datawrite1;>tabstrc--recurs-tabbuff--7_7
dataread1;;tabstrc--recurs-tabbuff--7_7
datawrite1;>tabstrc--recurs-tabbuff_read--7_7
dataread1;;tabstrc--recurs-tabbuff_read--7_7

setreg2;:d


gotoif;>tabstrc--recurs-checkyes--7_7
goto;>tabstrc--recurs-checkno--7_7
null;;tabstrc--recurs-checkyes--7_7
##set flag########
setreg1;>tabstrc--outbuff--7
datawrite1;>tabstrc--recurs-flag--7_7
setreg1;+
datawrite1;;tabstrc--recurs-flag--7_7
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_7
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--7_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--7
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cmdflg
#conditional subroutine goto
dataread1;>cmdflg
dataread2;>@1
gotoif;>goto--branch-9
goto;>goto--jumper-9
setreg1;>goto--jumper-9;goto--branch-9
s1push1
goto;>command_txe_help--label
null;;goto--jumper-9
#conditional set
dataread1;>cmdflg
dataread2;>@1
gotoif;>goto--branch-10
goto;>goto--jumper-10
dataread1;>@1;goto--branch-10
datawrite1;>validflg
null;;goto--jumper-10
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;10x1
adddata1;>dosargs.buffer--table
datawrite1;>tabstrc--adrbuff--11
null;;tabstrc--adrbuff--11
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--11
null;;tabstrc--outbuff--11
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_1
dataread1;;tabstrc--recurs-tabbuff--11_1
datawrite1;>tabstrc--recurs-tabbuff_read--11_1
dataread1;;tabstrc--recurs-tabbuff_read--11_1

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--11_1
goto;>tabstrc--recurs-checkno--11_1
null;;tabstrc--recurs-checkyes--11_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_2
dataread1;;tabstrc--recurs-tabbuff--11_2
datawrite1;>tabstrc--recurs-tabbuff_read--11_2
dataread1;;tabstrc--recurs-tabbuff_read--11_2

setreg2;:v


gotoif;>tabstrc--recurs-checkyes--11_2
goto;>tabstrc--recurs-checkno--11_2
null;;tabstrc--recurs-checkyes--11_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_3
dataread1;;tabstrc--recurs-tabbuff--11_3
datawrite1;>tabstrc--recurs-tabbuff_read--11_3
dataread1;;tabstrc--recurs-tabbuff_read--11_3

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--11_3
goto;>tabstrc--recurs-checkno--11_3
null;;tabstrc--recurs-checkyes--11_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_4
dataread1;;tabstrc--recurs-tabbuff--11_4
datawrite1;>tabstrc--recurs-tabbuff_read--11_4
dataread1;;tabstrc--recurs-tabbuff_read--11_4

setreg2;:r


gotoif;>tabstrc--recurs-checkyes--11_4
goto;>tabstrc--recurs-checkno--11_4
null;;tabstrc--recurs-checkyes--11_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_5
dataread1;;tabstrc--recurs-tabbuff--11_5
datawrite1;>tabstrc--recurs-tabbuff_read--11_5
dataread1;;tabstrc--recurs-tabbuff_read--11_5

setreg2;:v


gotoif;>tabstrc--recurs-checkyes--11_5
goto;>tabstrc--recurs-checkno--11_5
null;;tabstrc--recurs-checkyes--11_5
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_6
dataread1;;tabstrc--recurs-tabbuff--11_6
datawrite1;>tabstrc--recurs-tabbuff_read--11_6
dataread1;;tabstrc--recurs-tabbuff_read--11_6

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--11_6
goto;>tabstrc--recurs-checkno--11_6
null;;tabstrc--recurs-checkyes--11_6
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_7
dataread1;;tabstrc--recurs-tabbuff--11_7
datawrite1;>tabstrc--recurs-tabbuff_read--11_7
dataread1;;tabstrc--recurs-tabbuff_read--11_7

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--11_7
goto;>tabstrc--recurs-checkno--11_7
null;;tabstrc--recurs-checkyes--11_7
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--11
setreg2;+
add
datawrite1;>tabstrc--adrbuff--11

setreg1;>tabstrc--adrbuff--11

datawrite1;>tabstrc--recurs-tabbuff--11_8
dataread1;;tabstrc--recurs-tabbuff--11_8
datawrite1;>tabstrc--recurs-tabbuff_read--11_8
dataread1;;tabstrc--recurs-tabbuff_read--11_8

setreg2;:w


gotoif;>tabstrc--recurs-checkyes--11_8
goto;>tabstrc--recurs-checkno--11_8
null;;tabstrc--recurs-checkyes--11_8
##set flag########
setreg1;>tabstrc--outbuff--11
datawrite1;>tabstrc--recurs-flag--11_8
setreg1;+
datawrite1;;tabstrc--recurs-flag--11_8
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_8
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_7
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--11_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--11
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cmdflg
#conditional subroutine goto
dataread1;>cmdflg
dataread2;>@1
gotoif;>goto--branch-13
goto;>goto--jumper-13
setreg1;>goto--jumper-13;goto--branch-13
s1push1
goto;>overview--label
null;;goto--jumper-13
#conditional set
dataread1;>cmdflg
dataread2;>@1
gotoif;>goto--branch-14
goto;>goto--jumper-14
dataread1;>@1;goto--branch-14
datawrite1;>validflg
null;;goto--jumper-14
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;10x1
adddata1;>dosargs.buffer--table
datawrite1;>tabstrc--adrbuff--15
null;;tabstrc--adrbuff--15
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--15
null;;tabstrc--outbuff--15
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--15

datawrite1;>tabstrc--recurs-tabbuff--15_1
dataread1;;tabstrc--recurs-tabbuff--15_1
datawrite1;>tabstrc--recurs-tabbuff_read--15_1
dataread1;;tabstrc--recurs-tabbuff_read--15_1

setreg2;:/


gotoif;>tabstrc--recurs-checkyes--15_1
goto;>tabstrc--recurs-checkno--15_1
null;;tabstrc--recurs-checkyes--15_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--15
setreg2;+
add
datawrite1;>tabstrc--adrbuff--15

setreg1;>tabstrc--adrbuff--15

datawrite1;>tabstrc--recurs-tabbuff--15_2
dataread1;;tabstrc--recurs-tabbuff--15_2
datawrite1;>tabstrc--recurs-tabbuff_read--15_2
dataread1;;tabstrc--recurs-tabbuff_read--15_2

setreg2;:?


gotoif;>tabstrc--recurs-checkyes--15_2
goto;>tabstrc--recurs-checkno--15_2
null;;tabstrc--recurs-checkyes--15_2
##set flag########
setreg1;>tabstrc--outbuff--15
datawrite1;>tabstrc--recurs-flag--15_2
setreg1;+
datawrite1;;tabstrc--recurs-flag--15_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--15_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--15_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--15
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cmdflg
#conditional subroutine goto
dataread1;>cmdflg
dataread2;>@1
gotoif;>goto--branch-17
goto;>goto--jumper-17
setreg1;>goto--jumper-17;goto--branch-17
s1push1
goto;>help_help--label
null;;goto--jumper-17
#conditional set
dataread1;>cmdflg
dataread2;>@1
gotoif;>goto--branch-18
goto;>goto--jumper-18
dataread1;>@1;goto--branch-18
datawrite1;>validflg
null;;goto--jumper-18
#conditional subroutine goto
dataread1;>validflg
dataread2;>@0
gotoif;>goto--branch-19
goto;>goto--jumper-19
setreg1;>goto--jumper-19;goto--branch-19
s1push1
goto;>Errortext--label
null;;goto--jumper-19
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#stop (shutdown vm)
stop
#label
null;;Errortext--label
#prline
fopwri1;:P
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:`
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:/
fopwri1;:?
fopwri1;:`
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:a
fopwri1;:g
fopwri1;:e
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_help--label
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:g
fopwri1;:o
fopwri1;:r
fopwri1;:i
fopwri1;:e
fopwri1;:s
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-29
s1push1
goto;>divider--label
null;;goto--jumper-29
#prline
fopwri1;:/
fopwri1;:?
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\n
#prline
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:-
fopwri1;:D
fopwri1;:O
fopwri1;:S
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;overview--label
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:-
fopwri1;:D
fopwri1;:O
fopwri1;:S
fopwri1;:\s
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-37
s1push1
goto;>divider--label
null;;goto--jumper-37
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:D
fopwri1;:O
fopwri1;:S
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:k
fopwri1;:-
fopwri1;:b
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:-
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:n
fopwri1;:e
fopwri1;:e
fopwri1;:d
fopwri1;:s
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;divider--label
#Set text colors
dataread1;>*000000
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*+0+---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#label
null;;command_txe_help--label
#prline
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-51
s1push1
goto;>divider--label
null;;goto--jumper-51
#prline
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:[
fopwri1;:c
fopwri1;:m
fopwri1;:d
fopwri1;:]
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:P
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:t
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:r
fopwri1;:i
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:s
fopwri1;:o
fopwri1;:l
fopwri1;:e
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:'
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:?
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:*
fopwri1;::
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:l
fopwri1;:e
fopwri1;:c
fopwri1;:t
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:u
fopwri1;:r
fopwri1;:r
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:A
fopwri1;::
fopwri1;:'
fopwri1;:\m
fopwri1;:\s
fopwri1;:'
fopwri1;:B
fopwri1;::
fopwri1;:'
fopwri1;:\m
fopwri1;:\s
fopwri1;:'
fopwri1;:R
fopwri1;::
fopwri1;:'
fopwri1;:)
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:-
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:i
fopwri1;:t
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:P
fopwri1;:r
fopwri1;:i
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:V
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:d
fopwri1;:i
fopwri1;:r
fopwri1;:\s
fopwri1;:<
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:>
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:i
fopwri1;:l
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:C
fopwri1;:U
fopwri1;:R
fopwri1;:R
fopwri1;:E
fopwri1;:N
fopwri1;:T
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:.
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:f
fopwri1;:i
fopwri1;:l
fopwri1;:e
fopwri1;:n
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:e
fopwri1;:x
fopwri1;:e
fopwri1;:c
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:a
fopwri1;:r
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:c
fopwri1;:u
fopwri1;:r
fopwri1;:r
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:k
fopwri1;:\m
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:k
fopwri1;:s
fopwri1;:\m
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:<
fopwri1;:e
fopwri1;:x
fopwri1;:e
fopwri1;:c
fopwri1;:>
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\m
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:-
fopwri1;:l
fopwri1;:o
fopwri1;:a
fopwri1;:d
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:f
fopwri1;:i
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:c
fopwri1;:h
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:*
fopwri1;::
fopwri1;:\b
fopwri1;:<
fopwri1;:e
fopwri1;:x
fopwri1;:e
fopwri1;:c
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:r
fopwri1;:u
fopwri1;:n
fopwri1;:\s
fopwri1;:<
fopwri1;:e
fopwri1;:x
fopwri1;:e
fopwri1;:c
fopwri1;:>
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:(
fopwri1;:*
fopwri1;:)
fopwri1;:\s
fopwri1;:e
fopwri1;:.
fopwri1;:g
fopwri1;:.
fopwri1;:\s
fopwri1;:A
fopwri1;::
fopwri1;:\b
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:A
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:s
fopwri1;:h
fopwri1;:u
fopwri1;:t
fopwri1;:d
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:u
fopwri1;:t
fopwri1;:d
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:-
fopwri1;:D
fopwri1;:O
fopwri1;:S
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#module include: line 65: dosargs as dosargs
includeas;dosargs,dosargs
#END OF FILE
