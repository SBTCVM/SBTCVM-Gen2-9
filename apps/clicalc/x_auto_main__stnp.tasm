#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/clicalc/auto_main.stnp
null;0;gett_ch
null;0;gett_val
null;0;gett_cnt
null;0;gett_decv
null;0;gett_numb
null;0;gett_disp
null;0;getd_ch
null;0;getd_val
null;0;getd_cnt
null;0;getd_decv
null;0;getd_numb
null;0;getd_disp
null;0;getd_negflg
null;0+0---;promptcolor
null;0;monitor_wri_buff
null;0;monitor_ran_buff
null;0;monitor_inst_buff
null;0;monitor_data_buff
null;0;mon_dmp_stop
null;0;WRITEPROTECT_END
null;0;mem_stat_buff
null;10x1;inmode
null;0;valbuff
null;:d;promptprefix
null;0;v1buff
null;0;v2buff
null;0;resbuff
null;0;resbuff2
null;0;kb
null;+++--0;*+++--0
null;+++---;*+++---
null;0++---;*0++---
null;:a;:a
null;:A;:A
null;:s;:s
null;:S;:S
null;:m;:m
null;:M;:M
null;:d;:d
null;:D;:D
null;:r;:r
null;:R;:R
null;:i;:i
null;:I;:I
null;:b;:b
null;:B;:B
null;:h;:h
null;:H;:H
null;:?;:?
null;:/;:/
null;:1;:1
null;:!;:!
null;:2;:2
null;:@;:@
null;:p;:p
null;:P;:P
null;:q;:q
null;:Q;:Q
null;+0----;*+0----
null;+-0---;*+-0---
null;10x0;@0
null;10x1;@1
null;10x2;@2
null;:\x;:\x
null;:0;:0
null;:);:)
null;:-;:-
null;10x-1;@-1
null;:_;:_
null;:n;:n
null;:N;:N
null;:+;:+
null;:=;:=
null;:\n;:\n
null;10x3;@3
null;10x9;@9
null;10x10;@10
null;:3;:3
null;:4;:4
null;10x4;@4
null;:5;:5
null;10x5;@5
null;:6;:6
null;10x6;@6
null;:7;:7
null;10x7;@7
null;:8;:8
null;10x8;@8
null;:9;:9
null;:o;:o
null;:O;:O
null;:l;:l
null;:L;:L
null;:k;:k
null;:K;:K
null;:u;:u
null;:U;:U
null;:j;:j
null;:J;:J
null;:f;:f
null;:F;:F
null;+00---;*+00---
null;0+0---;*0+0---
null;10x23;@23
null;+0+---;*+0+---
null;++0---;*++0---
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #32-0
setreg1;>END_OF_WRITE_PROTECT#SSTNPL Source Line: '32-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>WRITEPROTECT_END
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:/
fopwri1;:d
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:m
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:V
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:2
fopwri1;:.
fopwri1;:3
fopwri1;:\n
#prline
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:'
fopwri1;:h
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\m
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:'
fopwri1;:?
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-53-0
s1push1
goto;>do_mode_decimal--label
zerosize;;goto--jumper-53-0
#label
zerosize;;main--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#Dump (character)
dataread1;>promptprefix
iowrite1;>io.ttywr
#print
fopwri1;:>
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-59-0
gotoif;>keyprompt--loop-59-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#Dump (character)
dataread1;>kb
iowrite1;>io.ttywr
#print newline
fopwri1;:\n
#conditional subroutine goto
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-63-0
goto;>goto--jumper-63-0
setreg1;>goto--jumper-63-0;goto--branch-63-0
s1push1
goto;>add--label
zerosize;;goto--jumper-63-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:A
gotoif;>goto--branch-64-0
goto;>goto--jumper-64-0
setreg1;>goto--jumper-64-0;goto--branch-64-0
s1push1
goto;>add--label
zerosize;;goto--jumper-64-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-65-0
goto;>goto--jumper-65-0
setreg1;>goto--jumper-65-0;goto--branch-65-0
s1push1
goto;>sub--label
zerosize;;goto--jumper-65-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:S
gotoif;>goto--branch-66-0
goto;>goto--jumper-66-0
setreg1;>goto--jumper-66-0;goto--branch-66-0
s1push1
goto;>sub--label
zerosize;;goto--jumper-66-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:m
gotoif;>goto--branch-67-0
goto;>goto--jumper-67-0
setreg1;>goto--jumper-67-0;goto--branch-67-0
s1push1
goto;>mul--label
zerosize;;goto--jumper-67-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:M
gotoif;>goto--branch-68-0
goto;>goto--jumper-68-0
setreg1;>goto--jumper-68-0;goto--branch-68-0
s1push1
goto;>mul--label
zerosize;;goto--jumper-68-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:d
gotoif;>goto--branch-69-0
goto;>goto--jumper-69-0
setreg1;>goto--jumper-69-0;goto--branch-69-0
s1push1
goto;>div--label
zerosize;;goto--jumper-69-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:D
gotoif;>goto--branch-70-0
goto;>goto--jumper-70-0
setreg1;>goto--jumper-70-0;goto--branch-70-0
s1push1
goto;>div--label
zerosize;;goto--jumper-70-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:r
gotoif;>goto--branch-71-0
goto;>goto--jumper-71-0
setreg1;>goto--jumper-71-0;goto--branch-71-0
s1push1
goto;>divm--label
zerosize;;goto--jumper-71-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:R
gotoif;>goto--branch-72-0
goto;>goto--jumper-72-0
setreg1;>goto--jumper-72-0;goto--branch-72-0
s1push1
goto;>divm--label
zerosize;;goto--jumper-72-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:i
gotoif;>goto--branch-73-0
goto;>goto--jumper-73-0
setreg1;>goto--jumper-73-0;goto--branch-73-0
s1push1
goto;>inv--label
zerosize;;goto--jumper-73-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:I
gotoif;>goto--branch-74-0
goto;>goto--jumper-74-0
setreg1;>goto--jumper-74-0;goto--branch-74-0
s1push1
goto;>inv--label
zerosize;;goto--jumper-74-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:b
gotoif;>goto--branch-75-0
goto;>goto--jumper-75-0
setreg1;>goto--jumper-75-0;goto--branch-75-0
s1push1
goto;>abso--label
zerosize;;goto--jumper-75-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:B
gotoif;>goto--branch-76-0
goto;>goto--jumper-76-0
setreg1;>goto--jumper-76-0;goto--branch-76-0
s1push1
goto;>abso--label
zerosize;;goto--jumper-76-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:h
gotoif;>goto--branch-77-0
goto;>goto--jumper-77-0
setreg1;>goto--jumper-77-0;goto--branch-77-0
s1push1
goto;>help--label
zerosize;;goto--jumper-77-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:H
gotoif;>goto--branch-78-0
goto;>goto--jumper-78-0
setreg1;>goto--jumper-78-0;goto--branch-78-0
s1push1
goto;>help--label
zerosize;;goto--jumper-78-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:?
gotoif;>goto--branch-79-0
goto;>goto--jumper-79-0
setreg1;>goto--jumper-79-0;goto--branch-79-0
s1push1
goto;>about--label
zerosize;;goto--jumper-79-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:/
gotoif;>goto--branch-80-0
goto;>goto--jumper-80-0
setreg1;>goto--jumper-80-0;goto--branch-80-0
s1push1
goto;>about--label
zerosize;;goto--jumper-80-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:1
gotoif;>goto--branch-81-0
goto;>goto--jumper-81-0
setreg1;>goto--jumper-81-0;goto--branch-81-0
s1push1
goto;>do_mode_decimal--label
zerosize;;goto--jumper-81-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:!
gotoif;>goto--branch-82-0
goto;>goto--jumper-82-0
setreg1;>goto--jumper-82-0;goto--branch-82-0
s1push1
goto;>do_mode_decimal--label
zerosize;;goto--jumper-82-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:2
gotoif;>goto--branch-83-0
goto;>goto--jumper-83-0
setreg1;>goto--jumper-83-0;goto--branch-83-0
s1push1
goto;>do_mode_ternary--label
zerosize;;goto--jumper-83-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:@
gotoif;>goto--branch-84-0
goto;>goto--jumper-84-0
setreg1;>goto--jumper-84-0;goto--branch-84-0
s1push1
goto;>do_mode_ternary--label
zerosize;;goto--jumper-84-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:p
gotoif;>goto--branch-85-0
goto;>goto--jumper-85-0
setreg1;>goto--jumper-85-0;goto--branch-85-0
s1push1
goto;>monitor_main--label
zerosize;;goto--jumper-85-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:P
gotoif;>goto--branch-86-0
goto;>goto--jumper-86-0
setreg1;>goto--jumper-86-0;goto--branch-86-0
s1push1
goto;>monitor_main--label
zerosize;;goto--jumper-86-0
#conditional stop
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-87-0
goto;>goto--jumper-87-0
stop;;goto--branch-87-0

zerosize;;goto--jumper-87-0
#conditional stop
dataread1;>kb
dataread2;>:Q
gotoif;>goto--branch-88-0
goto;>goto--jumper-88-0
stop;;goto--branch-88-0

zerosize;;goto--jumper-88-0
#goto 
goto;>main--label
#label
zerosize;;do_mode_ternary--label
#Set text colors
dataread1;>*+0----
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\s
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:N
fopwri1;:A
fopwri1;:R
fopwri1;:Y
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:E
fopwri1;:N
fopwri1;:A
fopwri1;:B
fopwri1;:L
fopwri1;:E
fopwri1;:D
fopwri1;:\s
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>inmode
#val (used with set to change variable value during runtime.)
setreg1;:t
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>promptprefix
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;do_mode_decimal--label
#Set text colors
dataread1;>*+-0---
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\s
fopwri1;:D
fopwri1;:E
fopwri1;:C
fopwri1;:I
fopwri1;:M
fopwri1;:A
fopwri1;:L
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:E
fopwri1;:N
fopwri1;:A
fopwri1;:B
fopwri1;:L
fopwri1;:E
fopwri1;:D
fopwri1;:\s
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>inmode
#val (used with set to change variable value during runtime.)
setreg1;:d
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>promptprefix
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;add--label
#prline
fopwri1;:A
fopwri1;:D
fopwri1;:D
fopwri1;:I
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-119-0
s1push1
goto;>getnums--label
zerosize;;goto--jumper-119-0
#add (2op math)
dataread1;>v1buff
dataread2;>v2buff
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:s
fopwri1;:u
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;inv--label
#prline
fopwri1;:I
fopwri1;:N
fopwri1;:V
fopwri1;:E
fopwri1;:R
fopwri1;:T
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-132-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-132-0
#Get signwise/tritwise inversion of var
dataread1;>v1buff
invert1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;abso--label
#prline
fopwri1;:A
fopwri1;:B
fopwri1;:S
fopwri1;:O
fopwri1;:L
fopwri1;:U
fopwri1;:T
fopwri1;:E
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-146-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-146-0
#Get abs of var
dataread1;>v1buff
abs1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;sub--label
#prline
fopwri1;:S
fopwri1;:U
fopwri1;:B
fopwri1;:T
fopwri1;:R
fopwri1;:A
fopwri1;:C
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-160-0
s1push1
goto;>getnums--label
zerosize;;goto--jumper-160-0
#subtract (2op math)
dataread1;>v1buff
dataread2;>v2buff
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;mul--label
#prline
fopwri1;:M
fopwri1;:U
fopwri1;:L
fopwri1;:T
fopwri1;:I
fopwri1;:P
fopwri1;:L
fopwri1;:I
fopwri1;:C
fopwri1;:A
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-174-0
s1push1
goto;>getnums--label
zerosize;;goto--jumper-174-0
#multiply (2op math)
dataread1;>v1buff
dataread2;>v2buff
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;div--label
#prline
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:S
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-187-0
s1push1
goto;>getnums--label
zerosize;;goto--jumper-187-0
#conditional goto
dataread1;>v2buff
dataread2;>@0
gotoif;>goto--branch-189-0
goto;>goto--jumper-189-0
setreg1;>goto--jumper-189-0;goto--branch-189-0
goto;>div_err--label
zerosize;;goto--jumper-189-0
#divide (2op math)
dataread1;>v1buff
dataread2;>v2buff
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;divm--label
#prline
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:S
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;:\s
fopwri1;:(
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:u
fopwri1;:l
fopwri1;:o
fopwri1;:)
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-202-0
s1push1
goto;>getnums--label
zerosize;;goto--jumper-202-0
#conditional goto
dataread1;>v2buff
dataread2;>@0
gotoif;>goto--branch-204-0
goto;>goto--jumper-204-0
setreg1;>goto--jumper-204-0;goto--branch-204-0
goto;>div_err--label
zerosize;;goto--jumper-204-0
#divide modulo (2op math)
dataread1;>v1buff
dataread2;>v2buff
divmod
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#set2 (used for asm, or get2)
datawrite2;>resbuff2
#print
fopwri1;:r
fopwri1;:e
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#print
fopwri1;:q
fopwri1;:u
fopwri1;:o
fopwri1;:t
fopwri1;:i
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff2
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff2
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;div_err--label
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;::
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\m
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:e
fopwri1;:r
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getnums--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:0
fopwri1;:?
fopwri1;:\s
fopwri1;:>
#goto (extra code stores away return address.)
setreg1;>goto--jumper-230-0
s1push1
goto;>inget--label
zerosize;;goto--jumper-230-0
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#copy variables 
dataread1;>valbuff
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:0
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:1
fopwri1;:?
fopwri1;:\s
fopwri1;:>
#goto (extra code stores away return address.)
setreg1;>goto--jumper-241-0
s1push1
goto;>inget--label
zerosize;;goto--jumper-241-0
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#copy variables 
dataread1;>valbuff
datawrite1;>v2buff
#print newline
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:1
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v2buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v2buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;get1num--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:?
fopwri1;:\s
fopwri1;:>
#goto (extra code stores away return address.)
setreg1;>goto--jumper-256-0
s1push1
goto;>inget--label
zerosize;;goto--jumper-256-0
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#copy variables 
dataread1;>valbuff
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;inget--label
#conditional subroutine goto
dataread1;>inmode
dataread2;>@1
gotoif;>goto--branch-269-0
goto;>goto--jumper-269-0
setreg1;>goto--jumper-269-0;goto--branch-269-0
s1push1
goto;>getd--label
zerosize;;goto--jumper-269-0
#conditional set
dataread1;>inmode
dataread2;>@1
gotoif;>goto--branch-270-0
goto;>goto--jumper-270-0
dataread1;>getd_val;goto--branch-270-0
datawrite1;>valbuff
zerosize;;goto--jumper-270-0
#conditional subroutine goto
dataread1;>inmode
dataread2;>@2
gotoif;>goto--branch-271-0
goto;>goto--jumper-271-0
setreg1;>goto--jumper-271-0;goto--branch-271-0
s1push1
goto;>gett--label
zerosize;;goto--jumper-271-0
#conditional set
dataread1;>inmode
dataread2;>@2
gotoif;>goto--branch-272-0
goto;>goto--jumper-272-0
dataread1;>gett_val;goto--branch-272-0
datawrite1;>valbuff
zerosize;;goto--jumper-272-0
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;gett--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_val
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#label
zerosize;;gett_loop--label
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-284-0
gotoif;>keyprompt--loop-284-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_ch
#conditional set
dataread1;>gett_ch
dataread2;>:\x
gotoif;>goto--branch-286-0
goto;>goto--jumper-286-0
dataread1;>:\x;goto--branch-286-0
datawrite1;>gett_disp
zerosize;;goto--jumper-286-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:\x
gotoif;>goto--branch-287-0
goto;>goto--jumper-287-0
setreg1;>goto--jumper-287-0;goto--branch-287-0
s1push1
goto;>gett_backone--label
zerosize;;goto--jumper-287-0
#conditional set
dataread1;>gett_ch
dataread2;>:0
gotoif;>goto--branch-289-0
goto;>goto--jumper-289-0
dataread1;>@0;goto--branch-289-0
datawrite1;>gett_decv
zerosize;;goto--jumper-289-0
#conditional set
dataread1;>gett_ch
dataread2;>:0
gotoif;>goto--branch-290-0
goto;>goto--jumper-290-0
dataread1;>:0;goto--branch-290-0
datawrite1;>gett_disp
zerosize;;goto--jumper-290-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:0
gotoif;>goto--branch-291-0
goto;>goto--jumper-291-0
setreg1;>goto--jumper-291-0;goto--branch-291-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-291-0
#conditional set
dataread1;>gett_ch
dataread2;>:)
gotoif;>goto--branch-292-0
goto;>goto--jumper-292-0
dataread1;>@0;goto--branch-292-0
datawrite1;>gett_decv
zerosize;;goto--jumper-292-0
#conditional set
dataread1;>gett_ch
dataread2;>:)
gotoif;>goto--branch-293-0
goto;>goto--jumper-293-0
dataread1;>:0;goto--branch-293-0
datawrite1;>gett_disp
zerosize;;goto--jumper-293-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:)
gotoif;>goto--branch-294-0
goto;>goto--jumper-294-0
setreg1;>goto--jumper-294-0;goto--branch-294-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-294-0
#conditional set
dataread1;>gett_ch
dataread2;>:-
gotoif;>goto--branch-297-0
goto;>goto--jumper-297-0
dataread1;>@-1;goto--branch-297-0
datawrite1;>gett_decv
zerosize;;goto--jumper-297-0
#conditional set
dataread1;>gett_ch
dataread2;>:-
gotoif;>goto--branch-298-0
goto;>goto--jumper-298-0
dataread1;>:-;goto--branch-298-0
datawrite1;>gett_disp
zerosize;;goto--jumper-298-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:-
gotoif;>goto--branch-299-0
goto;>goto--jumper-299-0
setreg1;>goto--jumper-299-0;goto--branch-299-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-299-0
#conditional set
dataread1;>gett_ch
dataread2;>:_
gotoif;>goto--branch-300-0
goto;>goto--jumper-300-0
dataread1;>@-1;goto--branch-300-0
datawrite1;>gett_decv
zerosize;;goto--jumper-300-0
#conditional set
dataread1;>gett_ch
dataread2;>:_
gotoif;>goto--branch-301-0
goto;>goto--jumper-301-0
dataread1;>:-;goto--branch-301-0
datawrite1;>gett_disp
zerosize;;goto--jumper-301-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:_
gotoif;>goto--branch-302-0
goto;>goto--jumper-302-0
setreg1;>goto--jumper-302-0;goto--branch-302-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-302-0
#conditional set
dataread1;>gett_ch
dataread2;>:n
gotoif;>goto--branch-303-0
goto;>goto--jumper-303-0
dataread1;>@-1;goto--branch-303-0
datawrite1;>gett_decv
zerosize;;goto--jumper-303-0
#conditional set
dataread1;>gett_ch
dataread2;>:n
gotoif;>goto--branch-304-0
goto;>goto--jumper-304-0
dataread1;>:-;goto--branch-304-0
datawrite1;>gett_disp
zerosize;;goto--jumper-304-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:n
gotoif;>goto--branch-305-0
goto;>goto--jumper-305-0
setreg1;>goto--jumper-305-0;goto--branch-305-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-305-0
#conditional set
dataread1;>gett_ch
dataread2;>:N
gotoif;>goto--branch-306-0
goto;>goto--jumper-306-0
dataread1;>@-1;goto--branch-306-0
datawrite1;>gett_decv
zerosize;;goto--jumper-306-0
#conditional set
dataread1;>gett_ch
dataread2;>:N
gotoif;>goto--branch-307-0
goto;>goto--jumper-307-0
dataread1;>:-;goto--branch-307-0
datawrite1;>gett_disp
zerosize;;goto--jumper-307-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:N
gotoif;>goto--branch-308-0
goto;>goto--jumper-308-0
setreg1;>goto--jumper-308-0;goto--branch-308-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-308-0
#conditional set
dataread1;>gett_ch
dataread2;>:+
gotoif;>goto--branch-311-0
goto;>goto--jumper-311-0
dataread1;>@1;goto--branch-311-0
datawrite1;>gett_decv
zerosize;;goto--jumper-311-0
#conditional set
dataread1;>gett_ch
dataread2;>:+
gotoif;>goto--branch-312-0
goto;>goto--jumper-312-0
dataread1;>:+;goto--branch-312-0
datawrite1;>gett_disp
zerosize;;goto--jumper-312-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:+
gotoif;>goto--branch-313-0
goto;>goto--jumper-313-0
setreg1;>goto--jumper-313-0;goto--branch-313-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-313-0
#conditional set
dataread1;>gett_ch
dataread2;>:=
gotoif;>goto--branch-314-0
goto;>goto--jumper-314-0
dataread1;>@1;goto--branch-314-0
datawrite1;>gett_decv
zerosize;;goto--jumper-314-0
#conditional set
dataread1;>gett_ch
dataread2;>:=
gotoif;>goto--branch-315-0
goto;>goto--jumper-315-0
dataread1;>:+;goto--branch-315-0
datawrite1;>gett_disp
zerosize;;goto--jumper-315-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:=
gotoif;>goto--branch-316-0
goto;>goto--jumper-316-0
setreg1;>goto--jumper-316-0;goto--branch-316-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-316-0
#conditional set
dataread1;>gett_ch
dataread2;>:p
gotoif;>goto--branch-317-0
goto;>goto--jumper-317-0
dataread1;>@1;goto--branch-317-0
datawrite1;>gett_decv
zerosize;;goto--jumper-317-0
#conditional set
dataread1;>gett_ch
dataread2;>:p
gotoif;>goto--branch-318-0
goto;>goto--jumper-318-0
dataread1;>:+;goto--branch-318-0
datawrite1;>gett_disp
zerosize;;goto--jumper-318-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:p
gotoif;>goto--branch-319-0
goto;>goto--jumper-319-0
setreg1;>goto--jumper-319-0;goto--branch-319-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-319-0
#conditional set
dataread1;>gett_ch
dataread2;>:P
gotoif;>goto--branch-320-0
goto;>goto--jumper-320-0
dataread1;>@1;goto--branch-320-0
datawrite1;>gett_decv
zerosize;;goto--jumper-320-0
#conditional set
dataread1;>gett_ch
dataread2;>:P
gotoif;>goto--branch-321-0
goto;>goto--jumper-321-0
dataread1;>:+;goto--branch-321-0
datawrite1;>gett_disp
zerosize;;goto--jumper-321-0
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:P
gotoif;>goto--branch-322-0
goto;>goto--jumper-322-0
setreg1;>goto--jumper-322-0;goto--branch-322-0
s1push1
goto;>gett_donum--label
zerosize;;goto--jumper-322-0
#conditional goto
dataread1;>gett_ch
dataread2;>:\n
gotoif;>goto--branch-325-0
goto;>goto--jumper-325-0
setreg1;>goto--jumper-325-0;goto--branch-325-0
goto;>gett_end--label
zerosize;;goto--jumper-325-0
#conditional stop
dataread1;>gett_ch
dataread2;>:q
gotoif;>goto--branch-327-0
goto;>goto--jumper-327-0
stop;;goto--branch-327-0

zerosize;;goto--jumper-327-0
#conditional stop
dataread1;>gett_ch
dataread2;>:Q
gotoif;>goto--branch-328-0
goto;>goto--jumper-328-0
stop;;goto--branch-328-0

zerosize;;goto--jumper-328-0
#goto 
goto;>gett_loop--label
#label
zerosize;;gett_end--label
#stack reverse (uses stack 2)
s2reverse
#label
zerosize;;gett_end_loop--label
#conditional return
dataread1;>gett_cnt
dataread2;>@0
gotoif;>goto--branch-335-0
goto;>goto--jumper-335-0
s1pop1;;goto--branch-335-0
gotoreg1
zerosize;;goto--jumper-335-0
#subtract (2op math)
dataread1;>gett_cnt
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_numb
#multiply (2op math)
dataread1;>gett_val
dataread2;>@3
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_val
#add (2op math)
dataread1;>gett_val
dataread2;>gett_numb
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_val
#goto 
goto;>gett_end_loop--label
#label
zerosize;;gett_donum--label
#conditional return
dataread1;>gett_cnt
dataread2;>@9
gotoif;>goto--branch-352-0
goto;>goto--jumper-352-0
s1pop1;;goto--branch-352-0
gotoreg1
zerosize;;goto--jumper-352-0
#Dump (character)
dataread1;>gett_disp
iowrite1;>io.ttywr
#get(1) (may be used with set, or asm code)
dataread1;>gett_decv
#stack push (uses stack 2)
s2push1
#add (2op math)
dataread1;>gett_cnt
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;gett_backone--label
#conditional return
dataread1;>gett_cnt
dataread2;>@0
gotoif;>goto--branch-365-0
goto;>goto--jumper-365-0
s1pop1;;goto--branch-365-0
gotoreg1
zerosize;;goto--jumper-365-0
#Dump (character)
dataread1;>gett_disp
iowrite1;>io.ttywr
#subtract (2op math)
dataread1;>gett_cnt
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#stack pop (uses stack 2)
s2pop1
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getd--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_val
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_cnt
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_negflg
#label
zerosize;;getd_loop--label
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-382-0
gotoif;>keyprompt--loop-382-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_ch
#conditional set
dataread1;>getd_ch
dataread2;>:\x
gotoif;>goto--branch-384-0
goto;>goto--jumper-384-0
dataread1;>:\x;goto--branch-384-0
datawrite1;>getd_disp
zerosize;;goto--jumper-384-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:\x
gotoif;>goto--branch-385-0
goto;>goto--jumper-385-0
setreg1;>goto--jumper-385-0;goto--branch-385-0
s1push1
goto;>getd_backone--label
zerosize;;goto--jumper-385-0
#conditional set
dataread1;>getd_ch
dataread2;>:-
gotoif;>goto--branch-387-0
goto;>goto--jumper-387-0
dataread1;>@10;goto--branch-387-0
datawrite1;>getd_decv
zerosize;;goto--jumper-387-0
#conditional set
dataread1;>getd_ch
dataread2;>:-
gotoif;>goto--branch-388-0
goto;>goto--jumper-388-0
dataread1;>:-;goto--branch-388-0
datawrite1;>getd_disp
zerosize;;goto--jumper-388-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:-
gotoif;>goto--branch-389-0
goto;>goto--jumper-389-0
setreg1;>goto--jumper-389-0;goto--branch-389-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-389-0
#conditional set
dataread1;>getd_ch
dataread2;>:0
gotoif;>goto--branch-391-0
goto;>goto--jumper-391-0
dataread1;>@0;goto--branch-391-0
datawrite1;>getd_decv
zerosize;;goto--jumper-391-0
#conditional set
dataread1;>getd_ch
dataread2;>:0
gotoif;>goto--branch-392-0
goto;>goto--jumper-392-0
dataread1;>:0;goto--branch-392-0
datawrite1;>getd_disp
zerosize;;goto--jumper-392-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:0
gotoif;>goto--branch-393-0
goto;>goto--jumper-393-0
setreg1;>goto--jumper-393-0;goto--branch-393-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-393-0
#conditional set
dataread1;>getd_ch
dataread2;>:1
gotoif;>goto--branch-394-0
goto;>goto--jumper-394-0
dataread1;>@1;goto--branch-394-0
datawrite1;>getd_decv
zerosize;;goto--jumper-394-0
#conditional set
dataread1;>getd_ch
dataread2;>:1
gotoif;>goto--branch-395-0
goto;>goto--jumper-395-0
dataread1;>:1;goto--branch-395-0
datawrite1;>getd_disp
zerosize;;goto--jumper-395-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:1
gotoif;>goto--branch-396-0
goto;>goto--jumper-396-0
setreg1;>goto--jumper-396-0;goto--branch-396-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-396-0
#conditional set
dataread1;>getd_ch
dataread2;>:2
gotoif;>goto--branch-397-0
goto;>goto--jumper-397-0
dataread1;>@2;goto--branch-397-0
datawrite1;>getd_decv
zerosize;;goto--jumper-397-0
#conditional set
dataread1;>getd_ch
dataread2;>:2
gotoif;>goto--branch-398-0
goto;>goto--jumper-398-0
dataread1;>:2;goto--branch-398-0
datawrite1;>getd_disp
zerosize;;goto--jumper-398-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:2
gotoif;>goto--branch-399-0
goto;>goto--jumper-399-0
setreg1;>goto--jumper-399-0;goto--branch-399-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-399-0
#conditional set
dataread1;>getd_ch
dataread2;>:3
gotoif;>goto--branch-400-0
goto;>goto--jumper-400-0
dataread1;>@3;goto--branch-400-0
datawrite1;>getd_decv
zerosize;;goto--jumper-400-0
#conditional set
dataread1;>getd_ch
dataread2;>:3
gotoif;>goto--branch-401-0
goto;>goto--jumper-401-0
dataread1;>:3;goto--branch-401-0
datawrite1;>getd_disp
zerosize;;goto--jumper-401-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:3
gotoif;>goto--branch-402-0
goto;>goto--jumper-402-0
setreg1;>goto--jumper-402-0;goto--branch-402-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-402-0
#conditional set
dataread1;>getd_ch
dataread2;>:4
gotoif;>goto--branch-403-0
goto;>goto--jumper-403-0
dataread1;>@4;goto--branch-403-0
datawrite1;>getd_decv
zerosize;;goto--jumper-403-0
#conditional set
dataread1;>getd_ch
dataread2;>:4
gotoif;>goto--branch-404-0
goto;>goto--jumper-404-0
dataread1;>:4;goto--branch-404-0
datawrite1;>getd_disp
zerosize;;goto--jumper-404-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:4
gotoif;>goto--branch-405-0
goto;>goto--jumper-405-0
setreg1;>goto--jumper-405-0;goto--branch-405-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-405-0
#conditional set
dataread1;>getd_ch
dataread2;>:5
gotoif;>goto--branch-406-0
goto;>goto--jumper-406-0
dataread1;>@5;goto--branch-406-0
datawrite1;>getd_decv
zerosize;;goto--jumper-406-0
#conditional set
dataread1;>getd_ch
dataread2;>:5
gotoif;>goto--branch-407-0
goto;>goto--jumper-407-0
dataread1;>:5;goto--branch-407-0
datawrite1;>getd_disp
zerosize;;goto--jumper-407-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:5
gotoif;>goto--branch-408-0
goto;>goto--jumper-408-0
setreg1;>goto--jumper-408-0;goto--branch-408-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-408-0
#conditional set
dataread1;>getd_ch
dataread2;>:6
gotoif;>goto--branch-409-0
goto;>goto--jumper-409-0
dataread1;>@6;goto--branch-409-0
datawrite1;>getd_decv
zerosize;;goto--jumper-409-0
#conditional set
dataread1;>getd_ch
dataread2;>:6
gotoif;>goto--branch-410-0
goto;>goto--jumper-410-0
dataread1;>:6;goto--branch-410-0
datawrite1;>getd_disp
zerosize;;goto--jumper-410-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:6
gotoif;>goto--branch-411-0
goto;>goto--jumper-411-0
setreg1;>goto--jumper-411-0;goto--branch-411-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-411-0
#conditional set
dataread1;>getd_ch
dataread2;>:7
gotoif;>goto--branch-412-0
goto;>goto--jumper-412-0
dataread1;>@7;goto--branch-412-0
datawrite1;>getd_decv
zerosize;;goto--jumper-412-0
#conditional set
dataread1;>getd_ch
dataread2;>:7
gotoif;>goto--branch-413-0
goto;>goto--jumper-413-0
dataread1;>:7;goto--branch-413-0
datawrite1;>getd_disp
zerosize;;goto--jumper-413-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:7
gotoif;>goto--branch-414-0
goto;>goto--jumper-414-0
setreg1;>goto--jumper-414-0;goto--branch-414-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-414-0
#conditional set
dataread1;>getd_ch
dataread2;>:8
gotoif;>goto--branch-415-0
goto;>goto--jumper-415-0
dataread1;>@8;goto--branch-415-0
datawrite1;>getd_decv
zerosize;;goto--jumper-415-0
#conditional set
dataread1;>getd_ch
dataread2;>:8
gotoif;>goto--branch-416-0
goto;>goto--jumper-416-0
dataread1;>:8;goto--branch-416-0
datawrite1;>getd_disp
zerosize;;goto--jumper-416-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:8
gotoif;>goto--branch-417-0
goto;>goto--jumper-417-0
setreg1;>goto--jumper-417-0;goto--branch-417-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-417-0
#conditional set
dataread1;>getd_ch
dataread2;>:9
gotoif;>goto--branch-418-0
goto;>goto--jumper-418-0
dataread1;>@9;goto--branch-418-0
datawrite1;>getd_decv
zerosize;;goto--jumper-418-0
#conditional set
dataread1;>getd_ch
dataread2;>:9
gotoif;>goto--branch-419-0
goto;>goto--jumper-419-0
dataread1;>:9;goto--branch-419-0
datawrite1;>getd_disp
zerosize;;goto--jumper-419-0
#conditional subroutine goto
dataread1;>getd_ch
dataread2;>:9
gotoif;>goto--branch-420-0
goto;>goto--jumper-420-0
setreg1;>goto--jumper-420-0;goto--branch-420-0
s1push1
goto;>getd_donum--label
zerosize;;goto--jumper-420-0
#conditional goto
dataread1;>getd_ch
dataread2;>:\n
gotoif;>goto--branch-423-0
goto;>goto--jumper-423-0
setreg1;>goto--jumper-423-0;goto--branch-423-0
goto;>getd_end--label
zerosize;;goto--jumper-423-0
#conditional stop
dataread1;>getd_ch
dataread2;>:q
gotoif;>goto--branch-425-0
goto;>goto--jumper-425-0
stop;;goto--branch-425-0

zerosize;;goto--jumper-425-0
#conditional stop
dataread1;>getd_ch
dataread2;>:Q
gotoif;>goto--branch-426-0
goto;>goto--jumper-426-0
stop;;goto--branch-426-0

zerosize;;goto--jumper-426-0
#goto 
goto;>getd_loop--label
#label
zerosize;;getd_end--label
#stack reverse (uses stack 2)
s2reverse
#label
zerosize;;getd_end_loop--label
#conditional goto
dataread1;>getd_cnt
dataread2;>@0
gotoif;>goto--branch-433-0
goto;>goto--jumper-433-0
setreg1;>goto--jumper-433-0;goto--branch-433-0
goto;>getd_negdo--label
zerosize;;goto--jumper-433-0
#subtract (2op math)
dataread1;>getd_cnt
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_cnt
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_numb
#conditional subroutine goto
dataread1;>getd_numb
dataread2;>@10
gotoif;>goto--branch-439-0
goto;>goto--jumper-439-0
setreg1;>goto--jumper-439-0;goto--branch-439-0
s1push1
goto;>getd_doneg--label
zerosize;;goto--jumper-439-0
#conditional goto
dataread1;>getd_numb
dataread2;>@10
gotoif;>goto--branch-440-0
goto;>goto--jumper-440-0
setreg1;>goto--jumper-440-0;goto--branch-440-0
goto;>getd_end_loop--label
zerosize;;goto--jumper-440-0
#multiply (2op math)
dataread1;>getd_val
dataread2;>@10
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_val
#add (2op math)
dataread1;>getd_val
dataread2;>getd_numb
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_val
#goto 
goto;>getd_end_loop--label
#label
zerosize;;getd_doneg--label
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_negflg
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getd_negdo--label
#conditional return
dataread1;>getd_negflg
dataread2;>@0
gotoif;>goto--branch-456-0
goto;>goto--jumper-456-0
s1pop1;;goto--branch-456-0
gotoreg1
zerosize;;goto--jumper-456-0
#Get signwise/tritwise inversion of var
dataread1;>getd_val
invert1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_val
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getd_donum--label
#conditional return
dataread1;>getd_cnt
dataread2;>@6
gotoif;>goto--branch-467-0
goto;>goto--jumper-467-0
s1pop1;;goto--branch-467-0
gotoreg1
zerosize;;goto--jumper-467-0
#Dump (character)
dataread1;>getd_disp
iowrite1;>io.ttywr
#get(1) (may be used with set, or asm code)
dataread1;>getd_decv
#stack push (uses stack 2)
s2push1
#add (2op math)
dataread1;>getd_cnt
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_cnt
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getd_backone--label
#conditional set
dataread1;>getd_cnt
dataread2;>@0
gotoif;>goto--branch-479-0
goto;>goto--jumper-479-0
dataread1;>@0;goto--branch-479-0
datawrite1;>getd_negflg
zerosize;;goto--jumper-479-0
#conditional return
dataread1;>getd_cnt
dataread2;>@0
gotoif;>goto--branch-480-0
goto;>goto--jumper-480-0
s1pop1;;goto--branch-480-0
gotoreg1
zerosize;;goto--jumper-480-0
#Dump (character)
dataread1;>getd_disp
iowrite1;>io.ttywr
#subtract (2op math)
dataread1;>getd_cnt
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>getd_cnt
#stack pop (uses stack 2)
s2pop1
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;about--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:A
fopwri1;:B
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:v
fopwri1;:2
fopwri1;:.
fopwri1;:3
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:/
fopwri1;:d
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:m
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:n
fopwri1;:i
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:9
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\m
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\m
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:\m
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#print
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\m
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;help--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:v
fopwri1;:2
fopwri1;:.
fopwri1;:3
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:/
fopwri1;:d
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:m
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:n
fopwri1;:i
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:O
fopwri1;:M
fopwri1;:M
fopwri1;:A
fopwri1;:N
fopwri1;:D
fopwri1;:S
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:a
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:t
fopwri1;:r
fopwri1;:a
fopwri1;:c
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:m
fopwri1;::
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:i
fopwri1;:p
fopwri1;:l
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:d
fopwri1;::
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:r
fopwri1;::
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:u
fopwri1;:l
fopwri1;:o
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:i
fopwri1;::
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:b
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:s
fopwri1;:o
fopwri1;:l
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:h
fopwri1;::
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:?
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:q
fopwri1;::
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:D
fopwri1;:E
fopwri1;:C
fopwri1;:I
fopwri1;:M
fopwri1;:A
fopwri1;:L
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:(
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:d
fopwri1;:>
fopwri1;:'
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:)
fopwri1;:\s
fopwri1;:(
fopwri1;:d
fopwri1;:e
fopwri1;:f
fopwri1;:a
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:2
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:N
fopwri1;:A
fopwri1;:R
fopwri1;:Y
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:(
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:t
fopwri1;:>
fopwri1;:'
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:p
fopwri1;::
fopwri1;:\s
fopwri1;:E
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:M
fopwri1;:O
fopwri1;:R
fopwri1;:Y
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:N
fopwri1;:I
fopwri1;:T
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:.
fopwri1;:\s
fopwri1;:(
fopwri1;:e
fopwri1;:x
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:i
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:)
fopwri1;:\s
fopwri1;:(
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:M
fopwri1;:e
fopwri1;:m
fopwri1;:'
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:W
fopwri1;:H
fopwri1;:E
fopwri1;:N
fopwri1;:\s
fopwri1;:E
fopwri1;:N
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:I
fopwri1;:N
fopwri1;:G
fopwri1;:\s
fopwri1;:N
fopwri1;:U
fopwri1;:M
fopwri1;:B
fopwri1;:E
fopwri1;:R
fopwri1;:S
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:+
fopwri1;:\m
fopwri1;:0
fopwri1;:\m
fopwri1;:-
fopwri1;:]
fopwri1;:/
fopwri1;:[
fopwri1;:p
fopwri1;:\m
fopwri1;:0
fopwri1;:\m
fopwri1;:n
fopwri1;:]
fopwri1;:\s
fopwri1;:W
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:N
fopwri1;:A
fopwri1;:R
fopwri1;:Y
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:0
fopwri1;:-
fopwri1;:9
fopwri1;:]
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:w
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:[
fopwri1;:-
fopwri1;:]
fopwri1;:\s
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:n
fopwri1;:e
fopwri1;:g
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:s
fopwri1;:\m
fopwri1;:\s
fopwri1;:W
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:D
fopwri1;:E
fopwri1;:C
fopwri1;:I
fopwri1;:M
fopwri1;:A
fopwri1;:L
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:q
fopwri1;:\m
fopwri1;:Q
fopwri1;:]
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:B
fopwri1;:A
fopwri1;:C
fopwri1;:K
fopwri1;:S
fopwri1;:P
fopwri1;:A
fopwri1;:C
fopwri1;:E
fopwri1;:]
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:-
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#print
fopwri1;:<
fopwri1;:i
fopwri1;:n
fopwri1;:p
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:l
fopwri1;:i
fopwri1;:m
fopwri1;:i
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:9
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:<
fopwri1;:-
fopwri1;:9
fopwri1;:8
fopwri1;:4
fopwri1;:1
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:9
fopwri1;:8
fopwri1;:4
fopwri1;:1
fopwri1;:>
fopwri1;:>
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;monitor_help--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:v
fopwri1;:2
fopwri1;:.
fopwri1;:3
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:/
fopwri1;:d
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:m
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:n
fopwri1;:i
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:O
fopwri1;:N
fopwri1;:I
fopwri1;:T
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:C
fopwri1;:O
fopwri1;:M
fopwri1;:M
fopwri1;:A
fopwri1;:N
fopwri1;:D
fopwri1;:S
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:p
fopwri1;::
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:o
fopwri1;::
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:\s
fopwri1;:I
fopwri1;:O
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:q
fopwri1;::
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:l
fopwri1;::
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:I
fopwri1;:O
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:?
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:i
fopwri1;::
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:\s
fopwri1;:D
fopwri1;:A
fopwri1;:T
fopwri1;:A
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:h
fopwri1;::
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:(
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:k
fopwri1;::
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:D
fopwri1;:A
fopwri1;:T
fopwri1;:A
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:*
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:m
fopwri1;::
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:t
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:u
fopwri1;::
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:\s
fopwri1;:I
fopwri1;:N
fopwri1;:S
fopwri1;:T
fopwri1;:R
fopwri1;:U
fopwri1;:C
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:d
fopwri1;::
fopwri1;:\s
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;:\s
fopwri1;:(
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:a
fopwri1;:/
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:j
fopwri1;::
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:I
fopwri1;:N
fopwri1;:S
fopwri1;:T
fopwri1;:R
fopwri1;:U
fopwri1;:C
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:*
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:f
fopwri1;::
fopwri1;:\s
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\s
fopwri1;:2
fopwri1;:4
fopwri1;:\s
fopwri1;:w
fopwri1;:o
fopwri1;:r
fopwri1;:d
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;:\s
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:s
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:a
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:I
fopwri1;:O
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:D
fopwri1;:E
fopwri1;:C
fopwri1;:I
fopwri1;:M
fopwri1;:A
fopwri1;:L
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:(
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:d
fopwri1;:M
fopwri1;:e
fopwri1;:m
fopwri1;:>
fopwri1;:'
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:)
fopwri1;:\s
fopwri1;:(
fopwri1;:d
fopwri1;:e
fopwri1;:f
fopwri1;:a
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:2
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:N
fopwri1;:A
fopwri1;:R
fopwri1;:Y
fopwri1;:\s
fopwri1;:M
fopwri1;:O
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:(
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:t
fopwri1;:M
fopwri1;:e
fopwri1;:m
fopwri1;:>
fopwri1;:'
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:*
fopwri1;:\s
fopwri1;:p
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:\s
fopwri1;:O
fopwri1;:N
fopwri1;:L
fopwri1;:Y
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:t
fopwri1;:s
fopwri1;:'
fopwri1;:\s
fopwri1;:(
fopwri1;:m
fopwri1;:)
fopwri1;:\n
#print
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:b
fopwri1;:e
fopwri1;:r
fopwri1;:s
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;monitor_main--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:E
fopwri1;:m
fopwri1;:b
fopwri1;:e
fopwri1;:d
fopwri1;:d
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:M
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:M
fopwri1;:o
fopwri1;:n
fopwri1;:i
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:(
fopwri1;:e
fopwri1;:x
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:i
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:!
fopwri1;:)
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-579-0
s1push1
goto;>memory_stats--label
zerosize;;goto--jumper-579-0
#label
zerosize;;monitor_loop--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#Dump (character)
dataread1;>promptprefix
iowrite1;>io.ttywr
#print
fopwri1;:M
fopwri1;:e
fopwri1;:m
fopwri1;:>
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-585-0
gotoif;>keyprompt--loop-585-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#Dump (character)
dataread1;>kb
iowrite1;>io.ttywr
#print newline
fopwri1;:\n
#conditional subroutine goto
dataread1;>kb
dataread2;>:1
gotoif;>goto--branch-589-0
goto;>goto--jumper-589-0
setreg1;>goto--jumper-589-0;goto--branch-589-0
s1push1
goto;>do_mode_decimal--label
zerosize;;goto--jumper-589-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:!
gotoif;>goto--branch-590-0
goto;>goto--jumper-590-0
setreg1;>goto--jumper-590-0;goto--branch-590-0
s1push1
goto;>do_mode_decimal--label
zerosize;;goto--jumper-590-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:2
gotoif;>goto--branch-591-0
goto;>goto--jumper-591-0
setreg1;>goto--jumper-591-0;goto--branch-591-0
s1push1
goto;>do_mode_ternary--label
zerosize;;goto--jumper-591-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:@
gotoif;>goto--branch-592-0
goto;>goto--jumper-592-0
setreg1;>goto--jumper-592-0;goto--branch-592-0
s1push1
goto;>do_mode_ternary--label
zerosize;;goto--jumper-592-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:h
gotoif;>goto--branch-593-0
goto;>goto--jumper-593-0
setreg1;>goto--jumper-593-0;goto--branch-593-0
s1push1
goto;>monitor_help--label
zerosize;;goto--jumper-593-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:H
gotoif;>goto--branch-594-0
goto;>goto--jumper-594-0
setreg1;>goto--jumper-594-0;goto--branch-594-0
s1push1
goto;>monitor_help--label
zerosize;;goto--jumper-594-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:?
gotoif;>goto--branch-595-0
goto;>goto--jumper-595-0
setreg1;>goto--jumper-595-0;goto--branch-595-0
s1push1
goto;>about--label
zerosize;;goto--jumper-595-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:/
gotoif;>goto--branch-596-0
goto;>goto--jumper-596-0
setreg1;>goto--jumper-596-0;goto--branch-596-0
s1push1
goto;>about--label
zerosize;;goto--jumper-596-0
#conditional goto
dataread1;>kb
dataread2;>:p
gotoif;>goto--branch-597-0
goto;>goto--jumper-597-0
setreg1;>goto--jumper-597-0;goto--branch-597-0
goto;>monitor_return--label
zerosize;;goto--jumper-597-0
#conditional goto
dataread1;>kb
dataread2;>:P
gotoif;>goto--branch-598-0
goto;>goto--jumper-598-0
setreg1;>goto--jumper-598-0;goto--branch-598-0
goto;>monitor_return--label
zerosize;;goto--jumper-598-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:o
gotoif;>goto--branch-599-0
goto;>goto--jumper-599-0
setreg1;>goto--jumper-599-0;goto--branch-599-0
s1push1
goto;>m_io_read--label
zerosize;;goto--jumper-599-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:O
gotoif;>goto--branch-600-0
goto;>goto--jumper-600-0
setreg1;>goto--jumper-600-0;goto--branch-600-0
s1push1
goto;>m_io_read--label
zerosize;;goto--jumper-600-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:l
gotoif;>goto--branch-601-0
goto;>goto--jumper-601-0
setreg1;>goto--jumper-601-0;goto--branch-601-0
s1push1
goto;>m_io_write--label
zerosize;;goto--jumper-601-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:L
gotoif;>goto--branch-602-0
goto;>goto--jumper-602-0
setreg1;>goto--jumper-602-0;goto--branch-602-0
s1push1
goto;>m_io_write--label
zerosize;;goto--jumper-602-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:i
gotoif;>goto--branch-603-0
goto;>goto--jumper-603-0
setreg1;>goto--jumper-603-0;goto--branch-603-0
s1push1
goto;>m_data_read--label
zerosize;;goto--jumper-603-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:I
gotoif;>goto--branch-604-0
goto;>goto--jumper-604-0
setreg1;>goto--jumper-604-0;goto--branch-604-0
s1push1
goto;>m_data_read--label
zerosize;;goto--jumper-604-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:k
gotoif;>goto--branch-605-0
goto;>goto--jumper-605-0
setreg1;>goto--jumper-605-0;goto--branch-605-0
s1push1
goto;>m_data_write--label
zerosize;;goto--jumper-605-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:K
gotoif;>goto--branch-606-0
goto;>goto--jumper-606-0
setreg1;>goto--jumper-606-0;goto--branch-606-0
s1push1
goto;>m_data_write--label
zerosize;;goto--jumper-606-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:u
gotoif;>goto--branch-607-0
goto;>goto--jumper-607-0
setreg1;>goto--jumper-607-0;goto--branch-607-0
s1push1
goto;>m_inst_read--label
zerosize;;goto--jumper-607-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:U
gotoif;>goto--branch-608-0
goto;>goto--jumper-608-0
setreg1;>goto--jumper-608-0;goto--branch-608-0
s1push1
goto;>m_inst_read--label
zerosize;;goto--jumper-608-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:j
gotoif;>goto--branch-609-0
goto;>goto--jumper-609-0
setreg1;>goto--jumper-609-0;goto--branch-609-0
s1push1
goto;>m_inst_write--label
zerosize;;goto--jumper-609-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:J
gotoif;>goto--branch-610-0
goto;>goto--jumper-610-0
setreg1;>goto--jumper-610-0;goto--branch-610-0
s1push1
goto;>m_inst_write--label
zerosize;;goto--jumper-610-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:m
gotoif;>goto--branch-611-0
goto;>goto--jumper-611-0
setreg1;>goto--jumper-611-0;goto--branch-611-0
s1push1
goto;>memory_stats--label
zerosize;;goto--jumper-611-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:M
gotoif;>goto--branch-612-0
goto;>goto--jumper-612-0
setreg1;>goto--jumper-612-0;goto--branch-612-0
s1push1
goto;>memory_stats--label
zerosize;;goto--jumper-612-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:d
gotoif;>goto--branch-613-0
goto;>goto--jumper-613-0
setreg1;>goto--jumper-613-0;goto--branch-613-0
s1push1
goto;>m_rd_view--label
zerosize;;goto--jumper-613-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:D
gotoif;>goto--branch-614-0
goto;>goto--jumper-614-0
setreg1;>goto--jumper-614-0;goto--branch-614-0
s1push1
goto;>m_rd_view--label
zerosize;;goto--jumper-614-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:f
gotoif;>goto--branch-615-0
goto;>goto--jumper-615-0
setreg1;>goto--jumper-615-0;goto--branch-615-0
s1push1
goto;>m_rd_vscreen--label
zerosize;;goto--jumper-615-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:F
gotoif;>goto--branch-616-0
goto;>goto--jumper-616-0
setreg1;>goto--jumper-616-0;goto--branch-616-0
s1push1
goto;>m_rd_vscreen--label
zerosize;;goto--jumper-616-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-617-0
goto;>goto--jumper-617-0
setreg1;>goto--jumper-617-0;goto--branch-617-0
s1push1
goto;>m_io_adr_scan--label
zerosize;;goto--jumper-617-0
#conditional subroutine goto
dataread1;>kb
dataread2;>:S
gotoif;>goto--branch-618-0
goto;>goto--jumper-618-0
setreg1;>goto--jumper-618-0;goto--branch-618-0
s1push1
goto;>m_io_adr_scan--label
zerosize;;goto--jumper-618-0
#conditional stop
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-620-0
goto;>goto--jumper-620-0
stop;;goto--branch-620-0

zerosize;;goto--jumper-620-0
#conditional stop
dataread1;>kb
dataread2;>:Q
gotoif;>goto--branch-621-0
goto;>goto--jumper-621-0
stop;;goto--branch-621-0

zerosize;;goto--jumper-621-0
#goto 
goto;>monitor_loop--label
#label
zerosize;;monitor_return--label
#prline
fopwri1;:R
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_io_read--label
#prline
fopwri1;:I
fopwri1;:O
fopwri1;:B
fopwri1;:U
fopwri1;:S
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-635-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-635-0
#get(1) (may be used with set, or asm code)
dataread1;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #637-0
datawrite1;>IOBUS_READ_MON#SSTNPL Source Line: '637-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #638-0
ioread1;0;IOBUS_READ_MON#SSTNPL Source Line: '638-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:V
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_io_write--label
#prline
fopwri1;:I
fopwri1;:O
fopwri1;:B
fopwri1;:U
fopwri1;:S
fopwri1;:\s
fopwri1;:W
fopwri1;:R
fopwri1;:I
fopwri1;:T
fopwri1;:E
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-655-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-655-0
#copy variables 
dataread1;>v1buff
datawrite1;>monitor_wri_buff
#prline
fopwri1;:V
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-658-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-658-0
#get(1) (may be used with set, or asm code)
dataread1;>monitor_wri_buff
#get2 (may be used with set2, and asm code.)
dataread2;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #661-0
datawrite1;>IOBUS_WRITE_MON#SSTNPL Source Line: '661-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #662-0
iowrite2;0;IOBUS_WRITE_MON#SSTNPL Source Line: '662-0' 
#print newline
fopwri1;:\n
#prline
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_data_read--label
#prline
fopwri1;:D
fopwri1;:A
fopwri1;:T
fopwri1;:A
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-672-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-672-0
#get(1) (may be used with set, or asm code)
dataread1;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #674-0
datawrite1;>DATA_READ_MON#SSTNPL Source Line: '674-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #675-0
dataread1;0;DATA_READ_MON#SSTNPL Source Line: '675-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:V
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_data_write--label
#prline
fopwri1;:D
fopwri1;:A
fopwri1;:T
fopwri1;:A
fopwri1;:\s
fopwri1;:W
fopwri1;:R
fopwri1;:I
fopwri1;:T
fopwri1;:E
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-690-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-690-0
#conditional goto
dataread1;>v1buff
dataread2;>WRITEPROTECT_END
gotoifmore;>goto--jumper-693-0
goto;>goto--branch-693-0
setreg1;>goto--jumper-693-0;goto--branch-693-0
goto;>write_sanity--label
zerosize;;goto--jumper-693-0
#copy variables 
dataread1;>v1buff
datawrite1;>monitor_wri_buff
#prline
fopwri1;:V
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-697-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-697-0
#get(1) (may be used with set, or asm code)
dataread1;>monitor_wri_buff
#get2 (may be used with set2, and asm code.)
dataread2;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #700-0
datawrite1;>DATA_WRITE_MON#SSTNPL Source Line: '700-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #701-0
datawrite2;0;DATA_WRITE_MON#SSTNPL Source Line: '701-0' 
#print newline
fopwri1;:\n
#prline
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_inst_read--label
#prline
fopwri1;:I
fopwri1;:N
fopwri1;:S
fopwri1;:T
fopwri1;:R
fopwri1;:U
fopwri1;:C
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-710-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-710-0
#get(1) (may be used with set, or asm code)
dataread1;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #712-0
datawrite1;>INST_READ_MON#SSTNPL Source Line: '712-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #713-0
instread1;0;INST_READ_MON#SSTNPL Source Line: '713-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:V
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_inst_write--label
#prline
fopwri1;:I
fopwri1;:N
fopwri1;:S
fopwri1;:T
fopwri1;:R
fopwri1;:U
fopwri1;:C
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;:\s
fopwri1;:W
fopwri1;:R
fopwri1;:I
fopwri1;:T
fopwri1;:E
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-728-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-728-0
#conditional goto
dataread1;>v1buff
dataread2;>WRITEPROTECT_END
gotoifmore;>goto--jumper-731-0
goto;>goto--branch-731-0
setreg1;>goto--jumper-731-0;goto--branch-731-0
goto;>write_sanity--label
zerosize;;goto--jumper-731-0
#copy variables 
dataread1;>v1buff
datawrite1;>monitor_wri_buff
#prline
fopwri1;:V
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-735-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-735-0
#get(1) (may be used with set, or asm code)
dataread1;>monitor_wri_buff
#get2 (may be used with set2, and asm code.)
dataread2;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #738-0
datawrite1;>INST_WRITE_MON#SSTNPL Source Line: '738-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #739-0
instwrite2;0;INST_WRITE_MON#SSTNPL Source Line: '739-0' 
#print newline
fopwri1;:\n
#prline
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;write_sanity--label
#Set text colors
dataread1;>*+0----
iowrite1;>io.textcolor
#prline
fopwri1;:F
fopwri1;:A
fopwri1;:U
fopwri1;:L
fopwri1;:T
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:'
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:!
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;memory_stats--label
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:T
fopwri1;:A
fopwri1;:T
fopwri1;:S
fopwri1;::
fopwri1;:\s
fopwri1;:(
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:a
fopwri1;:/
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:u
fopwri1;:c
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:)
fopwri1;:\s
fopwri1;:(
fopwri1;:I
fopwri1;:O
fopwri1;:B
fopwri1;:U
fopwri1;:S
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:N
fopwri1;:O
fopwri1;:T
fopwri1;:\s
fopwri1;:a
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:c
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:)
fopwri1;:\n
#Set text colors
dataread1;>*+00---
iowrite1;>io.textcolor
#print
fopwri1;:P
fopwri1;:r
fopwri1;:o
fopwri1;:t
fopwri1;:e
fopwri1;:c
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:-
fopwri1;:9
fopwri1;:8
fopwri1;:4
fopwri1;:1
fopwri1;:\s
fopwri1;:(
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:)
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
#Dump (decimal)
dataread1;>WRITEPROTECT_END
iowrite1;>io.decdump
#print
fopwri1;:\s
fopwri1;:(
#Dump (trits)
dataread1;>WRITEPROTECT_END
iowrite1;>io.tritdump
#print
fopwri1;:)
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*0+0---
iowrite1;>io.textcolor
#print
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:a
fopwri1;:b
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;::
#add (2op math)
dataread1;>WRITEPROTECT_END
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mem_stat_buff
#Dump (decimal)
dataread1;>mem_stat_buff
iowrite1;>io.decdump
#print
fopwri1;:\s
fopwri1;:(
#Dump (trits)
dataread1;>mem_stat_buff
iowrite1;>io.tritdump
#print
fopwri1;:)
#print
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:\s
fopwri1;:9
fopwri1;:8
fopwri1;:4
fopwri1;:1
fopwri1;:\s
fopwri1;:\s
fopwri1;:(
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:+
fopwri1;:)
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;m_io_adr_scan--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>monitor_ran_buff
#prline
fopwri1;:I
fopwri1;:O
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-787-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-787-0
#get(1) (may be used with set, or asm code)
dataread1;>v1buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #792-0
datawrite1;>IO_ADR_SCAN_X#SSTNPL Source Line: '792-0' 
#label
zerosize;;m_io_adr_scan_loop--label
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-798-0
setreg1;0;waitcy-loopback-798-0
setreg2;10x1
add
datawrite1;>waitcy-loopback-798-0
setreg2;10x56
gotoifless;>waitcy-loopback-798-0

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #801-0
ioread1;0;IO_ADR_SCAN_X#SSTNPL Source Line: '801-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#Get character from TTY input.
ioread1;>io.ttyrd
datawrite1;>kb
#conditional goto
dataread1;>kb
dataread2;>@0
gotoif;>goto--jumper-806-0
goto;>goto--branch-806-0
setreg1;>goto--jumper-806-0;goto--branch-806-0
goto;>break--label
zerosize;;goto--jumper-806-0
#conditional goto
dataread1;>v1buff
dataread2;>monitor_ran_buff
gotoif;>goto--branch-809-0
goto;>goto--jumper-809-0
setreg1;>goto--jumper-809-0;goto--branch-809-0
goto;>m_io_adr_scan_loop--label
zerosize;;goto--jumper-809-0
#copy variables 
dataread1;>v1buff
datawrite1;>monitor_ran_buff
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:)
fopwri1;:\n
#goto 
goto;>m_io_adr_scan_loop--label
#label
zerosize;;m_rd_vscreen--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mon_dmp_stop
#prline
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:u
fopwri1;:m
fopwri1;:p
fopwri1;:\s
fopwri1;:s
fopwri1;:c
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-835-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-835-0
#copy variables 
dataread1;>v1buff
datawrite1;>monitor_ran_buff
#add (2op math)
dataread1;>v1buff
dataread2;>@23
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#goto 
goto;>m_rd_view_loop--label
#label
zerosize;;m_rd_view--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mon_dmp_stop
#prline
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:u
fopwri1;:m
fopwri1;:p
fopwri1;:\s
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-853-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-853-0
#copy variables 
dataread1;>v1buff
datawrite1;>monitor_ran_buff
#prline
fopwri1;:E
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:A
fopwri1;:d
fopwri1;:d
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:?
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-856-0
s1push1
goto;>get1num--label
zerosize;;goto--jumper-856-0
#label
zerosize;;m_rd_view_loop--label
#Get character from TTY input.
ioread1;>io.ttyrd
datawrite1;>kb
#conditional goto
dataread1;>kb
dataread2;>@0
gotoif;>goto--jumper-861-0
goto;>goto--branch-861-0
setreg1;>goto--jumper-861-0;goto--branch-861-0
goto;>break--label
zerosize;;goto--jumper-861-0
#get(1) (may be used with set, or asm code)
dataread1;>monitor_ran_buff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #865-0
datawrite1;>INST_RANGE_MON_S#SSTNPL Source Line: '865-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #866-0
datawrite1;>INST_RANGE_MON_E#SSTNPL Source Line: '866-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #867-0
instread1;0;INST_RANGE_MON_S#SSTNPL Source Line: '867-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #868-0
dataread2;0;INST_RANGE_MON_E#SSTNPL Source Line: '868-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>monitor_inst_buff
#set2 (used for asm, or get2)
datawrite2;>monitor_data_buff
#Set text colors
dataread1;>*+0+---
iowrite1;>io.textcolor
#print
fopwri1;:A
fopwri1;::
#Dump (decimal)
dataread1;>monitor_ran_buff
iowrite1;>io.decdump
#print
fopwri1;:\m
fopwri1;:\s
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>monitor_inst_buff
iowrite1;>io.tritdump
#print space
fopwri1;:\s
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>monitor_data_buff
iowrite1;>io.tritdump
#print space
fopwri1;:\s
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#Dump (decimal)
dataread1;>monitor_inst_buff
iowrite1;>io.decdump
#print space
fopwri1;:\s
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#Dump (decimal)
dataread1;>monitor_data_buff
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-889-0
setreg1;0;waitcy-loopback-889-0
setreg2;10x1
add
datawrite1;>waitcy-loopback-889-0
setreg2;10x56
gotoifless;>waitcy-loopback-889-0

#add (2op math)
dataread1;>monitor_ran_buff
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>monitor_ran_buff
#conditional return
dataread1;>mon_dmp_stop
dataread2;>@1
gotoif;>goto--branch-893-0
goto;>goto--jumper-893-0
s1pop1;;goto--branch-893-0
gotoreg1
zerosize;;goto--jumper-893-0
#conditional set
dataread1;>v1buff
dataread2;>monitor_ran_buff
gotoif;>goto--branch-894-0
goto;>goto--jumper-894-0
dataread1;>@1;goto--branch-894-0
datawrite1;>mon_dmp_stop
zerosize;;goto--jumper-894-0
#goto 
goto;>m_rd_view_loop--label
#label
zerosize;;break--label
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+0----
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:B
fopwri1;:O
fopwri1;:A
fopwri1;:R
fopwri1;:D
fopwri1;:\s
fopwri1;:B
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:K
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #908-0
null;;END_OF_WRITE_PROTECT#SSTNPL Source Line: '908-0' 
#END OF FILE
