#SSTNPL COMPILER v0.3.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/ontrain/auto_main.stnp
null;10x30;car_height
null;10x8;car_width
null;10x6;car_window_width
null;10x10;train_height
null;10x15;train_width
null;10x4;train_width_gleam
null;0;playclick
null;10x90;player_pos
null;10x100;player_window_f
null;10x110;player_window_b
null;10x2;car_window_height_f
null;10x4;car_window_height_b
null;0;collidepos
null;10x1;slow
null;10x2;medium
null;10x3;fast
null;10x4;turbo
null;10x3;speed
null;0;kb
null;10x-140;train_pos
null;10x0;train_side
null;10x0;player_side
null;0;train_score
null;0;player_score
null;:q;:q
null;:Q;:Q
null;:a;:a
null;:A;:A
null;:r;:r
null;:R;:R
null;:s;:s
null;:S;:S
null;:1;:1
null;:!;:!
null;:4;:4
null;:$;:$
null;:2;:2
null;:@;:@
null;:3;:3
null;:\p;:\p
null;10x30;@30
null;---0++---;*---0++---
null;10x-121;@-121
null;10x60;@60
null;10x243;@243
null;----0+---;*----0+---
null;10x70;@70
null;++++++000;*++++++000
null;10x85;@85
null;0000+++++;*0000+++++
null;10x90;@90
null;10x5;@5
null;--+--+--+;*--+--+--+
null;10x26;@26
null;--+--+-++;*--+--+-++
null;10x0;@0
null;10x1;@1
null;10x-25;@-25
null;10x50;@50
null;+++++++++;*+++++++++
null;10x121;@121
null;10x-18;@-18
null;10x18;@18
null;10x-7;@-7
null;10x7;@7
null;10x3;@3
null;--+--++++;*--+--++++
null;10x15;@15
null;10x-20;@-20
null;+0-+0-+0-;*+0-+0-+0-
null;10x-16;@-16
null;---000+++;*---000+++
null;10x8;@8
null;10x-15;@-15
null;------000;*------000
null;10x9;@9
null;+++--0;*+++--0
null;+++---;*+++---
null;++----;*++----
#subtract (2op math)
dataread1;>player_pos
dataread2;>train_height
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>collidepos
#label
null;;main--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #54
include;ontrain+title.tas0#SSTNPL Source Line: '54' 
#prline
fopwri1;:O
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:5
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:l
fopwri1;:o
fopwri1;:w
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:3
fopwri1;::
fopwri1;:\s
fopwri1;:f
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:r
fopwri1;::
fopwri1;:\s
fopwri1;:r
fopwri1;:u
fopwri1;:l
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:2
fopwri1;::
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:u
fopwri1;:m
fopwri1;:\s
fopwri1;:\s
fopwri1;:4
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:b
fopwri1;:o
fopwri1;:\n
#print
fopwri1;:q
fopwri1;::
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:y
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-60
gotoif;>keyprompt--loop-60
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#print newline
fopwri1;:\n
#conditional stop
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-64
goto;>goto--jumper-64
stop;;goto--branch-64

null;;goto--jumper-64
#conditional stop
dataread1;>kb
dataread2;>:Q
gotoif;>goto--branch-65
goto;>goto--jumper-65
stop;;goto--branch-65

null;;goto--jumper-65
#conditional subroutine goto
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-67
goto;>goto--jumper-67
setreg1;>goto--jumper-67;goto--branch-67
s1push1
goto;>about--label
null;;goto--jumper-67
#conditional subroutine goto
dataread1;>kb
dataread2;>:A
gotoif;>goto--branch-68
goto;>goto--jumper-68
setreg1;>goto--jumper-68;goto--branch-68
s1push1
goto;>about--label
null;;goto--jumper-68
#conditional subroutine goto
dataread1;>kb
dataread2;>:r
gotoif;>goto--branch-70
goto;>goto--jumper-70
setreg1;>goto--jumper-70;goto--branch-70
s1push1
goto;>rules--label
null;;goto--jumper-70
#conditional subroutine goto
dataread1;>kb
dataread2;>:R
gotoif;>goto--branch-71
goto;>goto--jumper-71
setreg1;>goto--jumper-71;goto--branch-71
s1push1
goto;>rules--label
null;;goto--jumper-71
#conditional subroutine goto
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-73
goto;>goto--jumper-73
setreg1;>goto--jumper-73;goto--branch-73
s1push1
goto;>story--label
null;;goto--jumper-73
#conditional subroutine goto
dataread1;>kb
dataread2;>:S
gotoif;>goto--branch-74
goto;>goto--jumper-74
setreg1;>goto--jumper-74;goto--branch-74
s1push1
goto;>story--label
null;;goto--jumper-74
#conditional subroutine goto
dataread1;>kb
dataread2;>:1
gotoif;>goto--branch-76
goto;>goto--jumper-76
setreg1;>goto--jumper-76;goto--branch-76
s1push1
goto;>slowg--label
null;;goto--jumper-76
#conditional subroutine goto
dataread1;>kb
dataread2;>:!
gotoif;>goto--branch-77
goto;>goto--jumper-77
setreg1;>goto--jumper-77;goto--branch-77
s1push1
goto;>slowg--label
null;;goto--jumper-77
#conditional subroutine goto
dataread1;>kb
dataread2;>:4
gotoif;>goto--branch-79
goto;>goto--jumper-79
setreg1;>goto--jumper-79;goto--branch-79
s1push1
goto;>turbog--label
null;;goto--jumper-79
#conditional subroutine goto
dataread1;>kb
dataread2;>:$
gotoif;>goto--branch-80
goto;>goto--jumper-80
setreg1;>goto--jumper-80;goto--branch-80
s1push1
goto;>turbog--label
null;;goto--jumper-80
#conditional subroutine goto
dataread1;>kb
dataread2;>:2
gotoif;>goto--branch-82
goto;>goto--jumper-82
setreg1;>goto--jumper-82;goto--branch-82
s1push1
goto;>mediumg--label
null;;goto--jumper-82
#conditional subroutine goto
dataread1;>kb
dataread2;>:@
gotoif;>goto--branch-83
goto;>goto--jumper-83
setreg1;>goto--jumper-83;goto--branch-83
s1push1
goto;>mediumg--label
null;;goto--jumper-83
#conditional subroutine goto
dataread1;>kb
dataread2;>:3
gotoif;>goto--branch-85
goto;>goto--jumper-85
setreg1;>goto--jumper-85;goto--branch-85
s1push1
goto;>fastg--label
null;;goto--jumper-85
#conditional subroutine goto
dataread1;>kb
dataread2;>:\p
gotoif;>goto--branch-86
goto;>goto--jumper-86
setreg1;>goto--jumper-86;goto--branch-86
s1push1
goto;>fastg--label
null;;goto--jumper-86
#goto 
goto;>main--label
#label
null;;slowg--label
#copy variables 
dataread1;>slow
datawrite1;>speed
#goto (extra code stores away return address.)
setreg1;>goto--jumper-93
s1push1
goto;>pregame--label
null;;goto--jumper-93
#return from subroutine.
s1pop1
gotoreg1
#label
null;;turbog--label
#copy variables 
dataread1;>turbo
datawrite1;>speed
#goto (extra code stores away return address.)
setreg1;>goto--jumper-98
s1push1
goto;>pregame--label
null;;goto--jumper-98
#return from subroutine.
s1pop1
gotoreg1
#label
null;;mediumg--label
#copy variables 
dataread1;>medium
datawrite1;>speed
#goto (extra code stores away return address.)
setreg1;>goto--jumper-103
s1push1
goto;>pregame--label
null;;goto--jumper-103
#return from subroutine.
s1pop1
gotoreg1
#label
null;;fastg--label
#copy variables 
dataread1;>fast
datawrite1;>speed
#goto (extra code stores away return address.)
setreg1;>goto--jumper-108
s1push1
goto;>pregame--label
null;;goto--jumper-108
#return from subroutine.
s1pop1
gotoreg1
#label
null;;pregame--label
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>train_score
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>player_score
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>train_side
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>player_side
#plotter fill
dataread1;>*---0++---
iowrite1;>plot.fill
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@60
iowrite1;>plot.width
#plotter height
dataread1;>@243
iowrite1;>plot.height
#plotter draw line
dataread1;>*----0+---
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@60
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@70
iowrite1;>plot.width
#plotter height
dataread1;>@243
iowrite1;>plot.height
#plotter draw line
dataread1;>*++++++000
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@85
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@70
iowrite1;>plot.width
#plotter height
dataread1;>@243
iowrite1;>plot.height
#plotter draw line
dataread1;>*0000+++++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@90
iowrite1;>plot.width
#plotter height
dataread1;>@5
iowrite1;>plot.height
#plotter draw line
dataread1;>*--+--+--+
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@26
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@90
iowrite1;>plot.width
#plotter height
dataread1;>@5
iowrite1;>plot.height
#plotter draw line
dataread1;>*--+--+-++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#goto (extra code stores away return address.)
setreg1;>goto--jumper-166
s1push1
goto;>track_draw--label
null;;goto--jumper-166
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-168
setreg1;0;waitcy-loopback-168
setreg2;10x1
add
datawrite1;>waitcy-loopback-168
setreg2;10x1000
gotoifless;>waitcy-loopback-168

#label
null;;primaryloop--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-171
s1push1
goto;>track_draw--label
null;;goto--jumper-171
#val (used with set to change variable value during runtime.)
setreg1;10x-140
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>train_pos
#Random ranged number
dataread1;>@0
dataread2;>@1
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>train_side
#goto (extra code stores away return address.)
setreg1;>goto--jumper-177
s1push1
goto;>gameloop--label
null;;goto--jumper-177
#conditional subroutine goto
dataread1;>player_side
dataread2;>train_side
gotoif;>goto--branch-179
goto;>goto--jumper-179
setreg1;>goto--jumper-179;goto--branch-179
s1push1
goto;>train_point--label
null;;goto--jumper-179
#conditional subroutine goto
dataread1;>player_side
dataread2;>train_side
gotoif;>goto--jumper-180
goto;>goto--branch-180
setreg1;>goto--jumper-180;goto--branch-180
s1push1
goto;>player_point--label
null;;goto--jumper-180
#conditional goto
dataread1;>player_score
dataread2;>@90
gotoifless;>goto--jumper-181
goto;>goto--branch-181
setreg1;>goto--jumper-181;goto--branch-181
goto;>player_win--label
null;;goto--jumper-181
#conditional goto
dataread1;>train_score
dataread2;>@90
gotoifless;>goto--jumper-182
goto;>goto--branch-182
setreg1;>goto--jumper-182;goto--branch-182
goto;>player_lose--label
null;;goto--jumper-182
#goto 
goto;>primaryloop--label
#label
null;;track_draw--label
#plotter x pos 1
dataread1;>@-25
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@50
iowrite1;>plot.width
#plotter height
dataread1;>@243
iowrite1;>plot.height
#plotter draw line
dataread1;>*--+--+--+
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>@121
iowrite1;>plot.y2
#plotter x pos 1
dataread1;>@-18
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>@-18
iowrite1;>plot.x2
#plotter draw line
iowrite1;>plot.line
#plotter x pos 1
dataread1;>@18
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>@18
iowrite1;>plot.x2
#plotter draw line
iowrite1;>plot.line
#plotter x pos 1
dataread1;>@-7
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>@-7
iowrite1;>plot.x2
#plotter draw line
iowrite1;>plot.line
#plotter x pos 1
dataread1;>@7
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>@7
iowrite1;>plot.x2
#plotter draw line
iowrite1;>plot.line
#conditional subroutine goto
dataread1;>player_side
dataread2;>@0
gotoif;>goto--branch-218
goto;>goto--jumper-218
setreg1;>goto--jumper-218;goto--branch-218
s1push1
goto;>playcar_left--label
null;;goto--jumper-218
#conditional subroutine goto
dataread1;>player_side
dataread2;>@1
gotoif;>goto--branch-219
goto;>goto--jumper-219
setreg1;>goto--jumper-219;goto--branch-219
s1push1
goto;>playcar_right--label
null;;goto--jumper-219
#return from subroutine.
s1pop1
gotoreg1
#label
null;;player_win--label
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #226
include;ontrain+win.tas0#SSTNPL Source Line: '226' 
#print
fopwri1;:Y
fopwri1;:O
fopwri1;:U
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:N
fopwri1;:!
fopwri1;:\s
fopwri1;::
fopwri1;:D
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-228
gotoif;>keyprompt--loop-228
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;player_lose--label
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #235
include;ontrain+gameover.tas0#SSTNPL Source Line: '235' 
#print
fopwri1;:Y
fopwri1;:O
fopwri1;:U
fopwri1;:\s
fopwri1;:L
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:!
fopwri1;:\s
fopwri1;:>
fopwri1;::
fopwri1;:)
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-237
gotoif;>keyprompt--loop-237
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;player_point--label
#add (2op math)
dataread1;>player_score
dataread2;>@3
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>player_score
#plotter x pos 1
dataread1;>@26
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>player_score
iowrite1;>plot.width
#plotter height
dataread1;>@5
iowrite1;>plot.height
#plotter draw line
dataread1;>*--+--++++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#return from subroutine.
s1pop1
gotoreg1
#label
null;;train_point--label
#add (2op math)
dataread1;>train_score
dataread2;>@15
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>train_score
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>train_score
iowrite1;>plot.width
#plotter height
dataread1;>@5
iowrite1;>plot.height
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#return from subroutine.
s1pop1
gotoreg1
#label
null;;gameloop--label
#add (2op math)
dataread1;>train_pos
dataread2;>speed
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>train_pos
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #279
ioread1;>mouse.button#SSTNPL Source Line: '279' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>playclick
#conditional subroutine goto
dataread1;>playclick
dataread2;>@1
gotoif;>goto--branch-282
goto;>goto--jumper-282
setreg1;>goto--jumper-282;goto--branch-282
s1push1
goto;>playertoggle--label
null;;goto--jumper-282
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-287
setreg1;0;waitcy-loopback-287
setreg2;10x1
add
datawrite1;>waitcy-loopback-287
setreg2;10x3
gotoifless;>waitcy-loopback-287

#conditional subroutine goto
dataread1;>train_side
dataread2;>@0
gotoif;>goto--branch-288
goto;>goto--jumper-288
setreg1;>goto--jumper-288;goto--branch-288
s1push1
goto;>train_left--label
null;;goto--jumper-288
#conditional subroutine goto
dataread1;>train_side
dataread2;>@1
gotoif;>goto--branch-289
goto;>goto--jumper-289
setreg1;>goto--jumper-289;goto--branch-289
s1push1
goto;>train_right--label
null;;goto--jumper-289
#conditional return
dataread1;>train_pos
dataread2;>collidepos
gotoifless;>goto--jumper-295
goto;>goto--branch-295
s1pop1;;goto--branch-295
gotoreg1
null;;goto--jumper-295
#goto 
goto;>gameloop--label
#label
null;;train_left--label
#plotter x pos 1
dataread1;>@-20
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>train_pos
iowrite1;>plot.y1
#plotter width
dataread1;>train_width
iowrite1;>plot.width
#plotter height
dataread1;>train_height
iowrite1;>plot.height
#plotter draw line
dataread1;>*+0-+0-+0-
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter width
dataread1;>train_width_gleam
iowrite1;>plot.width
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#return from subroutine.
s1pop1
gotoreg1
#label
null;;train_right--label
#plotter x pos 1
dataread1;>@5
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>train_pos
iowrite1;>plot.y1
#plotter width
dataread1;>train_width
iowrite1;>plot.width
#plotter height
dataread1;>train_height
iowrite1;>plot.height
#plotter draw line
dataread1;>*+0-+0-+0-
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter width
dataread1;>train_width_gleam
iowrite1;>plot.width
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#return from subroutine.
s1pop1
gotoreg1
#label
null;;playcar_left--label
#plotter x pos 1
dataread1;>@-16
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>player_pos
iowrite1;>plot.y1
#plotter width
dataread1;>car_width
iowrite1;>plot.width
#plotter height
dataread1;>car_height
iowrite1;>plot.height
#plotter draw line
dataread1;>*---000+++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@8
iowrite1;>plot.x1
#plotter draw line
dataread1;>*--+--+--+
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@-15
iowrite1;>plot.x1
#plotter width
dataread1;>car_window_width
iowrite1;>plot.width
#plotter draw line
dataread1;>*------000
iowrite1;>plot.color
#plotter y pos 1
dataread1;>player_window_f
iowrite1;>plot.y1
#plotter height
dataread1;>car_window_height_f
iowrite1;>plot.height
#plotter draw rect
iowrite1;>plot.rect
#plotter y pos 1
dataread1;>player_window_b
iowrite1;>plot.y1
#plotter height
dataread1;>car_window_height_b
iowrite1;>plot.height
#plotter draw rect
iowrite1;>plot.rect
#return from subroutine.
s1pop1
gotoreg1
#label
null;;playcar_right--label
#plotter x pos 1
dataread1;>@8
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>player_pos
iowrite1;>plot.y1
#plotter width
dataread1;>car_width
iowrite1;>plot.width
#plotter height
dataread1;>car_height
iowrite1;>plot.height
#plotter draw line
dataread1;>*---000+++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@-16
iowrite1;>plot.x1
#plotter draw line
dataread1;>*--+--+--+
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>@9
iowrite1;>plot.x1
#plotter width
dataread1;>car_window_width
iowrite1;>plot.width
#plotter draw line
dataread1;>*------000
iowrite1;>plot.color
#plotter y pos 1
dataread1;>player_window_f
iowrite1;>plot.y1
#plotter height
dataread1;>car_window_height_f
iowrite1;>plot.height
#plotter draw rect
iowrite1;>plot.rect
#plotter y pos 1
dataread1;>player_window_b
iowrite1;>plot.y1
#plotter height
dataread1;>car_window_height_b
iowrite1;>plot.height
#plotter draw rect
iowrite1;>plot.rect
#return from subroutine.
s1pop1
gotoreg1
#label
null;;playertoggle--label
#conditional goto
dataread1;>player_side
dataread2;>@0
gotoif;>goto--branch-389
goto;>goto--jumper-389
setreg1;>goto--jumper-389;goto--branch-389
goto;>playertoggle_skip--label
null;;goto--jumper-389
#conditional set
dataread1;>player_side
dataread2;>@1
gotoif;>goto--branch-390
goto;>goto--jumper-390
dataread1;>@0;goto--branch-390
datawrite1;>player_side
null;;goto--jumper-390
#goto (extra code stores away return address.)
setreg1;>goto--jumper-391
s1push1
goto;>playcar_left--label
null;;goto--jumper-391
#return from subroutine.
s1pop1
gotoreg1
#label
null;;playertoggle_skip--label
#conditional set
dataread1;>player_side
dataread2;>@0
gotoif;>goto--branch-394
goto;>goto--jumper-394
dataread1;>@1;goto--branch-394
datawrite1;>player_side
null;;goto--jumper-394
#goto (extra code stores away return address.)
setreg1;>goto--jumper-395
s1push1
goto;>playcar_right--label
null;;goto--jumper-395
#return from subroutine.
s1pop1
gotoreg1
#label
null;;about--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:A
fopwri1;:B
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:O
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:5
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:h
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:'
fopwri1;:o
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:o
fopwri1;:b
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:c
fopwri1;:l
fopwri1;:e
fopwri1;:'
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:W
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:b
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:l
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:g
fopwri1;:a
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\s
fopwri1;:(
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:A
fopwri1;:)
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:9
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:O
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:O
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:,
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:O
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:,
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#prline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:R
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#print
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-427
gotoif;>keyprompt--loop-427
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;rules--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #432
include;ontrain+rules.tas0#SSTNPL Source Line: '432' 
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:s
fopwri1;:c
fopwri1;:a
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:i
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:r
fopwri1;:o
fopwri1;:a
fopwri1;:d
fopwri1;:\s
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:e
fopwri1;:.
fopwri1;:\s
fopwri1;:\n
#prline
fopwri1;:O
fopwri1;:n
fopwri1;:e
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:b
fopwri1;:l
fopwri1;:e
fopwri1;:m
fopwri1;::
fopwri1;:\s
fopwri1;:I
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:c
fopwri1;:t
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:d
fopwri1;:!
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:p
fopwri1;:l
fopwri1;:a
fopwri1;:y
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:p
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:3
fopwri1;:0
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:,
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:i
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:h
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:6
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:f
fopwri1;:t
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:a
fopwri1;:c
fopwri1;:k
fopwri1;:s
fopwri1;:.
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:f
fopwri1;:i
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:e
fopwri1;:e
fopwri1;:d
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*++----
iowrite1;>io.textcolor
#print
fopwri1;:G
fopwri1;:o
fopwri1;:o
fopwri1;:d
fopwri1;:\s
fopwri1;:L
fopwri1;:u
fopwri1;:c
fopwri1;:k
fopwri1;:!
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-441
gotoif;>keyprompt--loop-441
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;story--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #446
include;ontrain+story.tas0#SSTNPL Source Line: '446' 
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:s
fopwri1;:c
fopwri1;:a
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:m
fopwri1;:y
fopwri1;:\s
fopwri1;:c
fopwri1;:i
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:u
fopwri1;:c
fopwri1;:i
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:t
fopwri1;:a
fopwri1;:k
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:\s
fopwri1;:l
fopwri1;:i
fopwri1;:n
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:s
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:d
fopwri1;:,
fopwri1;:\s
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:m
fopwri1;:y
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:e
fopwri1;:x
fopwri1;:p
fopwri1;:e
fopwri1;:c
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:n
fopwri1;:d
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:3
fopwri1;:0
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:e
fopwri1;:s
fopwri1;:c
fopwri1;:a
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:i
fopwri1;:t
fopwri1;:y
fopwri1;:?
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:a
fopwri1;:y
fopwri1;:?
fopwri1;:\n
#Set text colors
dataread1;>*++----
iowrite1;>io.textcolor
#print
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:O
fopwri1;:n
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:?
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-455
gotoif;>keyprompt--loop-455
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
