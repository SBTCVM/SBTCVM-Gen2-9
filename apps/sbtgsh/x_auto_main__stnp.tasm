#SSTNPL COMPILER v0.3.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/sbtgsh/auto_main.stnp
null;0;btnbuff
null;0;xbuff_main
null;0;ybuff_main
null;0;xbuff_calc
null;0;ybuff_calc
null;0;ybuff_help
null;0;xbuff_cry
null;0;ybuff_cry
null;10x1;main_actflg
null;10x1;help_actflg
null;0;exitcode
null;+0-00+0--;system_icon_colors
null;10x1;@1
null;10x0;@0
null;10x6;@6
null;10x13;@13
null;10x16;@16
null;10x28;@28
null;10x31;@31
null;10x43;@43
null;10x46;@46
null;10x58;@58
null;10x61;@61
null;10x73;@73
null;10x8;@8
null;10x15;@15
null;10x20;@20
null;10x0;foo1
null;10x11;@11
null;+++0--;*+++0--
null;+++00-;*+++00-
null;+++-0-;*+++-0-
null;+++-00;*+++-00
null;+++--0;*+++--0
null;+++0-0;*+++0-0
null;+++00+;*+++00+
null;---00+;*---00+
null;10x0;not_sup_fill
null;10x17;@17
null;10x0;nothing_here_fill
null;---++0;*---++0
null;---0++;*---0++
null;10x18;@18
null;10x2;@2
null;10x3;@3
null;10x4;@4
null;10x5;@5
null;10x21;@21
null;10x19;@19
null;10x9;@9
null;+++---;*+++---
null;0;calc_buffer
null;0;calc_entry
null;0;tritbuff
null;0;tritlen
null;0;calc_redrawflgx
null;0;calc_redrawflgy
null;---+++;*---+++
null;+;*+
null;10x7;@7
null;0;*0
null;10x10;@10
null;10x14;@14
null;-;*-
null;10x0;calc_cleanloop
null;0;crystal_random
null;0;thunderflag
null;10x70;@70
null;10x35;@35
null;10x23;@23
null;10x25;@25
null;10x-1;@-1
null;0;sys_shell_validcom
null;0;sys_shell_cmdflg
null;++0---;*++0---
null;0++---;*0++---
#Set ternary packed art colors
dataread1;>system_icon_colors
iowrite1;>io.packcolor
#val (used with set to change variable value during runtime.)
setreg1;10x80
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.max
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.clearbuffer
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-39
setreg1;0;waitcy-loopback-39
setreg2;10x1
add
datawrite1;>waitcy-loopback-39
setreg2;10x166
gotoifless;>waitcy-loopback-39

#label
null;;main--label
#conditional subroutine goto
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-43
goto;>goto--jumper-43
setreg1;>goto--jumper-43;goto--branch-43
s1push1
goto;>mainscreen_draw--label
null;;goto--jumper-43
#conditional subroutine goto
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-44
goto;>goto--jumper-44
setreg1;>goto--jumper-44;goto--branch-44
s1push1
goto;>menutune--label
null;;goto--jumper-44
#conditional set
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-45
goto;>goto--jumper-45
dataread1;>@0;goto--branch-45
datawrite1;>main_actflg
null;;goto--jumper-45
#label
null;;main_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #49
ioread1;>mouse.button#SSTNPL Source Line: '49' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-52
goto;>goto--branch-52
setreg1;>goto--jumper-52;goto--branch-52
goto;>main_loop--label
null;;goto--jumper-52
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #57
ioread1;>mouse.lockx#SSTNPL Source Line: '57' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_main
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #59
ioread1;>mouse.locky#SSTNPL Source Line: '59' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_main
#conditional goto
dataread1;>ybuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-64
gotoif;>goto--halfstep-64
goto;>goto--branch-64
dataread1;>ybuff_main;goto--halfstep-64
dataread2;>@6
gotoifless;>goto--jumper-64
gotoif;>goto--jumper-64
goto;>goto--branch-64
setreg1;>goto--jumper-64;goto--branch-64
goto;>row1_skip--label
null;;goto--jumper-64
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-66
gotoif;>goto--halfstep-66
goto;>goto--jumper-66
dataread1;>xbuff_main;goto--halfstep-66
dataread2;>@13
gotoifless;>goto--branch-66
gotoif;>goto--branch-66
goto;>goto--jumper-66
dataread1;>@1;goto--branch-66
datawrite1;>main_actflg
null;;goto--jumper-66
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-67
gotoif;>goto--halfstep-67
goto;>goto--jumper-67
dataread1;>xbuff_main;goto--halfstep-67
dataread2;>@13
gotoifless;>goto--branch-67
gotoif;>goto--branch-67
goto;>goto--jumper-67
setreg1;>goto--jumper-67;goto--branch-67
s1push1
goto;>calc_init--label
null;;goto--jumper-67
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-68
gotoif;>goto--halfstep-68
goto;>goto--jumper-68
dataread1;>xbuff_main;goto--halfstep-68
dataread2;>@28
gotoifless;>goto--branch-68
gotoif;>goto--branch-68
goto;>goto--jumper-68
dataread1;>@1;goto--branch-68
datawrite1;>main_actflg
null;;goto--jumper-68
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-69
gotoif;>goto--halfstep-69
goto;>goto--jumper-69
dataread1;>xbuff_main;goto--halfstep-69
dataread2;>@28
gotoifless;>goto--branch-69
gotoif;>goto--branch-69
goto;>goto--jumper-69
setreg1;>goto--jumper-69;goto--branch-69
s1push1
goto;>VDI_shell--label
null;;goto--jumper-69
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-70
gotoif;>goto--halfstep-70
goto;>goto--jumper-70
dataread1;>xbuff_main;goto--halfstep-70
dataread2;>@43
gotoifless;>goto--branch-70
gotoif;>goto--branch-70
goto;>goto--jumper-70
dataread1;>@1;goto--branch-70
datawrite1;>main_actflg
null;;goto--jumper-70
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-71
gotoif;>goto--halfstep-71
goto;>goto--jumper-71
dataread1;>xbuff_main;goto--halfstep-71
dataread2;>@43
gotoifless;>goto--branch-71
gotoif;>goto--branch-71
goto;>goto--jumper-71
setreg1;>goto--jumper-71;goto--branch-71
s1push1
goto;>not_implemented--label
null;;goto--jumper-71
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-72
gotoif;>goto--halfstep-72
goto;>goto--jumper-72
dataread1;>xbuff_main;goto--halfstep-72
dataread2;>@58
gotoifless;>goto--branch-72
gotoif;>goto--branch-72
goto;>goto--jumper-72
dataread1;>@1;goto--branch-72
datawrite1;>main_actflg
null;;goto--jumper-72
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-73
gotoif;>goto--halfstep-73
goto;>goto--jumper-73
dataread1;>xbuff_main;goto--halfstep-73
dataread2;>@58
gotoifless;>goto--branch-73
gotoif;>goto--branch-73
goto;>goto--jumper-73
setreg1;>goto--jumper-73;goto--branch-73
s1push1
goto;>help--label
null;;goto--jumper-73
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-74
gotoif;>goto--halfstep-74
goto;>goto--jumper-74
dataread1;>xbuff_main;goto--halfstep-74
dataread2;>@73
gotoifless;>goto--branch-74
gotoif;>goto--branch-74
goto;>goto--jumper-74
dataread1;>@1;goto--branch-74
datawrite1;>main_actflg
null;;goto--jumper-74
#conditional stop
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-75
gotoif;>goto--halfstep-75
goto;>goto--jumper-75
dataread1;>xbuff_main;goto--halfstep-75
dataread2;>@73
gotoifless;>goto--branch-75
gotoif;>goto--branch-75
goto;>goto--jumper-75
stop;;goto--branch-75

null;;goto--jumper-75
#label
null;;row1_skip--label
#conditional goto
dataread1;>ybuff_main
dataread2;>@8
gotoifmore;>goto--halfstep-81
gotoif;>goto--halfstep-81
goto;>goto--branch-81
dataread1;>ybuff_main;goto--halfstep-81
dataread2;>@13
gotoifless;>goto--jumper-81
gotoif;>goto--jumper-81
goto;>goto--branch-81
setreg1;>goto--jumper-81;goto--branch-81
goto;>row2_skip--label
null;;goto--jumper-81
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-83
gotoif;>goto--halfstep-83
goto;>goto--jumper-83
dataread1;>xbuff_main;goto--halfstep-83
dataread2;>@13
gotoifless;>goto--branch-83
gotoif;>goto--branch-83
goto;>goto--jumper-83
dataread1;>@1;goto--branch-83
datawrite1;>main_actflg
null;;goto--jumper-83
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-84
gotoif;>goto--halfstep-84
goto;>goto--jumper-84
dataread1;>xbuff_main;goto--halfstep-84
dataread2;>@13
gotoifless;>goto--branch-84
gotoif;>goto--branch-84
goto;>goto--jumper-84
setreg1;>goto--jumper-84;goto--branch-84
s1push1
goto;>crystal_ball--label
null;;goto--jumper-84
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-85
gotoif;>goto--halfstep-85
goto;>goto--jumper-85
dataread1;>xbuff_main;goto--halfstep-85
dataread2;>@28
gotoifless;>goto--branch-85
gotoif;>goto--branch-85
goto;>goto--jumper-85
dataread1;>@1;goto--branch-85
datawrite1;>main_actflg
null;;goto--jumper-85
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-86
gotoif;>goto--halfstep-86
goto;>goto--jumper-86
dataread1;>xbuff_main;goto--halfstep-86
dataread2;>@28
gotoifless;>goto--branch-86
gotoif;>goto--branch-86
goto;>goto--jumper-86
setreg1;>goto--jumper-86;goto--branch-86
s1push1
goto;>sys_shell--label
null;;goto--jumper-86
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-87
gotoif;>goto--halfstep-87
goto;>goto--jumper-87
dataread1;>xbuff_main;goto--halfstep-87
dataread2;>@43
gotoifless;>goto--branch-87
gotoif;>goto--branch-87
goto;>goto--jumper-87
dataread1;>@1;goto--branch-87
datawrite1;>main_actflg
null;;goto--jumper-87
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-88
gotoif;>goto--halfstep-88
goto;>goto--jumper-88
dataread1;>xbuff_main;goto--halfstep-88
dataread2;>@43
gotoifless;>goto--branch-88
gotoif;>goto--branch-88
goto;>goto--jumper-88
setreg1;>goto--jumper-88;goto--branch-88
s1push1
goto;>nothing_here--label
null;;goto--jumper-88
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-89
gotoif;>goto--halfstep-89
goto;>goto--jumper-89
dataread1;>xbuff_main;goto--halfstep-89
dataread2;>@58
gotoifless;>goto--branch-89
gotoif;>goto--branch-89
goto;>goto--jumper-89
dataread1;>@1;goto--branch-89
datawrite1;>main_actflg
null;;goto--jumper-89
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-90
gotoif;>goto--halfstep-90
goto;>goto--jumper-90
dataread1;>xbuff_main;goto--halfstep-90
dataread2;>@58
gotoifless;>goto--branch-90
gotoif;>goto--branch-90
goto;>goto--jumper-90
setreg1;>goto--jumper-90;goto--branch-90
s1push1
goto;>nothing_here--label
null;;goto--jumper-90
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-91
gotoif;>goto--halfstep-91
goto;>goto--jumper-91
dataread1;>xbuff_main;goto--halfstep-91
dataread2;>@73
gotoifless;>goto--branch-91
gotoif;>goto--branch-91
goto;>goto--jumper-91
dataread1;>@1;goto--branch-91
datawrite1;>main_actflg
null;;goto--jumper-91
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-92
gotoif;>goto--halfstep-92
goto;>goto--jumper-92
dataread1;>xbuff_main;goto--halfstep-92
dataread2;>@73
gotoifless;>goto--branch-92
gotoif;>goto--branch-92
goto;>goto--jumper-92
setreg1;>goto--jumper-92;goto--branch-92
s1push1
goto;>nothing_here--label
null;;goto--jumper-92
#label
null;;row2_skip--label
#conditional goto
dataread1;>ybuff_main
dataread2;>@15
gotoifmore;>goto--halfstep-98
gotoif;>goto--halfstep-98
goto;>goto--branch-98
dataread1;>ybuff_main;goto--halfstep-98
dataread2;>@20
gotoifless;>goto--jumper-98
gotoif;>goto--jumper-98
goto;>goto--branch-98
setreg1;>goto--jumper-98;goto--branch-98
goto;>row3_skip--label
null;;goto--jumper-98
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-100
gotoif;>goto--halfstep-100
goto;>goto--jumper-100
dataread1;>xbuff_main;goto--halfstep-100
dataread2;>@13
gotoifless;>goto--branch-100
gotoif;>goto--branch-100
goto;>goto--jumper-100
dataread1;>@1;goto--branch-100
datawrite1;>main_actflg
null;;goto--jumper-100
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-101
gotoif;>goto--halfstep-101
goto;>goto--jumper-101
dataread1;>xbuff_main;goto--halfstep-101
dataread2;>@13
gotoifless;>goto--branch-101
gotoif;>goto--branch-101
goto;>goto--jumper-101
setreg1;>goto--jumper-101;goto--branch-101
s1push1
goto;>nothing_here--label
null;;goto--jumper-101
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-102
gotoif;>goto--halfstep-102
goto;>goto--jumper-102
dataread1;>xbuff_main;goto--halfstep-102
dataread2;>@28
gotoifless;>goto--branch-102
gotoif;>goto--branch-102
goto;>goto--jumper-102
dataread1;>@1;goto--branch-102
datawrite1;>main_actflg
null;;goto--jumper-102
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-103
gotoif;>goto--halfstep-103
goto;>goto--jumper-103
dataread1;>xbuff_main;goto--halfstep-103
dataread2;>@28
gotoifless;>goto--branch-103
gotoif;>goto--branch-103
goto;>goto--jumper-103
setreg1;>goto--jumper-103;goto--branch-103
s1push1
goto;>nothing_here--label
null;;goto--jumper-103
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-104
gotoif;>goto--halfstep-104
goto;>goto--jumper-104
dataread1;>xbuff_main;goto--halfstep-104
dataread2;>@43
gotoifless;>goto--branch-104
gotoif;>goto--branch-104
goto;>goto--jumper-104
dataread1;>@1;goto--branch-104
datawrite1;>main_actflg
null;;goto--jumper-104
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-105
gotoif;>goto--halfstep-105
goto;>goto--jumper-105
dataread1;>xbuff_main;goto--halfstep-105
dataread2;>@43
gotoifless;>goto--branch-105
gotoif;>goto--branch-105
goto;>goto--jumper-105
setreg1;>goto--jumper-105;goto--branch-105
s1push1
goto;>nothing_here--label
null;;goto--jumper-105
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-106
gotoif;>goto--halfstep-106
goto;>goto--jumper-106
dataread1;>xbuff_main;goto--halfstep-106
dataread2;>@58
gotoifless;>goto--branch-106
gotoif;>goto--branch-106
goto;>goto--jumper-106
dataread1;>@1;goto--branch-106
datawrite1;>main_actflg
null;;goto--jumper-106
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-107
gotoif;>goto--halfstep-107
goto;>goto--jumper-107
dataread1;>xbuff_main;goto--halfstep-107
dataread2;>@58
gotoifless;>goto--branch-107
gotoif;>goto--branch-107
goto;>goto--jumper-107
setreg1;>goto--jumper-107;goto--branch-107
s1push1
goto;>nothing_here--label
null;;goto--jumper-107
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-108
gotoif;>goto--halfstep-108
goto;>goto--jumper-108
dataread1;>xbuff_main;goto--halfstep-108
dataread2;>@73
gotoifless;>goto--branch-108
gotoif;>goto--branch-108
goto;>goto--jumper-108
dataread1;>@1;goto--branch-108
datawrite1;>main_actflg
null;;goto--jumper-108
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-109
gotoif;>goto--halfstep-109
goto;>goto--jumper-109
dataread1;>xbuff_main;goto--halfstep-109
dataread2;>@73
gotoifless;>goto--branch-109
gotoif;>goto--branch-109
goto;>goto--jumper-109
setreg1;>goto--jumper-109;goto--branch-109
s1push1
goto;>nothing_here--label
null;;goto--jumper-109
#label
null;;row3_skip--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #113
iowrite1;>mouse.button#SSTNPL Source Line: '113' 
#goto 
goto;>main--label
#label
null;;newline--label
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;space--label
#print space
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
null;;labelpad1--label
#Upward range iterator
dataread1;>@1
datawrite1;>foo1
setreg1;>uiter-retpos-133;uiter-loopback-133
s1push1
goto;>space--label
dataread1;>foo1;uiter-retpos-133
setreg2;10x1
add
datawrite1;>foo1
dataread2;>@11
gotoifless;>uiter-loopback-133
gotoif;>uiter-loopback-133

#return from subroutine.
s1pop1
gotoreg1
#label
null;;hudsplash--label
#Set text colors
dataread1;>*+++0--
iowrite1;>io.textcolor
#print
fopwri1;:S
#Set text colors
dataread1;>*+++00-
iowrite1;>io.textcolor
#print
fopwri1;:B
#Set text colors
dataread1;>*+++-0-
iowrite1;>io.textcolor
#print
fopwri1;:T
#Set text colors
dataread1;>*+++-00
iowrite1;>io.textcolor
#print
fopwri1;:C
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print
fopwri1;:V
#Set text colors
dataread1;>*+++0-0
iowrite1;>io.textcolor
#print
fopwri1;:M
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:5
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
null;;mainscreen_draw--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-163
s1push1
goto;>hudsplash--label
null;;goto--jumper-163
#prline
fopwri1;:M
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:M
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #167
include;sbtgsh+capps.tas0#SSTNPL Source Line: '167' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
#goto (extra code stores away return address.)
setreg1;>goto--jumper-173
s1push1
goto;>labelpad1--label
null;;goto--jumper-173
#print
fopwri1;:D
fopwri1;:i
fopwri1;:s
fopwri1;:k
#goto (extra code stores away return address.)
setreg1;>goto--jumper-175
s1push1
goto;>labelpad1--label
null;;goto--jumper-175
#print
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
#goto (extra code stores away return address.)
setreg1;>goto--jumper-177
s1push1
goto;>labelpad1--label
null;;goto--jumper-177
#print
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:E
fopwri1;:x
fopwri1;:i
fopwri1;:t
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #184
include;sbtgsh+capps2.tas0#SSTNPL Source Line: '184' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
#goto (extra code stores away return address.)
setreg1;>goto--jumper-190
s1push1
goto;>labelpad1--label
null;;goto--jumper-190
#print
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-194
s1push1
goto;>labelpad1--label
null;;goto--jumper-194
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-196
s1push1
goto;>labelpad1--label
null;;goto--jumper-196
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #201
include;sbtgsh+capps3.tas0#SSTNPL Source Line: '201' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-207
s1push1
goto;>labelpad1--label
null;;goto--jumper-207
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-209
s1push1
goto;>labelpad1--label
null;;goto--jumper-209
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-211
s1push1
goto;>labelpad1--label
null;;goto--jumper-211
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-213
s1push1
goto;>labelpad1--label
null;;goto--jumper-213
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;::
fopwri1;:\s
fopwri1;:3
fopwri1;:9
fopwri1;:.
fopwri1;:3
fopwri1;:6
fopwri1;:6
fopwri1;:\s
fopwri1;:K
fopwri1;:i
fopwri1;:l
fopwri1;:o
fopwri1;:N
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:C
fopwri1;:P
fopwri1;:U
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:_
fopwri1;:G
fopwri1;:2
fopwri1;:x
fopwri1;:_
fopwri1;:9
fopwri1;:_
fopwri1;:r
fopwri1;:1
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:I
fopwri1;:n
fopwri1;:p
fopwri1;:u
fopwri1;:t
fopwri1;::
fopwri1;:\s
fopwri1;:M
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #222
iowrite1;>mouse.button#SSTNPL Source Line: '222' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;beep--label
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #231
iowrite1;>snd.1.wave#SSTNPL Source Line: '231' 
#val (used with set to change variable value during runtime.)
setreg1;10x230
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #233
iowrite1;>snd.1.freq#SSTNPL Source Line: '233' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #235
iowrite1;>snd.1.play#SSTNPL Source Line: '235' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-236
setreg1;0;waitcy-loopback-236
setreg2;10x1
add
datawrite1;>waitcy-loopback-236
setreg2;10x666
gotoifless;>waitcy-loopback-236

#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #238
iowrite1;>snd.1.stop#SSTNPL Source Line: '238' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;menutune--label
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #244
iowrite1;>snd.1.wave#SSTNPL Source Line: '244' 
#val (used with set to change variable value during runtime.)
setreg1;10x220
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #246
iowrite1;>snd.1.freq#SSTNPL Source Line: '246' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #248
iowrite1;>snd.1.play#SSTNPL Source Line: '248' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-249
setreg1;0;waitcy-loopback-249
setreg2;10x1
add
datawrite1;>waitcy-loopback-249
setreg2;10x333
gotoifless;>waitcy-loopback-249

#val (used with set to change variable value during runtime.)
setreg1;10x330
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #251
iowrite1;>snd.1.freq#SSTNPL Source Line: '251' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #253
iowrite1;>snd.1.play#SSTNPL Source Line: '253' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-254
setreg1;0;waitcy-loopback-254
setreg2;10x1
add
datawrite1;>waitcy-loopback-254
setreg2;10x333
gotoifless;>waitcy-loopback-254

#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #256
iowrite1;>snd.1.stop#SSTNPL Source Line: '256' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;not_implemented--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-265
s1push1
goto;>hudsplash--label
null;;goto--jumper-265
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:p
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-268
s1push1
goto;>icon_message--label
null;;goto--jumper-268
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:y
fopwri1;:e
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:r
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-272;uiter-loopback-272
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-272
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-272
gotoif;>uiter-loopback-272

#goto (extra code stores away return address.)
setreg1;>goto--jumper-273
s1push1
goto;>beep--label
null;;goto--jumper-273
#goto (extra code stores away return address.)
setreg1;>goto--jumper-274
s1push1
goto;>click_wait--label
null;;goto--jumper-274
#return from subroutine.
s1pop1
gotoreg1
#label
null;;nothing_here--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-282
s1push1
goto;>hudsplash--label
null;;goto--jumper-282
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:p
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-285
s1push1
goto;>icon_message--label
null;;goto--jumper-285
#prline
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:s
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:e
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:r
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>nothing_here_fill
setreg1;>uiter-retpos-289;uiter-loopback-289
s1push1
goto;>newline--label
dataread1;>nothing_here_fill;uiter-retpos-289
setreg2;10x1
add
datawrite1;>nothing_here_fill
dataread2;>@17
gotoifless;>uiter-loopback-289
gotoif;>uiter-loopback-289

#goto (extra code stores away return address.)
setreg1;>goto--jumper-290
s1push1
goto;>beep--label
null;;goto--jumper-290
#goto (extra code stores away return address.)
setreg1;>goto--jumper-291
s1push1
goto;>click_wait--label
null;;goto--jumper-291
#return from subroutine.
s1pop1
gotoreg1
#label
null;;icon_message--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #298
include;sbtgsh+icon_message.tas0#SSTNPL Source Line: '298' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;icon_no--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #302
include;sbtgsh+icon_no.tas0#SSTNPL Source Line: '302' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help--label
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>help_actflg
#label
null;;help__loop--label
#conditional goto
dataread1;>@1
dataread2;>help_actflg
gotoif;>goto--jumper-315
goto;>goto--branch-315
setreg1;>goto--jumper-315;goto--branch-315
goto;>help__skipdraw--label
null;;goto--jumper-315
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>help_actflg
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-321
s1push1
goto;>hudsplash--label
null;;goto--jumper-321
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:I
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:x
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:<
fopwri1;:\s
fopwri1;:C
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:g
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:>
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*---++0
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*---0++
iowrite1;>io.textcolor
#prline
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-335;uiter-loopback-335
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-335
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@18
gotoifless;>uiter-loopback-335
gotoif;>uiter-loopback-335

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #337
iowrite1;>mouse.button#SSTNPL Source Line: '337' 
#label
null;;help__skipdraw--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #341
ioread1;>mouse.button#SSTNPL Source Line: '341' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-344
goto;>goto--branch-344
setreg1;>goto--jumper-344;goto--branch-344
goto;>help__skipdraw--label
null;;goto--jumper-344
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #346
ioread1;>mouse.locky#SSTNPL Source Line: '346' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_help
#conditional return
dataread1;>ybuff_help
dataread2;>@2
gotoif;>goto--branch-349
goto;>goto--jumper-349
s1pop1;;goto--branch-349
gotoreg1
null;;goto--jumper-349
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@3
gotoif;>goto--branch-351
goto;>goto--jumper-351
setreg1;>goto--jumper-351;goto--branch-351
s1push1
goto;>help_about--label
null;;goto--jumper-351
#conditional set
dataread1;>ybuff_help
dataread2;>@3
gotoif;>goto--branch-352
goto;>goto--jumper-352
dataread1;>@1;goto--branch-352
datawrite1;>help_actflg
null;;goto--jumper-352
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@4
gotoif;>goto--branch-354
goto;>goto--jumper-354
setreg1;>goto--jumper-354;goto--branch-354
s1push1
goto;>help_overview--label
null;;goto--jumper-354
#conditional set
dataread1;>ybuff_help
dataread2;>@4
gotoif;>goto--branch-355
goto;>goto--jumper-355
dataread1;>@1;goto--branch-355
datawrite1;>help_actflg
null;;goto--jumper-355
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@5
gotoif;>goto--branch-357
goto;>goto--jumper-357
setreg1;>goto--jumper-357;goto--branch-357
s1push1
goto;>help_calc--label
null;;goto--jumper-357
#conditional set
dataread1;>ybuff_help
dataread2;>@5
gotoif;>goto--branch-358
goto;>goto--jumper-358
dataread1;>@1;goto--branch-358
datawrite1;>help_actflg
null;;goto--jumper-358
#goto 
goto;>help__loop--label
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-367;uiter-loopback-367
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-367
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@21
gotoifless;>uiter-loopback-367
gotoif;>uiter-loopback-367

#goto (extra code stores away return address.)
setreg1;>goto--jumper-369
s1push1
goto;>click_wait--label
null;;goto--jumper-369
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_about--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-375
s1push1
goto;>hudsplash--label
null;;goto--jumper-375
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:G
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:h
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:S
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:5
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:9
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:,
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:,
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-400;uiter-loopback-400
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-400
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@4
gotoifless;>uiter-loopback-400
gotoif;>uiter-loopback-400

#goto (extra code stores away return address.)
setreg1;>goto--jumper-402
s1push1
goto;>click_wait--label
null;;goto--jumper-402
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_overview--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-408
s1push1
goto;>hudsplash--label
null;;goto--jumper-408
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:U
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:n
fopwri1;:a
fopwri1;:v
fopwri1;:i
fopwri1;:g
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:r
fopwri1;:i
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:m
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:u
fopwri1;:r
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:.
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-417;uiter-loopback-417
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-417
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@19
gotoifless;>uiter-loopback-417
gotoif;>uiter-loopback-417

#goto (extra code stores away return address.)
setreg1;>goto--jumper-419
s1push1
goto;>click_wait--label
null;;goto--jumper-419
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_calc--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-425
s1push1
goto;>hudsplash--label
null;;goto--jumper-425
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:O
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:.
fopwri1;:G
fopwri1;:.
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:U
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:[
fopwri1;:\s
fopwri1;:=
fopwri1;:\s
fopwri1;:]
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:s
fopwri1;:h
fopwri1;:\s
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:b
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:]
fopwri1;:,
fopwri1;:[
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:]
fopwri1;:,
fopwri1;:[
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:]
fopwri1;:,
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:[
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:]
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:\n
#prline
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:c
fopwri1;:l
fopwri1;:r
fopwri1;:]
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:]
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:]
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:e
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:o
fopwri1;:f
fopwri1;:f
fopwri1;:]
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-444;uiter-loopback-444
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-444
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@9
gotoifless;>uiter-loopback-444
gotoif;>uiter-loopback-444

#goto (extra code stores away return address.)
setreg1;>goto--jumper-446
s1push1
goto;>click_wait--label
null;;goto--jumper-446
#return from subroutine.
s1pop1
gotoreg1
#label
null;;click_wait--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #453
iowrite1;>mouse.button#SSTNPL Source Line: '453' 
#label
null;;click_wait_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #455
ioread1;>mouse.button#SSTNPL Source Line: '455' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-457
goto;>goto--branch-457
setreg1;>goto--jumper-457;goto--branch-457
goto;>click_wait_loop--label
null;;goto--jumper-457
#return from subroutine.
s1pop1
gotoreg1
#label
null;;VDI_shell--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-464
s1push1
goto;>hudsplash--label
null;;goto--jumper-464
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:W
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:'
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\n
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:'
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:u
fopwri1;:t
fopwri1;:d
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-469;uiter-loopback-469
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-469
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@19
gotoifless;>uiter-loopback-469
gotoif;>uiter-loopback-469

#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #473
include;vdishell.tas0#SSTNPL Source Line: '473' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #474
dataread1;>vdiexitcode#SSTNPL Source Line: '474' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>exitcode
#conditional return
dataread1;>exitcode
dataread2;>@1
gotoif;>goto--branch-476
goto;>goto--jumper-476
s1pop1;;goto--branch-476
gotoreg1
null;;goto--jumper-476
#conditional stop
dataread1;>exitcode
dataread2;>@2
gotoif;>goto--branch-477
goto;>goto--jumper-477
stop;;goto--branch-477

null;;goto--jumper-477
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_init--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgy
#label
null;;calc_loop--label
#conditional goto
dataread1;>calc_redrawflgx
dataread2;>@1
gotoif;>goto--jumper-503
goto;>goto--branch-503
setreg1;>goto--jumper-503;goto--branch-503
goto;>calc_inputloop--label
null;;goto--jumper-503
#conditional goto
dataread1;>calc_redrawflgy
dataread2;>@1
gotoif;>goto--jumper-504
goto;>goto--branch-504
setreg1;>goto--jumper-504;goto--branch-504
goto;>calc_inputloop--label
null;;goto--jumper-504
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-507
s1push1
goto;>hudsplash--label
null;;goto--jumper-507
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:\s
fopwri1;:+
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:0
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:P
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:]
fopwri1;:[
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:]
fopwri1;:[
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:=
fopwri1;:\s
fopwri1;:]
#Set text colors
dataread1;>*+++0--
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:o
fopwri1;:f
fopwri1;:f
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---++0
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:]
fopwri1;:[
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:]
fopwri1;:[
fopwri1;:c
fopwri1;:l
fopwri1;:r
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:B
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>calc_buffer
iowrite1;>io.tritdump
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>calc_entry
iowrite1;>io.tritdump
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-546;uiter-loopback-546
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-546
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@8
gotoifless;>uiter-loopback-546
gotoif;>uiter-loopback-546

#label
null;;calc_inputloop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #550
ioread1;>mouse.button#SSTNPL Source Line: '550' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-552
goto;>goto--branch-552
setreg1;>goto--jumper-552;goto--branch-552
goto;>calc_inputloop--label
null;;goto--jumper-552
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #561
ioread1;>mouse.lockx#SSTNPL Source Line: '561' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_calc
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #563
ioread1;>mouse.locky#SSTNPL Source Line: '563' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_calc
#conditional goto
dataread1;>xbuff_calc
dataread2;>@0
gotoifmore;>goto--halfstep-566
gotoif;>goto--halfstep-566
goto;>goto--branch-566
dataread1;>xbuff_calc;goto--halfstep-566
dataread2;>@4
gotoifless;>goto--jumper-566
gotoif;>goto--jumper-566
goto;>goto--branch-566
setreg1;>goto--jumper-566;goto--branch-566
goto;>calc_col1_skip--label
null;;goto--jumper-566
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-570
goto;>goto--jumper-570
dataread1;>*+;goto--branch-570
datawrite1;>tritbuff
null;;goto--jumper-570
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-571
goto;>goto--jumper-571
setreg1;>goto--jumper-571;goto--branch-571
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-571
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-573
goto;>goto--jumper-573
setreg1;>goto--jumper-573;goto--branch-573
s1push1
goto;>calc_add--label
null;;goto--jumper-573
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-574
goto;>goto--jumper-574
setreg1;>goto--jumper-574;goto--branch-574
s1push1
goto;>calc_div--label
null;;goto--jumper-574
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-575
goto;>goto--jumper-575
setreg1;>goto--jumper-575;goto--branch-575
s1push1
goto;>calc_tritpop--label
null;;goto--jumper-575
#label
null;;calc_col1_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@5
gotoifmore;>goto--halfstep-579
gotoif;>goto--halfstep-579
goto;>goto--branch-579
dataread1;>xbuff_calc;goto--halfstep-579
dataread2;>@9
gotoifless;>goto--jumper-579
gotoif;>goto--jumper-579
goto;>goto--branch-579
setreg1;>goto--jumper-579;goto--branch-579
goto;>calc_col2_skip--label
null;;goto--jumper-579
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-583
goto;>goto--jumper-583
dataread1;>*0;goto--branch-583
datawrite1;>tritbuff
null;;goto--jumper-583
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-584
goto;>goto--jumper-584
setreg1;>goto--jumper-584;goto--branch-584
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-584
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-585
goto;>goto--jumper-585
setreg1;>goto--jumper-585;goto--branch-585
s1push1
goto;>calc_sub--label
null;;goto--jumper-585
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-586
goto;>goto--jumper-586
setreg1;>goto--jumper-586;goto--branch-586
s1push1
goto;>calc_entrytobuffer--label
null;;goto--jumper-586
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-587
goto;>goto--jumper-587
setreg1;>goto--jumper-587;goto--branch-587
s1push1
goto;>calc_cleanup--label
null;;goto--jumper-587
#label
null;;calc_col2_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@10
gotoifmore;>goto--halfstep-592
gotoif;>goto--halfstep-592
goto;>goto--branch-592
dataread1;>xbuff_calc;goto--halfstep-592
dataread2;>@14
gotoifless;>goto--jumper-592
gotoif;>goto--jumper-592
goto;>goto--branch-592
setreg1;>goto--jumper-592;goto--branch-592
goto;>calc_col3_skip--label
null;;goto--jumper-592
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-596
goto;>goto--jumper-596
dataread1;>*-;goto--branch-596
datawrite1;>tritbuff
null;;goto--jumper-596
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-597
goto;>goto--jumper-597
setreg1;>goto--jumper-597;goto--branch-597
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-597
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-598
goto;>goto--jumper-598
setreg1;>goto--jumper-598;goto--branch-598
s1push1
goto;>calc_mul--label
null;;goto--jumper-598
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-599
goto;>goto--jumper-599
setreg1;>goto--jumper-599;goto--branch-599
s1push1
goto;>calc_cleanup--label
null;;goto--jumper-599
#conditional return
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-600
goto;>goto--jumper-600
s1pop1;;goto--branch-600
gotoreg1
null;;goto--jumper-600
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-601
goto;>goto--jumper-601
setreg1;>goto--jumper-601;goto--branch-601
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-601
#label
null;;calc_col3_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@15
gotoifmore;>goto--halfstep-605
gotoif;>goto--halfstep-605
goto;>goto--branch-605
dataread1;>xbuff_calc;goto--halfstep-605
dataread2;>@20
gotoifless;>goto--jumper-605
gotoif;>goto--jumper-605
goto;>goto--branch-605
setreg1;>goto--jumper-605;goto--branch-605
goto;>calc_col4_skip--label
null;;goto--jumper-605
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-608
goto;>goto--jumper-608
setreg1;>goto--jumper-608;goto--branch-608
s1push1
goto;>help_calc--label
null;;goto--jumper-608
#label
null;;calc_col4_skip--label
#conditional set
dataread1;>@3
dataread2;>ybuff_calc
gotoif;>goto--branch-613
goto;>goto--jumper-613
dataread1;>@1;goto--branch-613
datawrite1;>calc_redrawflgy
null;;goto--jumper-613
#conditional set
dataread1;>@5
dataread2;>ybuff_calc
gotoif;>goto--branch-614
goto;>goto--jumper-614
dataread1;>@1;goto--branch-614
datawrite1;>calc_redrawflgy
null;;goto--jumper-614
#conditional set
dataread1;>@7
dataread2;>ybuff_calc
gotoif;>goto--branch-615
goto;>goto--jumper-615
dataread1;>@1;goto--branch-615
datawrite1;>calc_redrawflgy
null;;goto--jumper-615
#conditional set
dataread1;>@9
dataread2;>ybuff_calc
gotoif;>goto--branch-616
goto;>goto--jumper-616
dataread1;>@1;goto--branch-616
datawrite1;>calc_redrawflgy
null;;goto--jumper-616
#goto 
goto;>calc_loop--label
#label
null;;calc_tritpush--label
#conditional return
dataread1;>tritlen
dataread2;>@9
gotoif;>goto--branch-622
goto;>goto--jumper-622
s1pop1;;goto--branch-622
gotoreg1
null;;goto--jumper-622
#get(1) (may be used with set, or asm code)
dataread1;>tritbuff
#stack push (uses stack 2)
s2push1
#multiply (2op math)
dataread1;>calc_entry
dataread2;>@3
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#add (2op math)
dataread1;>calc_entry
dataread2;>tritbuff
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#add (2op math)
dataread1;>tritlen
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_tritpop--label
#conditional return
dataread1;>tritlen
dataread2;>@0
gotoif;>goto--branch-635
goto;>goto--jumper-635
s1pop1;;goto--branch-635
gotoreg1
null;;goto--jumper-635
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#subtract (2op math)
dataread1;>calc_entry
dataread2;>tritbuff
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#divide (2op math)
dataread1;>calc_entry
dataread2;>@3
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#subtract (2op math)
dataread1;>tritlen
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_cleanup--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-648
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-648
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_purgeentry--label
#Upward range iterator
dataread1;>@0
datawrite1;>calc_cleanloop
setreg1;>uiter-retpos-654;uiter-loopback-654
s1push1
goto;>calc_tritpop--label
dataread1;>calc_cleanloop;uiter-retpos-654
setreg2;10x1
add
datawrite1;>calc_cleanloop
dataread2;>@9
gotoifless;>uiter-loopback-654
gotoif;>uiter-loopback-654

#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_entrytobuffer--label
#get(1) (may be used with set, or asm code)
dataread1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-664
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-664
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_add--label
#add (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-670
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-670
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_sub--label
#subtract (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-676
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-676
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_mul--label
#multiply (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-682
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-682
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_div--label
#conditional subroutine goto
dataread1;>calc_entry
dataread2;>@0
gotoif;>goto--branch-686
goto;>goto--jumper-686
setreg1;>goto--jumper-686;goto--branch-686
s1push1
goto;>calc_ERROR--label
null;;goto--jumper-686
#conditional return
dataread1;>calc_entry
dataread2;>@0
gotoif;>goto--branch-687
goto;>goto--jumper-687
s1pop1;;goto--branch-687
gotoreg1
null;;goto--jumper-687
#divide (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-690
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-690
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_ERROR--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-698
s1push1
goto;>hudsplash--label
null;;goto--jumper-698
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:B
fopwri1;:Y
fopwri1;:\s
fopwri1;:Z
fopwri1;:E
fopwri1;:R
fopwri1;:O
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-701
s1push1
goto;>icon_no--label
null;;goto--jumper-701
#prline
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:e
fopwri1;:r
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-706;uiter-loopback-706
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-706
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-706
gotoif;>uiter-loopback-706

#goto (extra code stores away return address.)
setreg1;>goto--jumper-707
s1push1
goto;>beep--label
null;;goto--jumper-707
#goto (extra code stores away return address.)
setreg1;>goto--jumper-708
s1push1
goto;>click_wait--label
null;;goto--jumper-708
#return from subroutine.
s1pop1
gotoreg1
#label
null;;crystal_ball--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #718
iowrite1;>mouse.button#SSTNPL Source Line: '718' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-723
s1push1
goto;>hudsplash--label
null;;goto--jumper-723
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:.
fopwri1;:\s
fopwri1;:A
fopwri1;:s
fopwri1;:k
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:Y
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:m
fopwri1;:y
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:o
fopwri1;:r
fopwri1;:w
fopwri1;:a
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:i
fopwri1;:f
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:s
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #729
include;sbtgsh+ball.tas0#SSTNPL Source Line: '729' 
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-731;uiter-loopback-731
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-731
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@13
gotoifless;>uiter-loopback-731
gotoif;>uiter-loopback-731

#label
null;;cry_inputloop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #736
ioread1;>mouse.button#SSTNPL Source Line: '736' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#Random ranged number
dataread1;>@1
dataread2;>@70
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>thunderflag
#conditional subroutine goto
dataread1;>thunderflag
dataread2;>@1
gotoif;>goto--branch-741
goto;>goto--jumper-741
setreg1;>goto--jumper-741;goto--branch-741
s1push1
goto;>cry_thunder--label
null;;goto--jumper-741
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-742
goto;>goto--branch-742
setreg1;>goto--jumper-742;goto--branch-742
goto;>cry_inputloop--label
null;;goto--jumper-742
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #745
ioread1;>mouse.lockx#SSTNPL Source Line: '745' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_cry
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #747
ioread1;>mouse.locky#SSTNPL Source Line: '747' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_cry
#conditional goto
dataread1;>ybuff_cry
dataread2;>@3
gotoifmore;>goto--halfstep-750
gotoif;>goto--halfstep-750
goto;>goto--branch-750
dataread1;>ybuff_cry;goto--halfstep-750
dataread2;>@10
gotoifless;>goto--jumper-750
gotoif;>goto--jumper-750
goto;>goto--branch-750
setreg1;>goto--jumper-750;goto--branch-750
goto;>cry_inputloop--label
null;;goto--jumper-750
#conditional goto
dataread1;>xbuff_cry
dataread2;>@0
gotoifmore;>goto--halfstep-751
gotoif;>goto--halfstep-751
goto;>goto--branch-751
dataread1;>xbuff_cry;goto--halfstep-751
dataread2;>@35
gotoifless;>goto--jumper-751
gotoif;>goto--jumper-751
goto;>goto--branch-751
setreg1;>goto--jumper-751;goto--branch-751
goto;>cry_inputloop--label
null;;goto--jumper-751
#conditional subroutine goto
dataread1;>xbuff_cry
dataread2;>@0
gotoifmore;>goto--halfstep-752
gotoif;>goto--halfstep-752
goto;>goto--jumper-752
dataread1;>xbuff_cry;goto--halfstep-752
dataread2;>@23
gotoifless;>goto--branch-752
gotoif;>goto--branch-752
goto;>goto--jumper-752
setreg1;>goto--jumper-752;goto--branch-752
s1push1
goto;>cry_do_ball--label
null;;goto--jumper-752
#conditional return
dataread1;>xbuff_cry
dataread2;>@25
gotoifmore;>goto--halfstep-753
gotoif;>goto--halfstep-753
goto;>goto--jumper-753
dataread1;>xbuff_cry;goto--halfstep-753
dataread2;>@35
gotoifless;>goto--branch-753
gotoif;>goto--branch-753
goto;>goto--jumper-753
s1pop1;;goto--branch-753
gotoreg1
null;;goto--jumper-753
#goto 
goto;>crystal_ball--label
#label
null;;cry_do_ball--label
#Random ranged number
dataread1;>@-1
dataread2;>@1
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>crystal_random
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@1
gotoif;>goto--branch-762
goto;>goto--jumper-762
setreg1;>goto--jumper-762;goto--branch-762
s1push1
goto;>cry_yes--label
null;;goto--jumper-762
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@0
gotoif;>goto--branch-763
goto;>goto--jumper-763
setreg1;>goto--jumper-763;goto--branch-763
s1push1
goto;>cry_unsure--label
null;;goto--jumper-763
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@-1
gotoif;>goto--branch-764
goto;>goto--jumper-764
setreg1;>goto--jumper-764;goto--branch-764
s1push1
goto;>cry_no--label
null;;goto--jumper-764
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_no--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-771
s1push1
goto;>hudsplash--label
null;;goto--jumper-771
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-774
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-774
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:p
fopwri1;:i
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:k
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-776;uiter-loopback-776
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-776
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-776
gotoif;>uiter-loopback-776

#goto (extra code stores away return address.)
setreg1;>goto--jumper-777
s1push1
goto;>cry_tune2--label
null;;goto--jumper-777
#goto (extra code stores away return address.)
setreg1;>goto--jumper-778
s1push1
goto;>click_wait--label
null;;goto--jumper-778
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_yes--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-784
s1push1
goto;>hudsplash--label
null;;goto--jumper-784
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-787
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-787
#prline
fopwri1;:Y
fopwri1;:e
fopwri1;:s
fopwri1;:,
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:e
fopwri1;:d
fopwri1;:,
fopwri1;:\s
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:!
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-789;uiter-loopback-789
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-789
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-789
gotoif;>uiter-loopback-789

#goto (extra code stores away return address.)
setreg1;>goto--jumper-790
s1push1
goto;>cry_tune3--label
null;;goto--jumper-790
#goto (extra code stores away return address.)
setreg1;>goto--jumper-791
s1push1
goto;>click_wait--label
null;;goto--jumper-791
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_unsure--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-797
s1push1
goto;>hudsplash--label
null;;goto--jumper-797
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-800
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-800
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:i
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:p
fopwri1;:o
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:k
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-802;uiter-loopback-802
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-802
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-802
gotoif;>uiter-loopback-802

#goto (extra code stores away return address.)
setreg1;>goto--jumper-803
s1push1
goto;>cry_tune1--label
null;;goto--jumper-803
#goto (extra code stores away return address.)
setreg1;>goto--jumper-804
s1push1
goto;>click_wait--label
null;;goto--jumper-804
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_ballicon--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #808
include;sbtgsh+ballicon.tas0#SSTNPL Source Line: '808' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_tune1--label
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #813
iowrite1;>snd.1.wave#SSTNPL Source Line: '813' 
#val (used with set to change variable value during runtime.)
setreg1;10x74
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #815
iowrite1;>snd.1.freq#SSTNPL Source Line: '815' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #817
iowrite1;>snd.1.play#SSTNPL Source Line: '817' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-818
setreg1;0;waitcy-loopback-818
setreg2;10x1
add
datawrite1;>waitcy-loopback-818
setreg2;10x250
gotoifless;>waitcy-loopback-818

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #819
iowrite1;>snd.1.stop#SSTNPL Source Line: '819' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-820
setreg1;0;waitcy-loopback-820
setreg2;10x1
add
datawrite1;>waitcy-loopback-820
setreg2;10x250
gotoifless;>waitcy-loopback-820

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #821
iowrite1;>snd.1.play#SSTNPL Source Line: '821' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-822
setreg1;0;waitcy-loopback-822
setreg2;10x1
add
datawrite1;>waitcy-loopback-822
setreg2;10x250
gotoifless;>waitcy-loopback-822

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #823
iowrite1;>snd.1.stop#SSTNPL Source Line: '823' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-824
setreg1;0;waitcy-loopback-824
setreg2;10x1
add
datawrite1;>waitcy-loopback-824
setreg2;10x250
gotoifless;>waitcy-loopback-824

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #825
iowrite1;>snd.1.play#SSTNPL Source Line: '825' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-826
setreg1;0;waitcy-loopback-826
setreg2;10x1
add
datawrite1;>waitcy-loopback-826
setreg2;10x250
gotoifless;>waitcy-loopback-826

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #827
iowrite1;>snd.1.stop#SSTNPL Source Line: '827' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-828
setreg1;0;waitcy-loopback-828
setreg2;10x1
add
datawrite1;>waitcy-loopback-828
setreg2;10x250
gotoifless;>waitcy-loopback-828

#val (used with set to change variable value during runtime.)
setreg1;10x92
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #831
iowrite1;>snd.1.freq#SSTNPL Source Line: '831' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #833
iowrite1;>snd.1.play#SSTNPL Source Line: '833' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-834
setreg1;0;waitcy-loopback-834
setreg2;10x1
add
datawrite1;>waitcy-loopback-834
setreg2;10x1666
gotoifless;>waitcy-loopback-834

#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #836
iowrite1;>snd.1.stop#SSTNPL Source Line: '836' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_tune2--label
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #841
iowrite1;>snd.1.wave#SSTNPL Source Line: '841' 
#val (used with set to change variable value during runtime.)
setreg1;10x74
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #843
iowrite1;>snd.1.freq#SSTNPL Source Line: '843' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #845
iowrite1;>snd.1.play#SSTNPL Source Line: '845' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-846
setreg1;0;waitcy-loopback-846
setreg2;10x1
add
datawrite1;>waitcy-loopback-846
setreg2;10x250
gotoifless;>waitcy-loopback-846

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #847
iowrite1;>snd.1.stop#SSTNPL Source Line: '847' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-848
setreg1;0;waitcy-loopback-848
setreg2;10x1
add
datawrite1;>waitcy-loopback-848
setreg2;10x250
gotoifless;>waitcy-loopback-848

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #849
iowrite1;>snd.1.play#SSTNPL Source Line: '849' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-850
setreg1;0;waitcy-loopback-850
setreg2;10x1
add
datawrite1;>waitcy-loopback-850
setreg2;10x250
gotoifless;>waitcy-loopback-850

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #851
iowrite1;>snd.1.stop#SSTNPL Source Line: '851' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-852
setreg1;0;waitcy-loopback-852
setreg2;10x1
add
datawrite1;>waitcy-loopback-852
setreg2;10x250
gotoifless;>waitcy-loopback-852

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #853
iowrite1;>snd.1.play#SSTNPL Source Line: '853' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-854
setreg1;0;waitcy-loopback-854
setreg2;10x1
add
datawrite1;>waitcy-loopback-854
setreg2;10x250
gotoifless;>waitcy-loopback-854

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #855
iowrite1;>snd.1.stop#SSTNPL Source Line: '855' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-856
setreg1;0;waitcy-loopback-856
setreg2;10x1
add
datawrite1;>waitcy-loopback-856
setreg2;10x250
gotoifless;>waitcy-loopback-856

#val (used with set to change variable value during runtime.)
setreg1;10x69
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #859
iowrite1;>snd.1.freq#SSTNPL Source Line: '859' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #861
iowrite1;>snd.1.play#SSTNPL Source Line: '861' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-862
setreg1;0;waitcy-loopback-862
setreg2;10x1
add
datawrite1;>waitcy-loopback-862
setreg2;10x1666
gotoifless;>waitcy-loopback-862

#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #864
iowrite1;>snd.1.stop#SSTNPL Source Line: '864' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_tune3--label
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #869
iowrite1;>snd.1.wave#SSTNPL Source Line: '869' 
#val (used with set to change variable value during runtime.)
setreg1;10x92
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #871
iowrite1;>snd.1.freq#SSTNPL Source Line: '871' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #873
iowrite1;>snd.1.play#SSTNPL Source Line: '873' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-874
setreg1;0;waitcy-loopback-874
setreg2;10x1
add
datawrite1;>waitcy-loopback-874
setreg2;10x250
gotoifless;>waitcy-loopback-874

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #875
iowrite1;>snd.1.stop#SSTNPL Source Line: '875' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-876
setreg1;0;waitcy-loopback-876
setreg2;10x1
add
datawrite1;>waitcy-loopback-876
setreg2;10x250
gotoifless;>waitcy-loopback-876

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #877
iowrite1;>snd.1.play#SSTNPL Source Line: '877' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-878
setreg1;0;waitcy-loopback-878
setreg2;10x1
add
datawrite1;>waitcy-loopback-878
setreg2;10x250
gotoifless;>waitcy-loopback-878

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #879
iowrite1;>snd.1.stop#SSTNPL Source Line: '879' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-880
setreg1;0;waitcy-loopback-880
setreg2;10x1
add
datawrite1;>waitcy-loopback-880
setreg2;10x250
gotoifless;>waitcy-loopback-880

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #881
iowrite1;>snd.1.play#SSTNPL Source Line: '881' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-882
setreg1;0;waitcy-loopback-882
setreg2;10x1
add
datawrite1;>waitcy-loopback-882
setreg2;10x250
gotoifless;>waitcy-loopback-882

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #883
iowrite1;>snd.1.stop#SSTNPL Source Line: '883' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-884
setreg1;0;waitcy-loopback-884
setreg2;10x1
add
datawrite1;>waitcy-loopback-884
setreg2;10x250
gotoifless;>waitcy-loopback-884

#val (used with set to change variable value during runtime.)
setreg1;10x139
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #887
iowrite1;>snd.1.freq#SSTNPL Source Line: '887' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #889
iowrite1;>snd.1.play#SSTNPL Source Line: '889' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-890
setreg1;0;waitcy-loopback-890
setreg2;10x1
add
datawrite1;>waitcy-loopback-890
setreg2;10x1666
gotoifless;>waitcy-loopback-890

#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #892
iowrite1;>snd.1.stop#SSTNPL Source Line: '892' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_thunder--label
#val (used with set to change variable value during runtime.)
setreg1;10x5
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #896
iowrite1;>snd.1.wave#SSTNPL Source Line: '896' 
#Random ranged number
dataread1;>@-1
dataread2;>@1
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #898
iowrite1;>snd.1.pan#SSTNPL Source Line: '898' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #899
iowrite1;>snd.1.play#SSTNPL Source Line: '899' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-900
setreg1;0;waitcy-loopback-900
setreg2;10x1
add
datawrite1;>waitcy-loopback-900
setreg2;10x83
gotoifless;>waitcy-loopback-900

#val (used with set to change variable value during runtime.)
setreg1;10x9
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #902
iowrite1;>snd.1.vol#SSTNPL Source Line: '902' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-903
setreg1;0;waitcy-loopback-903
setreg2;10x1
add
datawrite1;>waitcy-loopback-903
setreg2;10x83
gotoifless;>waitcy-loopback-903

#val (used with set to change variable value during runtime.)
setreg1;10x8
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #905
iowrite1;>snd.1.vol#SSTNPL Source Line: '905' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-906
setreg1;0;waitcy-loopback-906
setreg2;10x1
add
datawrite1;>waitcy-loopback-906
setreg2;10x83
gotoifless;>waitcy-loopback-906

#val (used with set to change variable value during runtime.)
setreg1;10x7
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #908
iowrite1;>snd.1.vol#SSTNPL Source Line: '908' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-909
setreg1;0;waitcy-loopback-909
setreg2;10x1
add
datawrite1;>waitcy-loopback-909
setreg2;10x83
gotoifless;>waitcy-loopback-909

#val (used with set to change variable value during runtime.)
setreg1;10x6
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #911
iowrite1;>snd.1.vol#SSTNPL Source Line: '911' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-912
setreg1;0;waitcy-loopback-912
setreg2;10x1
add
datawrite1;>waitcy-loopback-912
setreg2;10x83
gotoifless;>waitcy-loopback-912

#val (used with set to change variable value during runtime.)
setreg1;10x5
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #914
iowrite1;>snd.1.vol#SSTNPL Source Line: '914' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-915
setreg1;0;waitcy-loopback-915
setreg2;10x1
add
datawrite1;>waitcy-loopback-915
setreg2;10x83
gotoifless;>waitcy-loopback-915

#val (used with set to change variable value during runtime.)
setreg1;10x4
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #917
iowrite1;>snd.1.vol#SSTNPL Source Line: '917' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-918
setreg1;0;waitcy-loopback-918
setreg2;10x1
add
datawrite1;>waitcy-loopback-918
setreg2;10x83
gotoifless;>waitcy-loopback-918

#val (used with set to change variable value during runtime.)
setreg1;10x3
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #920
iowrite1;>snd.1.vol#SSTNPL Source Line: '920' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-921
setreg1;0;waitcy-loopback-921
setreg2;10x1
add
datawrite1;>waitcy-loopback-921
setreg2;10x83
gotoifless;>waitcy-loopback-921

#val (used with set to change variable value during runtime.)
setreg1;10x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #923
iowrite1;>snd.1.vol#SSTNPL Source Line: '923' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-924
setreg1;0;waitcy-loopback-924
setreg2;10x1
add
datawrite1;>waitcy-loopback-924
setreg2;10x83
gotoifless;>waitcy-loopback-924

#val (used with set to change variable value during runtime.)
setreg1;10x1
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #926
iowrite1;>snd.1.vol#SSTNPL Source Line: '926' 
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-927
setreg1;0;waitcy-loopback-927
setreg2;10x1
add
datawrite1;>waitcy-loopback-927
setreg2;10x83
gotoifless;>waitcy-loopback-927

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #928
iowrite1;>snd.1.stop#SSTNPL Source Line: '928' 
#val (used with set to change variable value during runtime.)
setreg1;10x10
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #930
iowrite1;>snd.1.vol#SSTNPL Source Line: '930' 
#val (used with set to change variable value during runtime.)
setreg1;0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #932
iowrite1;>snd.1.pan#SSTNPL Source Line: '932' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-940
s1push1
goto;>hudsplash--label
null;;goto--jumper-940
#prline
fopwri1;:S
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-944;uiter-loopback-944
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-944
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@20
gotoifless;>uiter-loopback-944
gotoif;>uiter-loopback-944

#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#label
null;;sys_shell_loop--label
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#prline
fopwri1;:S
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:L
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:Y
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#print
fopwri1;:>
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #955
iowrite1;>io.ttyrd#SSTNPL Source Line: '955' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-957
s1push1
goto;>cp.getentry--label
null;;goto--jumper-957
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_validcom
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--964
null;;tabstrc--adrbuff--964
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--964
null;;tabstrc--outbuff--964
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--964

datawrite1;>tabstrc--recurs-tabbuff--964_1
dataread1;;tabstrc--recurs-tabbuff--964_1
datawrite1;>tabstrc--recurs-tabbuff_read--964_1
dataread1;;tabstrc--recurs-tabbuff_read--964_1

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--964_1
goto;>tabstrc--recurs-checkno--964_1
null;;tabstrc--recurs-checkyes--964_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--964
setreg2;+
add
datawrite1;>tabstrc--adrbuff--964

setreg1;>tabstrc--adrbuff--964

datawrite1;>tabstrc--recurs-tabbuff--964_2
dataread1;;tabstrc--recurs-tabbuff--964_2
datawrite1;>tabstrc--recurs-tabbuff_read--964_2
dataread1;;tabstrc--recurs-tabbuff_read--964_2

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--964_2
goto;>tabstrc--recurs-checkno--964_2
null;;tabstrc--recurs-checkyes--964_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--964
setreg2;+
add
datawrite1;>tabstrc--adrbuff--964

setreg1;>tabstrc--adrbuff--964

datawrite1;>tabstrc--recurs-tabbuff--964_3
dataread1;;tabstrc--recurs-tabbuff--964_3
datawrite1;>tabstrc--recurs-tabbuff_read--964_3
dataread1;;tabstrc--recurs-tabbuff_read--964_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--964_3
goto;>tabstrc--recurs-checkno--964_3
null;;tabstrc--recurs-checkyes--964_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--964
setreg2;+
add
datawrite1;>tabstrc--adrbuff--964

setreg1;>tabstrc--adrbuff--964

datawrite1;>tabstrc--recurs-tabbuff--964_4
dataread1;;tabstrc--recurs-tabbuff--964_4
datawrite1;>tabstrc--recurs-tabbuff_read--964_4
dataread1;;tabstrc--recurs-tabbuff_read--964_4

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--964_4
goto;>tabstrc--recurs-checkno--964_4
null;;tabstrc--recurs-checkyes--964_4
##set flag########
setreg1;>tabstrc--outbuff--964
datawrite1;>tabstrc--recurs-flag--964_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--964_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--964_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--964_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--964_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--964_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--964
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-966
goto;>goto--jumper-966
setreg1;>goto--jumper-966;goto--branch-966
s1push1
goto;>sys_shell_help--label
null;;goto--jumper-966
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--968
null;;tabstrc--adrbuff--968
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--968
null;;tabstrc--outbuff--968
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--968

datawrite1;>tabstrc--recurs-tabbuff--968_1
dataread1;;tabstrc--recurs-tabbuff--968_1
datawrite1;>tabstrc--recurs-tabbuff_read--968_1
dataread1;;tabstrc--recurs-tabbuff_read--968_1

setreg2;:b


gotoif;>tabstrc--recurs-checkyes--968_1
goto;>tabstrc--recurs-checkno--968_1
null;;tabstrc--recurs-checkyes--968_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--968
setreg2;+
add
datawrite1;>tabstrc--adrbuff--968

setreg1;>tabstrc--adrbuff--968

datawrite1;>tabstrc--recurs-tabbuff--968_2
dataread1;;tabstrc--recurs-tabbuff--968_2
datawrite1;>tabstrc--recurs-tabbuff_read--968_2
dataread1;;tabstrc--recurs-tabbuff_read--968_2

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--968_2
goto;>tabstrc--recurs-checkno--968_2
null;;tabstrc--recurs-checkyes--968_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--968
setreg2;+
add
datawrite1;>tabstrc--adrbuff--968

setreg1;>tabstrc--adrbuff--968

datawrite1;>tabstrc--recurs-tabbuff--968_3
dataread1;;tabstrc--recurs-tabbuff--968_3
datawrite1;>tabstrc--recurs-tabbuff_read--968_3
dataread1;;tabstrc--recurs-tabbuff_read--968_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--968_3
goto;>tabstrc--recurs-checkno--968_3
null;;tabstrc--recurs-checkyes--968_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--968
setreg2;+
add
datawrite1;>tabstrc--adrbuff--968

setreg1;>tabstrc--adrbuff--968

datawrite1;>tabstrc--recurs-tabbuff--968_4
dataread1;;tabstrc--recurs-tabbuff--968_4
datawrite1;>tabstrc--recurs-tabbuff_read--968_4
dataread1;;tabstrc--recurs-tabbuff_read--968_4

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--968_4
goto;>tabstrc--recurs-checkno--968_4
null;;tabstrc--recurs-checkyes--968_4
##set flag########
setreg1;>tabstrc--outbuff--968
datawrite1;>tabstrc--recurs-flag--968_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--968_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--968_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--968_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--968_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--968_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--968
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-970
goto;>goto--jumper-970
setreg1;>goto--jumper-970;goto--branch-970
s1push1
goto;>crystal_ball--label
null;;goto--jumper-970
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--972
null;;tabstrc--adrbuff--972
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--972
null;;tabstrc--outbuff--972
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--972

datawrite1;>tabstrc--recurs-tabbuff--972_1
dataread1;;tabstrc--recurs-tabbuff--972_1
datawrite1;>tabstrc--recurs-tabbuff_read--972_1
dataread1;;tabstrc--recurs-tabbuff_read--972_1

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--972_1
goto;>tabstrc--recurs-checkno--972_1
null;;tabstrc--recurs-checkyes--972_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--972
setreg2;+
add
datawrite1;>tabstrc--adrbuff--972

setreg1;>tabstrc--adrbuff--972

datawrite1;>tabstrc--recurs-tabbuff--972_2
dataread1;;tabstrc--recurs-tabbuff--972_2
datawrite1;>tabstrc--recurs-tabbuff_read--972_2
dataread1;;tabstrc--recurs-tabbuff_read--972_2

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--972_2
goto;>tabstrc--recurs-checkno--972_2
null;;tabstrc--recurs-checkyes--972_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--972
setreg2;+
add
datawrite1;>tabstrc--adrbuff--972

setreg1;>tabstrc--adrbuff--972

datawrite1;>tabstrc--recurs-tabbuff--972_3
dataread1;;tabstrc--recurs-tabbuff--972_3
datawrite1;>tabstrc--recurs-tabbuff_read--972_3
dataread1;;tabstrc--recurs-tabbuff_read--972_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--972_3
goto;>tabstrc--recurs-checkno--972_3
null;;tabstrc--recurs-checkyes--972_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--972
setreg2;+
add
datawrite1;>tabstrc--adrbuff--972

setreg1;>tabstrc--adrbuff--972

datawrite1;>tabstrc--recurs-tabbuff--972_4
dataread1;;tabstrc--recurs-tabbuff--972_4
datawrite1;>tabstrc--recurs-tabbuff_read--972_4
dataread1;;tabstrc--recurs-tabbuff_read--972_4

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--972_4
goto;>tabstrc--recurs-checkno--972_4
null;;tabstrc--recurs-checkyes--972_4
##set flag########
setreg1;>tabstrc--outbuff--972
datawrite1;>tabstrc--recurs-flag--972_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--972_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--972_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--972_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--972_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--972_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--972
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-974
goto;>goto--jumper-974
setreg1;>goto--jumper-974;goto--branch-974
s1push1
goto;>calc_init--label
null;;goto--jumper-974
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--976
null;;tabstrc--adrbuff--976
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--976
null;;tabstrc--outbuff--976
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--976

datawrite1;>tabstrc--recurs-tabbuff--976_1
dataread1;;tabstrc--recurs-tabbuff--976_1
datawrite1;>tabstrc--recurs-tabbuff_read--976_1
dataread1;;tabstrc--recurs-tabbuff_read--976_1

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--976_1
goto;>tabstrc--recurs-checkno--976_1
null;;tabstrc--recurs-checkyes--976_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--976
setreg2;+
add
datawrite1;>tabstrc--adrbuff--976

setreg1;>tabstrc--adrbuff--976

datawrite1;>tabstrc--recurs-tabbuff--976_2
dataread1;;tabstrc--recurs-tabbuff--976_2
datawrite1;>tabstrc--recurs-tabbuff_read--976_2
dataread1;;tabstrc--recurs-tabbuff_read--976_2

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--976_2
goto;>tabstrc--recurs-checkno--976_2
null;;tabstrc--recurs-checkyes--976_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--976
setreg2;+
add
datawrite1;>tabstrc--adrbuff--976

setreg1;>tabstrc--adrbuff--976

datawrite1;>tabstrc--recurs-tabbuff--976_3
dataread1;;tabstrc--recurs-tabbuff--976_3
datawrite1;>tabstrc--recurs-tabbuff_read--976_3
dataread1;;tabstrc--recurs-tabbuff_read--976_3

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--976_3
goto;>tabstrc--recurs-checkno--976_3
null;;tabstrc--recurs-checkyes--976_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--976
setreg2;+
add
datawrite1;>tabstrc--adrbuff--976

setreg1;>tabstrc--adrbuff--976

datawrite1;>tabstrc--recurs-tabbuff--976_4
dataread1;;tabstrc--recurs-tabbuff--976_4
datawrite1;>tabstrc--recurs-tabbuff_read--976_4
dataread1;;tabstrc--recurs-tabbuff_read--976_4

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--976_4
goto;>tabstrc--recurs-checkno--976_4
null;;tabstrc--recurs-checkyes--976_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--976
setreg2;+
add
datawrite1;>tabstrc--adrbuff--976

setreg1;>tabstrc--adrbuff--976

datawrite1;>tabstrc--recurs-tabbuff--976_5
dataread1;;tabstrc--recurs-tabbuff--976_5
datawrite1;>tabstrc--recurs-tabbuff_read--976_5
dataread1;;tabstrc--recurs-tabbuff_read--976_5

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--976_5
goto;>tabstrc--recurs-checkno--976_5
null;;tabstrc--recurs-checkyes--976_5
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--976
setreg2;+
add
datawrite1;>tabstrc--adrbuff--976

setreg1;>tabstrc--adrbuff--976

datawrite1;>tabstrc--recurs-tabbuff--976_6
dataread1;;tabstrc--recurs-tabbuff--976_6
datawrite1;>tabstrc--recurs-tabbuff_read--976_6
dataread1;;tabstrc--recurs-tabbuff_read--976_6

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--976_6
goto;>tabstrc--recurs-checkno--976_6
null;;tabstrc--recurs-checkyes--976_6
##set flag########
setreg1;>tabstrc--outbuff--976
datawrite1;>tabstrc--recurs-flag--976_6
setreg1;+
datawrite1;;tabstrc--recurs-flag--976_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--976_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--976_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--976_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--976_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--976_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--976_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--976
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-978
goto;>goto--jumper-978
setreg1;>goto--jumper-978;goto--branch-978
s1push1
goto;>help--label
null;;goto--jumper-978
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--980
null;;tabstrc--adrbuff--980
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--980
null;;tabstrc--outbuff--980
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--980

datawrite1;>tabstrc--recurs-tabbuff--980_1
dataread1;;tabstrc--recurs-tabbuff--980_1
datawrite1;>tabstrc--recurs-tabbuff_read--980_1
dataread1;;tabstrc--recurs-tabbuff_read--980_1

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--980_1
goto;>tabstrc--recurs-checkno--980_1
null;;tabstrc--recurs-checkyes--980_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--980
setreg2;+
add
datawrite1;>tabstrc--adrbuff--980

setreg1;>tabstrc--adrbuff--980

datawrite1;>tabstrc--recurs-tabbuff--980_2
dataread1;;tabstrc--recurs-tabbuff--980_2
datawrite1;>tabstrc--recurs-tabbuff_read--980_2
dataread1;;tabstrc--recurs-tabbuff_read--980_2

setreg2;:b


gotoif;>tabstrc--recurs-checkyes--980_2
goto;>tabstrc--recurs-checkno--980_2
null;;tabstrc--recurs-checkyes--980_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--980
setreg2;+
add
datawrite1;>tabstrc--adrbuff--980

setreg1;>tabstrc--adrbuff--980

datawrite1;>tabstrc--recurs-tabbuff--980_3
dataread1;;tabstrc--recurs-tabbuff--980_3
datawrite1;>tabstrc--recurs-tabbuff_read--980_3
dataread1;;tabstrc--recurs-tabbuff_read--980_3

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--980_3
goto;>tabstrc--recurs-checkno--980_3
null;;tabstrc--recurs-checkyes--980_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--980
setreg2;+
add
datawrite1;>tabstrc--adrbuff--980

setreg1;>tabstrc--adrbuff--980

datawrite1;>tabstrc--recurs-tabbuff--980_4
dataread1;;tabstrc--recurs-tabbuff--980_4
datawrite1;>tabstrc--recurs-tabbuff_read--980_4
dataread1;;tabstrc--recurs-tabbuff_read--980_4

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--980_4
goto;>tabstrc--recurs-checkno--980_4
null;;tabstrc--recurs-checkyes--980_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--980
setreg2;+
add
datawrite1;>tabstrc--adrbuff--980

setreg1;>tabstrc--adrbuff--980

datawrite1;>tabstrc--recurs-tabbuff--980_5
dataread1;;tabstrc--recurs-tabbuff--980_5
datawrite1;>tabstrc--recurs-tabbuff_read--980_5
dataread1;;tabstrc--recurs-tabbuff_read--980_5

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--980_5
goto;>tabstrc--recurs-checkno--980_5
null;;tabstrc--recurs-checkyes--980_5
##set flag########
setreg1;>tabstrc--outbuff--980
datawrite1;>tabstrc--recurs-flag--980_5
setreg1;+
datawrite1;;tabstrc--recurs-flag--980_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--980_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--980_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--980_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--980_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--980_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--980
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-982
goto;>goto--jumper-982
setreg1;>goto--jumper-982;goto--branch-982
s1push1
goto;>help_about--label
null;;goto--jumper-982
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--984
null;;tabstrc--adrbuff--984
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--984
null;;tabstrc--outbuff--984
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--984

datawrite1;>tabstrc--recurs-tabbuff--984_1
dataread1;;tabstrc--recurs-tabbuff--984_1
datawrite1;>tabstrc--recurs-tabbuff_read--984_1
dataread1;;tabstrc--recurs-tabbuff_read--984_1

setreg2;:v


gotoif;>tabstrc--recurs-checkyes--984_1
goto;>tabstrc--recurs-checkno--984_1
null;;tabstrc--recurs-checkyes--984_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--984
setreg2;+
add
datawrite1;>tabstrc--adrbuff--984

setreg1;>tabstrc--adrbuff--984

datawrite1;>tabstrc--recurs-tabbuff--984_2
dataread1;;tabstrc--recurs-tabbuff--984_2
datawrite1;>tabstrc--recurs-tabbuff_read--984_2
dataread1;;tabstrc--recurs-tabbuff_read--984_2

setreg2;:d


gotoif;>tabstrc--recurs-checkyes--984_2
goto;>tabstrc--recurs-checkno--984_2
null;;tabstrc--recurs-checkyes--984_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--984
setreg2;+
add
datawrite1;>tabstrc--adrbuff--984

setreg1;>tabstrc--adrbuff--984

datawrite1;>tabstrc--recurs-tabbuff--984_3
dataread1;;tabstrc--recurs-tabbuff--984_3
datawrite1;>tabstrc--recurs-tabbuff_read--984_3
dataread1;;tabstrc--recurs-tabbuff_read--984_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--984_3
goto;>tabstrc--recurs-checkno--984_3
null;;tabstrc--recurs-checkyes--984_3
##set flag########
setreg1;>tabstrc--outbuff--984
datawrite1;>tabstrc--recurs-flag--984_3
setreg1;+
datawrite1;;tabstrc--recurs-flag--984_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--984_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--984_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--984_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--984
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-986
goto;>goto--jumper-986
setreg1;>goto--jumper-986;goto--branch-986
s1push1
goto;>VDI_shell--label
null;;goto--jumper-986
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--988
null;;tabstrc--adrbuff--988
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--988
null;;tabstrc--outbuff--988
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--988

datawrite1;>tabstrc--recurs-tabbuff--988_1
dataread1;;tabstrc--recurs-tabbuff--988_1
datawrite1;>tabstrc--recurs-tabbuff_read--988_1
dataread1;;tabstrc--recurs-tabbuff_read--988_1

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--988_1
goto;>tabstrc--recurs-checkno--988_1
null;;tabstrc--recurs-checkyes--988_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--988
setreg2;+
add
datawrite1;>tabstrc--adrbuff--988

setreg1;>tabstrc--adrbuff--988

datawrite1;>tabstrc--recurs-tabbuff--988_2
dataread1;;tabstrc--recurs-tabbuff--988_2
datawrite1;>tabstrc--recurs-tabbuff_read--988_2
dataread1;;tabstrc--recurs-tabbuff_read--988_2

setreg2;:x


gotoif;>tabstrc--recurs-checkyes--988_2
goto;>tabstrc--recurs-checkno--988_2
null;;tabstrc--recurs-checkyes--988_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--988
setreg2;+
add
datawrite1;>tabstrc--adrbuff--988

setreg1;>tabstrc--adrbuff--988

datawrite1;>tabstrc--recurs-tabbuff--988_3
dataread1;;tabstrc--recurs-tabbuff--988_3
datawrite1;>tabstrc--recurs-tabbuff_read--988_3
dataread1;;tabstrc--recurs-tabbuff_read--988_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--988_3
goto;>tabstrc--recurs-checkno--988_3
null;;tabstrc--recurs-checkyes--988_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--988
setreg2;+
add
datawrite1;>tabstrc--adrbuff--988

setreg1;>tabstrc--adrbuff--988

datawrite1;>tabstrc--recurs-tabbuff--988_4
dataread1;;tabstrc--recurs-tabbuff--988_4
datawrite1;>tabstrc--recurs-tabbuff_read--988_4
dataread1;;tabstrc--recurs-tabbuff_read--988_4

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--988_4
goto;>tabstrc--recurs-checkno--988_4
null;;tabstrc--recurs-checkyes--988_4
##set flag########
setreg1;>tabstrc--outbuff--988
datawrite1;>tabstrc--recurs-flag--988_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--988_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--988_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--988_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--988_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--988_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--988
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional return
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-990
goto;>goto--jumper-990
s1pop1;;goto--branch-990
gotoreg1
null;;goto--jumper-990
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--992
null;;tabstrc--adrbuff--992
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--992
null;;tabstrc--outbuff--992
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--992

datawrite1;>tabstrc--recurs-tabbuff--992_1
dataread1;;tabstrc--recurs-tabbuff--992_1
datawrite1;>tabstrc--recurs-tabbuff_read--992_1
dataread1;;tabstrc--recurs-tabbuff_read--992_1

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--992_1
goto;>tabstrc--recurs-checkno--992_1
null;;tabstrc--recurs-checkyes--992_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--992
setreg2;+
add
datawrite1;>tabstrc--adrbuff--992

setreg1;>tabstrc--adrbuff--992

datawrite1;>tabstrc--recurs-tabbuff--992_2
dataread1;;tabstrc--recurs-tabbuff--992_2
datawrite1;>tabstrc--recurs-tabbuff_read--992_2
dataread1;;tabstrc--recurs-tabbuff_read--992_2

setreg2;:n


gotoif;>tabstrc--recurs-checkyes--992_2
goto;>tabstrc--recurs-checkno--992_2
null;;tabstrc--recurs-checkyes--992_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--992
setreg2;+
add
datawrite1;>tabstrc--adrbuff--992

setreg1;>tabstrc--adrbuff--992

datawrite1;>tabstrc--recurs-tabbuff--992_3
dataread1;;tabstrc--recurs-tabbuff--992_3
datawrite1;>tabstrc--recurs-tabbuff_read--992_3
dataread1;;tabstrc--recurs-tabbuff_read--992_3

setreg2;:f


gotoif;>tabstrc--recurs-checkyes--992_3
goto;>tabstrc--recurs-checkno--992_3
null;;tabstrc--recurs-checkyes--992_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--992
setreg2;+
add
datawrite1;>tabstrc--adrbuff--992

setreg1;>tabstrc--adrbuff--992

datawrite1;>tabstrc--recurs-tabbuff--992_4
dataread1;;tabstrc--recurs-tabbuff--992_4
datawrite1;>tabstrc--recurs-tabbuff_read--992_4
dataread1;;tabstrc--recurs-tabbuff_read--992_4

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--992_4
goto;>tabstrc--recurs-checkno--992_4
null;;tabstrc--recurs-checkyes--992_4
##set flag########
setreg1;>tabstrc--outbuff--992
datawrite1;>tabstrc--recurs-flag--992_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--992_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--992_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--992_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--992_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--992_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--992
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-994
goto;>goto--jumper-994
setreg1;>goto--jumper-994;goto--branch-994
s1push1
goto;>sys_shell_info--label
null;;goto--jumper-994
#goto 
goto;>sys_shell_loop--label
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell_help--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:u
fopwri1;:i
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;::
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\n
#prline
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:b
fopwri1;:t
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell_info--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:P
fopwri1;:U
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:_
fopwri1;:G
fopwri1;:2
fopwri1;:x
fopwri1;:_
fopwri1;:9
fopwri1;:_
fopwri1;:r
fopwri1;:1
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:F
fopwri1;:X
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:A
fopwri1;:\s
fopwri1;:v
fopwri1;:2
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:M
fopwri1;::
fopwri1;:\s
fopwri1;:3
fopwri1;:9
fopwri1;:.
fopwri1;:3
fopwri1;:6
fopwri1;:6
fopwri1;:\s
fopwri1;:K
fopwri1;:N
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#module include: line 1026: comprompt as cp
includeas;comprompt,cp
#END OF FILE
