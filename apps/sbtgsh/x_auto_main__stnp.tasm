#SSTNPL COMPILER v0.3.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/sbtgsh/auto_main.stnp
null;0;btnbuff
null;0;xbuff_main
null;0;ybuff_main
null;0;xbuff_calc
null;0;ybuff_calc
null;0;ybuff_help
null;0;xbuff_cry
null;0;ybuff_cry
null;10x1;main_actflg
null;10x1;help_actflg
null;0;exitcode
null;+0-00+0--;system_icon_colors
null;10x1;@1
null;10x0;@0
null;10x6;@6
null;10x13;@13
null;10x16;@16
null;10x28;@28
null;10x31;@31
null;10x43;@43
null;10x46;@46
null;10x58;@58
null;10x61;@61
null;10x73;@73
null;10x8;@8
null;10x15;@15
null;10x20;@20
null;10x0;foo1
null;10x11;@11
null;+++0--;*+++0--
null;+++00-;*+++00-
null;+++-0-;*+++-0-
null;+++-00;*+++-00
null;+++--0;*+++--0
null;+++0-0;*+++0-0
null;+++00+;*+++00+
null;---00+;*---00+
null;10x0;not_sup_fill
null;10x17;@17
null;10x0;nothing_here_fill
null;---++0;*---++0
null;---0++;*---0++
null;10x18;@18
null;10x2;@2
null;10x3;@3
null;10x4;@4
null;10x5;@5
null;10x21;@21
null;10x19;@19
null;10x9;@9
null;+++---;*+++---
null;0;calc_buffer
null;0;calc_entry
null;0;tritbuff
null;0;tritlen
null;0;calc_redrawflgx
null;0;calc_redrawflgy
null;---+++;*---+++
null;+;*+
null;10x7;@7
null;0;*0
null;10x10;@10
null;10x14;@14
null;-;*-
null;10x0;calc_cleanloop
null;0;crystal_random
null;10x35;@35
null;10x23;@23
null;10x25;@25
null;10x-1;@-1
null;0;sys_shell_validcom
null;0;sys_shell_cmdflg
null;++0---;*++0---
null;0++---;*0++---
#Set ternary packed art colors
dataread1;>system_icon_colors
iowrite1;>io.packcolor
#val (used with set to change variable value during runtime.)
setreg1;10x80
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.max
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.clearbuffer
#label
null;;main--label
#conditional subroutine goto
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-43
goto;>goto--jumper-43
setreg1;>goto--jumper-43;goto--branch-43
s1push1
goto;>mainscreen_draw--label
null;;goto--jumper-43
#conditional set
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-44
goto;>goto--jumper-44
dataread1;>@0;goto--branch-44
datawrite1;>main_actflg
null;;goto--jumper-44
#label
null;;main_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #48
ioread1;>mouse.button#SSTNPL Source Line: '48' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-51
goto;>goto--branch-51
setreg1;>goto--jumper-51;goto--branch-51
goto;>main_loop--label
null;;goto--jumper-51
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #56
ioread1;>mouse.lockx#SSTNPL Source Line: '56' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_main
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #58
ioread1;>mouse.locky#SSTNPL Source Line: '58' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_main
#conditional goto
dataread1;>ybuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-63
gotoif;>goto--halfstep-63
goto;>goto--branch-63
dataread1;>ybuff_main;goto--halfstep-63
dataread2;>@6
gotoifless;>goto--jumper-63
gotoif;>goto--jumper-63
goto;>goto--branch-63
setreg1;>goto--jumper-63;goto--branch-63
goto;>row1_skip--label
null;;goto--jumper-63
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-65
gotoif;>goto--halfstep-65
goto;>goto--jumper-65
dataread1;>xbuff_main;goto--halfstep-65
dataread2;>@13
gotoifless;>goto--branch-65
gotoif;>goto--branch-65
goto;>goto--jumper-65
dataread1;>@1;goto--branch-65
datawrite1;>main_actflg
null;;goto--jumper-65
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-66
gotoif;>goto--halfstep-66
goto;>goto--jumper-66
dataread1;>xbuff_main;goto--halfstep-66
dataread2;>@13
gotoifless;>goto--branch-66
gotoif;>goto--branch-66
goto;>goto--jumper-66
setreg1;>goto--jumper-66;goto--branch-66
s1push1
goto;>calc_init--label
null;;goto--jumper-66
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-67
gotoif;>goto--halfstep-67
goto;>goto--jumper-67
dataread1;>xbuff_main;goto--halfstep-67
dataread2;>@28
gotoifless;>goto--branch-67
gotoif;>goto--branch-67
goto;>goto--jumper-67
dataread1;>@1;goto--branch-67
datawrite1;>main_actflg
null;;goto--jumper-67
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-68
gotoif;>goto--halfstep-68
goto;>goto--jumper-68
dataread1;>xbuff_main;goto--halfstep-68
dataread2;>@28
gotoifless;>goto--branch-68
gotoif;>goto--branch-68
goto;>goto--jumper-68
setreg1;>goto--jumper-68;goto--branch-68
s1push1
goto;>VDI_shell--label
null;;goto--jumper-68
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-69
gotoif;>goto--halfstep-69
goto;>goto--jumper-69
dataread1;>xbuff_main;goto--halfstep-69
dataread2;>@43
gotoifless;>goto--branch-69
gotoif;>goto--branch-69
goto;>goto--jumper-69
dataread1;>@1;goto--branch-69
datawrite1;>main_actflg
null;;goto--jumper-69
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-70
gotoif;>goto--halfstep-70
goto;>goto--jumper-70
dataread1;>xbuff_main;goto--halfstep-70
dataread2;>@43
gotoifless;>goto--branch-70
gotoif;>goto--branch-70
goto;>goto--jumper-70
setreg1;>goto--jumper-70;goto--branch-70
s1push1
goto;>not_implemented--label
null;;goto--jumper-70
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-71
gotoif;>goto--halfstep-71
goto;>goto--jumper-71
dataread1;>xbuff_main;goto--halfstep-71
dataread2;>@58
gotoifless;>goto--branch-71
gotoif;>goto--branch-71
goto;>goto--jumper-71
dataread1;>@1;goto--branch-71
datawrite1;>main_actflg
null;;goto--jumper-71
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-72
gotoif;>goto--halfstep-72
goto;>goto--jumper-72
dataread1;>xbuff_main;goto--halfstep-72
dataread2;>@58
gotoifless;>goto--branch-72
gotoif;>goto--branch-72
goto;>goto--jumper-72
setreg1;>goto--jumper-72;goto--branch-72
s1push1
goto;>help--label
null;;goto--jumper-72
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-73
gotoif;>goto--halfstep-73
goto;>goto--jumper-73
dataread1;>xbuff_main;goto--halfstep-73
dataread2;>@73
gotoifless;>goto--branch-73
gotoif;>goto--branch-73
goto;>goto--jumper-73
dataread1;>@1;goto--branch-73
datawrite1;>main_actflg
null;;goto--jumper-73
#conditional stop
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-74
gotoif;>goto--halfstep-74
goto;>goto--jumper-74
dataread1;>xbuff_main;goto--halfstep-74
dataread2;>@73
gotoifless;>goto--branch-74
gotoif;>goto--branch-74
goto;>goto--jumper-74
stop;;goto--branch-74

null;;goto--jumper-74
#label
null;;row1_skip--label
#conditional goto
dataread1;>ybuff_main
dataread2;>@8
gotoifmore;>goto--halfstep-80
gotoif;>goto--halfstep-80
goto;>goto--branch-80
dataread1;>ybuff_main;goto--halfstep-80
dataread2;>@13
gotoifless;>goto--jumper-80
gotoif;>goto--jumper-80
goto;>goto--branch-80
setreg1;>goto--jumper-80;goto--branch-80
goto;>row2_skip--label
null;;goto--jumper-80
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-82
gotoif;>goto--halfstep-82
goto;>goto--jumper-82
dataread1;>xbuff_main;goto--halfstep-82
dataread2;>@13
gotoifless;>goto--branch-82
gotoif;>goto--branch-82
goto;>goto--jumper-82
dataread1;>@1;goto--branch-82
datawrite1;>main_actflg
null;;goto--jumper-82
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-83
gotoif;>goto--halfstep-83
goto;>goto--jumper-83
dataread1;>xbuff_main;goto--halfstep-83
dataread2;>@13
gotoifless;>goto--branch-83
gotoif;>goto--branch-83
goto;>goto--jumper-83
setreg1;>goto--jumper-83;goto--branch-83
s1push1
goto;>crystal_ball--label
null;;goto--jumper-83
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-84
gotoif;>goto--halfstep-84
goto;>goto--jumper-84
dataread1;>xbuff_main;goto--halfstep-84
dataread2;>@28
gotoifless;>goto--branch-84
gotoif;>goto--branch-84
goto;>goto--jumper-84
dataread1;>@1;goto--branch-84
datawrite1;>main_actflg
null;;goto--jumper-84
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-85
gotoif;>goto--halfstep-85
goto;>goto--jumper-85
dataread1;>xbuff_main;goto--halfstep-85
dataread2;>@28
gotoifless;>goto--branch-85
gotoif;>goto--branch-85
goto;>goto--jumper-85
setreg1;>goto--jumper-85;goto--branch-85
s1push1
goto;>sys_shell--label
null;;goto--jumper-85
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-86
gotoif;>goto--halfstep-86
goto;>goto--jumper-86
dataread1;>xbuff_main;goto--halfstep-86
dataread2;>@43
gotoifless;>goto--branch-86
gotoif;>goto--branch-86
goto;>goto--jumper-86
dataread1;>@1;goto--branch-86
datawrite1;>main_actflg
null;;goto--jumper-86
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-87
gotoif;>goto--halfstep-87
goto;>goto--jumper-87
dataread1;>xbuff_main;goto--halfstep-87
dataread2;>@43
gotoifless;>goto--branch-87
gotoif;>goto--branch-87
goto;>goto--jumper-87
setreg1;>goto--jumper-87;goto--branch-87
s1push1
goto;>nothing_here--label
null;;goto--jumper-87
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-88
gotoif;>goto--halfstep-88
goto;>goto--jumper-88
dataread1;>xbuff_main;goto--halfstep-88
dataread2;>@58
gotoifless;>goto--branch-88
gotoif;>goto--branch-88
goto;>goto--jumper-88
dataread1;>@1;goto--branch-88
datawrite1;>main_actflg
null;;goto--jumper-88
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-89
gotoif;>goto--halfstep-89
goto;>goto--jumper-89
dataread1;>xbuff_main;goto--halfstep-89
dataread2;>@58
gotoifless;>goto--branch-89
gotoif;>goto--branch-89
goto;>goto--jumper-89
setreg1;>goto--jumper-89;goto--branch-89
s1push1
goto;>nothing_here--label
null;;goto--jumper-89
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-90
gotoif;>goto--halfstep-90
goto;>goto--jumper-90
dataread1;>xbuff_main;goto--halfstep-90
dataread2;>@73
gotoifless;>goto--branch-90
gotoif;>goto--branch-90
goto;>goto--jumper-90
dataread1;>@1;goto--branch-90
datawrite1;>main_actflg
null;;goto--jumper-90
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-91
gotoif;>goto--halfstep-91
goto;>goto--jumper-91
dataread1;>xbuff_main;goto--halfstep-91
dataread2;>@73
gotoifless;>goto--branch-91
gotoif;>goto--branch-91
goto;>goto--jumper-91
setreg1;>goto--jumper-91;goto--branch-91
s1push1
goto;>nothing_here--label
null;;goto--jumper-91
#label
null;;row2_skip--label
#conditional goto
dataread1;>ybuff_main
dataread2;>@15
gotoifmore;>goto--halfstep-97
gotoif;>goto--halfstep-97
goto;>goto--branch-97
dataread1;>ybuff_main;goto--halfstep-97
dataread2;>@20
gotoifless;>goto--jumper-97
gotoif;>goto--jumper-97
goto;>goto--branch-97
setreg1;>goto--jumper-97;goto--branch-97
goto;>row3_skip--label
null;;goto--jumper-97
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-99
gotoif;>goto--halfstep-99
goto;>goto--jumper-99
dataread1;>xbuff_main;goto--halfstep-99
dataread2;>@13
gotoifless;>goto--branch-99
gotoif;>goto--branch-99
goto;>goto--jumper-99
dataread1;>@1;goto--branch-99
datawrite1;>main_actflg
null;;goto--jumper-99
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-100
gotoif;>goto--halfstep-100
goto;>goto--jumper-100
dataread1;>xbuff_main;goto--halfstep-100
dataread2;>@13
gotoifless;>goto--branch-100
gotoif;>goto--branch-100
goto;>goto--jumper-100
setreg1;>goto--jumper-100;goto--branch-100
s1push1
goto;>nothing_here--label
null;;goto--jumper-100
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-101
gotoif;>goto--halfstep-101
goto;>goto--jumper-101
dataread1;>xbuff_main;goto--halfstep-101
dataread2;>@28
gotoifless;>goto--branch-101
gotoif;>goto--branch-101
goto;>goto--jumper-101
dataread1;>@1;goto--branch-101
datawrite1;>main_actflg
null;;goto--jumper-101
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-102
gotoif;>goto--halfstep-102
goto;>goto--jumper-102
dataread1;>xbuff_main;goto--halfstep-102
dataread2;>@28
gotoifless;>goto--branch-102
gotoif;>goto--branch-102
goto;>goto--jumper-102
setreg1;>goto--jumper-102;goto--branch-102
s1push1
goto;>nothing_here--label
null;;goto--jumper-102
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-103
gotoif;>goto--halfstep-103
goto;>goto--jumper-103
dataread1;>xbuff_main;goto--halfstep-103
dataread2;>@43
gotoifless;>goto--branch-103
gotoif;>goto--branch-103
goto;>goto--jumper-103
dataread1;>@1;goto--branch-103
datawrite1;>main_actflg
null;;goto--jumper-103
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-104
gotoif;>goto--halfstep-104
goto;>goto--jumper-104
dataread1;>xbuff_main;goto--halfstep-104
dataread2;>@43
gotoifless;>goto--branch-104
gotoif;>goto--branch-104
goto;>goto--jumper-104
setreg1;>goto--jumper-104;goto--branch-104
s1push1
goto;>nothing_here--label
null;;goto--jumper-104
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-105
gotoif;>goto--halfstep-105
goto;>goto--jumper-105
dataread1;>xbuff_main;goto--halfstep-105
dataread2;>@58
gotoifless;>goto--branch-105
gotoif;>goto--branch-105
goto;>goto--jumper-105
dataread1;>@1;goto--branch-105
datawrite1;>main_actflg
null;;goto--jumper-105
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-106
gotoif;>goto--halfstep-106
goto;>goto--jumper-106
dataread1;>xbuff_main;goto--halfstep-106
dataread2;>@58
gotoifless;>goto--branch-106
gotoif;>goto--branch-106
goto;>goto--jumper-106
setreg1;>goto--jumper-106;goto--branch-106
s1push1
goto;>nothing_here--label
null;;goto--jumper-106
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-107
gotoif;>goto--halfstep-107
goto;>goto--jumper-107
dataread1;>xbuff_main;goto--halfstep-107
dataread2;>@73
gotoifless;>goto--branch-107
gotoif;>goto--branch-107
goto;>goto--jumper-107
dataread1;>@1;goto--branch-107
datawrite1;>main_actflg
null;;goto--jumper-107
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-108
gotoif;>goto--halfstep-108
goto;>goto--jumper-108
dataread1;>xbuff_main;goto--halfstep-108
dataread2;>@73
gotoifless;>goto--branch-108
gotoif;>goto--branch-108
goto;>goto--jumper-108
setreg1;>goto--jumper-108;goto--branch-108
s1push1
goto;>nothing_here--label
null;;goto--jumper-108
#label
null;;row3_skip--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #112
iowrite1;>mouse.button#SSTNPL Source Line: '112' 
#goto 
goto;>main--label
#label
null;;newline--label
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;space--label
#print space
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
null;;labelpad1--label
#Upward range iterator
dataread1;>@1
datawrite1;>foo1
setreg1;>uiter-retpos-132;uiter-loopback-132
s1push1
goto;>space--label
dataread1;>foo1;uiter-retpos-132
setreg2;10x1
add
datawrite1;>foo1
dataread2;>@11
gotoifless;>uiter-loopback-132
gotoif;>uiter-loopback-132

#return from subroutine.
s1pop1
gotoreg1
#label
null;;hudsplash--label
#Set text colors
dataread1;>*+++0--
iowrite1;>io.textcolor
#print
fopwri1;:S
#Set text colors
dataread1;>*+++00-
iowrite1;>io.textcolor
#print
fopwri1;:B
#Set text colors
dataread1;>*+++-0-
iowrite1;>io.textcolor
#print
fopwri1;:T
#Set text colors
dataread1;>*+++-00
iowrite1;>io.textcolor
#print
fopwri1;:C
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print
fopwri1;:V
#Set text colors
dataread1;>*+++0-0
iowrite1;>io.textcolor
#print
fopwri1;:M
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:4
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
null;;mainscreen_draw--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-162
s1push1
goto;>hudsplash--label
null;;goto--jumper-162
#prline
fopwri1;:M
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:M
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #166
include;sbtgsh+capps.tas0#SSTNPL Source Line: '166' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
#goto (extra code stores away return address.)
setreg1;>goto--jumper-172
s1push1
goto;>labelpad1--label
null;;goto--jumper-172
#print
fopwri1;:D
fopwri1;:i
fopwri1;:s
fopwri1;:k
#goto (extra code stores away return address.)
setreg1;>goto--jumper-174
s1push1
goto;>labelpad1--label
null;;goto--jumper-174
#print
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
#goto (extra code stores away return address.)
setreg1;>goto--jumper-176
s1push1
goto;>labelpad1--label
null;;goto--jumper-176
#print
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:E
fopwri1;:x
fopwri1;:i
fopwri1;:t
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #183
include;sbtgsh+capps2.tas0#SSTNPL Source Line: '183' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
#goto (extra code stores away return address.)
setreg1;>goto--jumper-189
s1push1
goto;>labelpad1--label
null;;goto--jumper-189
#print
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-193
s1push1
goto;>labelpad1--label
null;;goto--jumper-193
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-195
s1push1
goto;>labelpad1--label
null;;goto--jumper-195
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #200
include;sbtgsh+capps3.tas0#SSTNPL Source Line: '200' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-206
s1push1
goto;>labelpad1--label
null;;goto--jumper-206
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-208
s1push1
goto;>labelpad1--label
null;;goto--jumper-208
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-210
s1push1
goto;>labelpad1--label
null;;goto--jumper-210
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-212
s1push1
goto;>labelpad1--label
null;;goto--jumper-212
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;::
fopwri1;:\s
fopwri1;:3
fopwri1;:9
fopwri1;:.
fopwri1;:3
fopwri1;:6
fopwri1;:6
fopwri1;:\s
fopwri1;:K
fopwri1;:i
fopwri1;:l
fopwri1;:o
fopwri1;:N
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:C
fopwri1;:P
fopwri1;:U
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:_
fopwri1;:G
fopwri1;:2
fopwri1;:x
fopwri1;:_
fopwri1;:9
fopwri1;:_
fopwri1;:r
fopwri1;:1
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:I
fopwri1;:n
fopwri1;:p
fopwri1;:u
fopwri1;:t
fopwri1;::
fopwri1;:\s
fopwri1;:M
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #221
iowrite1;>mouse.button#SSTNPL Source Line: '221' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;not_implemented--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-230
s1push1
goto;>hudsplash--label
null;;goto--jumper-230
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:p
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-233
s1push1
goto;>icon_message--label
null;;goto--jumper-233
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:y
fopwri1;:e
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:r
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-236;uiter-loopback-236
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-236
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-236
gotoif;>uiter-loopback-236

#goto (extra code stores away return address.)
setreg1;>goto--jumper-238
s1push1
goto;>click_wait--label
null;;goto--jumper-238
#return from subroutine.
s1pop1
gotoreg1
#label
null;;nothing_here--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-246
s1push1
goto;>hudsplash--label
null;;goto--jumper-246
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:p
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-249
s1push1
goto;>icon_message--label
null;;goto--jumper-249
#prline
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:s
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:e
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:r
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>nothing_here_fill
setreg1;>uiter-retpos-252;uiter-loopback-252
s1push1
goto;>newline--label
dataread1;>nothing_here_fill;uiter-retpos-252
setreg2;10x1
add
datawrite1;>nothing_here_fill
dataread2;>@17
gotoifless;>uiter-loopback-252
gotoif;>uiter-loopback-252

#goto (extra code stores away return address.)
setreg1;>goto--jumper-254
s1push1
goto;>click_wait--label
null;;goto--jumper-254
#return from subroutine.
s1pop1
gotoreg1
#label
null;;icon_message--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #261
include;sbtgsh+icon_message.tas0#SSTNPL Source Line: '261' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;icon_no--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #265
include;sbtgsh+icon_no.tas0#SSTNPL Source Line: '265' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help--label
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>help_actflg
#label
null;;help__loop--label
#conditional goto
dataread1;>@1
dataread2;>help_actflg
gotoif;>goto--jumper-278
goto;>goto--branch-278
setreg1;>goto--jumper-278;goto--branch-278
goto;>help__skipdraw--label
null;;goto--jumper-278
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>help_actflg
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-284
s1push1
goto;>hudsplash--label
null;;goto--jumper-284
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:I
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:x
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:<
fopwri1;:\s
fopwri1;:C
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:g
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:>
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*---++0
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*---0++
iowrite1;>io.textcolor
#prline
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-298;uiter-loopback-298
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-298
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@18
gotoifless;>uiter-loopback-298
gotoif;>uiter-loopback-298

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #300
iowrite1;>mouse.button#SSTNPL Source Line: '300' 
#label
null;;help__skipdraw--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #304
ioread1;>mouse.button#SSTNPL Source Line: '304' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-307
goto;>goto--branch-307
setreg1;>goto--jumper-307;goto--branch-307
goto;>help__skipdraw--label
null;;goto--jumper-307
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #309
ioread1;>mouse.locky#SSTNPL Source Line: '309' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_help
#conditional return
dataread1;>ybuff_help
dataread2;>@2
gotoif;>goto--branch-312
goto;>goto--jumper-312
s1pop1;;goto--branch-312
gotoreg1
null;;goto--jumper-312
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@3
gotoif;>goto--branch-314
goto;>goto--jumper-314
setreg1;>goto--jumper-314;goto--branch-314
s1push1
goto;>help_about--label
null;;goto--jumper-314
#conditional set
dataread1;>ybuff_help
dataread2;>@3
gotoif;>goto--branch-315
goto;>goto--jumper-315
dataread1;>@1;goto--branch-315
datawrite1;>help_actflg
null;;goto--jumper-315
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@4
gotoif;>goto--branch-317
goto;>goto--jumper-317
setreg1;>goto--jumper-317;goto--branch-317
s1push1
goto;>help_overview--label
null;;goto--jumper-317
#conditional set
dataread1;>ybuff_help
dataread2;>@4
gotoif;>goto--branch-318
goto;>goto--jumper-318
dataread1;>@1;goto--branch-318
datawrite1;>help_actflg
null;;goto--jumper-318
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@5
gotoif;>goto--branch-320
goto;>goto--jumper-320
setreg1;>goto--jumper-320;goto--branch-320
s1push1
goto;>help_calc--label
null;;goto--jumper-320
#conditional set
dataread1;>ybuff_help
dataread2;>@5
gotoif;>goto--branch-321
goto;>goto--jumper-321
dataread1;>@1;goto--branch-321
datawrite1;>help_actflg
null;;goto--jumper-321
#goto 
goto;>help__loop--label
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-330;uiter-loopback-330
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-330
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@21
gotoifless;>uiter-loopback-330
gotoif;>uiter-loopback-330

#goto (extra code stores away return address.)
setreg1;>goto--jumper-332
s1push1
goto;>click_wait--label
null;;goto--jumper-332
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_about--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-338
s1push1
goto;>hudsplash--label
null;;goto--jumper-338
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:G
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:h
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:S
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:4
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:9
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:,
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:,
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-363;uiter-loopback-363
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-363
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@4
gotoifless;>uiter-loopback-363
gotoif;>uiter-loopback-363

#goto (extra code stores away return address.)
setreg1;>goto--jumper-365
s1push1
goto;>click_wait--label
null;;goto--jumper-365
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_overview--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-371
s1push1
goto;>hudsplash--label
null;;goto--jumper-371
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:U
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:n
fopwri1;:a
fopwri1;:v
fopwri1;:i
fopwri1;:g
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:r
fopwri1;:i
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:m
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:u
fopwri1;:r
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:.
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-380;uiter-loopback-380
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-380
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@19
gotoifless;>uiter-loopback-380
gotoif;>uiter-loopback-380

#goto (extra code stores away return address.)
setreg1;>goto--jumper-382
s1push1
goto;>click_wait--label
null;;goto--jumper-382
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_calc--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-388
s1push1
goto;>hudsplash--label
null;;goto--jumper-388
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:O
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:.
fopwri1;:G
fopwri1;:.
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:U
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:[
fopwri1;:\s
fopwri1;:=
fopwri1;:\s
fopwri1;:]
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:s
fopwri1;:h
fopwri1;:\s
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:b
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:]
fopwri1;:,
fopwri1;:[
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:]
fopwri1;:,
fopwri1;:[
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:]
fopwri1;:,
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:[
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:]
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:\n
#prline
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:c
fopwri1;:l
fopwri1;:r
fopwri1;:]
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:]
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:]
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:e
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:o
fopwri1;:f
fopwri1;:f
fopwri1;:]
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-407;uiter-loopback-407
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-407
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@9
gotoifless;>uiter-loopback-407
gotoif;>uiter-loopback-407

#goto (extra code stores away return address.)
setreg1;>goto--jumper-409
s1push1
goto;>click_wait--label
null;;goto--jumper-409
#return from subroutine.
s1pop1
gotoreg1
#label
null;;click_wait--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #416
iowrite1;>mouse.button#SSTNPL Source Line: '416' 
#label
null;;click_wait_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #418
ioread1;>mouse.button#SSTNPL Source Line: '418' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-420
goto;>goto--branch-420
setreg1;>goto--jumper-420;goto--branch-420
goto;>click_wait_loop--label
null;;goto--jumper-420
#return from subroutine.
s1pop1
gotoreg1
#label
null;;VDI_shell--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-427
s1push1
goto;>hudsplash--label
null;;goto--jumper-427
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:W
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:'
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\n
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:'
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:u
fopwri1;:t
fopwri1;:d
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-432;uiter-loopback-432
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-432
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@19
gotoifless;>uiter-loopback-432
gotoif;>uiter-loopback-432

#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #436
include;vdishell.tas0#SSTNPL Source Line: '436' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #437
dataread1;>vdiexitcode#SSTNPL Source Line: '437' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>exitcode
#conditional return
dataread1;>exitcode
dataread2;>@1
gotoif;>goto--branch-439
goto;>goto--jumper-439
s1pop1;;goto--branch-439
gotoreg1
null;;goto--jumper-439
#conditional stop
dataread1;>exitcode
dataread2;>@2
gotoif;>goto--branch-440
goto;>goto--jumper-440
stop;;goto--branch-440

null;;goto--jumper-440
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_init--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgy
#label
null;;calc_loop--label
#conditional goto
dataread1;>calc_redrawflgx
dataread2;>@1
gotoif;>goto--jumper-466
goto;>goto--branch-466
setreg1;>goto--jumper-466;goto--branch-466
goto;>calc_inputloop--label
null;;goto--jumper-466
#conditional goto
dataread1;>calc_redrawflgy
dataread2;>@1
gotoif;>goto--jumper-467
goto;>goto--branch-467
setreg1;>goto--jumper-467;goto--branch-467
goto;>calc_inputloop--label
null;;goto--jumper-467
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-470
s1push1
goto;>hudsplash--label
null;;goto--jumper-470
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:\s
fopwri1;:+
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:0
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:P
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:]
fopwri1;:[
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:]
fopwri1;:[
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:=
fopwri1;:\s
fopwri1;:]
#Set text colors
dataread1;>*+++0--
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:o
fopwri1;:f
fopwri1;:f
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---++0
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:]
fopwri1;:[
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:]
fopwri1;:[
fopwri1;:c
fopwri1;:l
fopwri1;:r
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:B
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>calc_buffer
iowrite1;>io.tritdump
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>calc_entry
iowrite1;>io.tritdump
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-509;uiter-loopback-509
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-509
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@8
gotoifless;>uiter-loopback-509
gotoif;>uiter-loopback-509

#label
null;;calc_inputloop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #513
ioread1;>mouse.button#SSTNPL Source Line: '513' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-515
goto;>goto--branch-515
setreg1;>goto--jumper-515;goto--branch-515
goto;>calc_inputloop--label
null;;goto--jumper-515
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #524
ioread1;>mouse.lockx#SSTNPL Source Line: '524' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_calc
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #526
ioread1;>mouse.locky#SSTNPL Source Line: '526' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_calc
#conditional goto
dataread1;>xbuff_calc
dataread2;>@0
gotoifmore;>goto--halfstep-529
gotoif;>goto--halfstep-529
goto;>goto--branch-529
dataread1;>xbuff_calc;goto--halfstep-529
dataread2;>@4
gotoifless;>goto--jumper-529
gotoif;>goto--jumper-529
goto;>goto--branch-529
setreg1;>goto--jumper-529;goto--branch-529
goto;>calc_col1_skip--label
null;;goto--jumper-529
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-533
goto;>goto--jumper-533
dataread1;>*+;goto--branch-533
datawrite1;>tritbuff
null;;goto--jumper-533
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-534
goto;>goto--jumper-534
setreg1;>goto--jumper-534;goto--branch-534
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-534
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-536
goto;>goto--jumper-536
setreg1;>goto--jumper-536;goto--branch-536
s1push1
goto;>calc_add--label
null;;goto--jumper-536
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-537
goto;>goto--jumper-537
setreg1;>goto--jumper-537;goto--branch-537
s1push1
goto;>calc_div--label
null;;goto--jumper-537
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-538
goto;>goto--jumper-538
setreg1;>goto--jumper-538;goto--branch-538
s1push1
goto;>calc_tritpop--label
null;;goto--jumper-538
#label
null;;calc_col1_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@5
gotoifmore;>goto--halfstep-542
gotoif;>goto--halfstep-542
goto;>goto--branch-542
dataread1;>xbuff_calc;goto--halfstep-542
dataread2;>@9
gotoifless;>goto--jumper-542
gotoif;>goto--jumper-542
goto;>goto--branch-542
setreg1;>goto--jumper-542;goto--branch-542
goto;>calc_col2_skip--label
null;;goto--jumper-542
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-546
goto;>goto--jumper-546
dataread1;>*0;goto--branch-546
datawrite1;>tritbuff
null;;goto--jumper-546
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-547
goto;>goto--jumper-547
setreg1;>goto--jumper-547;goto--branch-547
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-547
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-548
goto;>goto--jumper-548
setreg1;>goto--jumper-548;goto--branch-548
s1push1
goto;>calc_sub--label
null;;goto--jumper-548
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-549
goto;>goto--jumper-549
setreg1;>goto--jumper-549;goto--branch-549
s1push1
goto;>calc_entrytobuffer--label
null;;goto--jumper-549
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-550
goto;>goto--jumper-550
setreg1;>goto--jumper-550;goto--branch-550
s1push1
goto;>calc_cleanup--label
null;;goto--jumper-550
#label
null;;calc_col2_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@10
gotoifmore;>goto--halfstep-555
gotoif;>goto--halfstep-555
goto;>goto--branch-555
dataread1;>xbuff_calc;goto--halfstep-555
dataread2;>@14
gotoifless;>goto--jumper-555
gotoif;>goto--jumper-555
goto;>goto--branch-555
setreg1;>goto--jumper-555;goto--branch-555
goto;>calc_col3_skip--label
null;;goto--jumper-555
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-559
goto;>goto--jumper-559
dataread1;>*-;goto--branch-559
datawrite1;>tritbuff
null;;goto--jumper-559
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-560
goto;>goto--jumper-560
setreg1;>goto--jumper-560;goto--branch-560
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-560
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-561
goto;>goto--jumper-561
setreg1;>goto--jumper-561;goto--branch-561
s1push1
goto;>calc_mul--label
null;;goto--jumper-561
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-562
goto;>goto--jumper-562
setreg1;>goto--jumper-562;goto--branch-562
s1push1
goto;>calc_cleanup--label
null;;goto--jumper-562
#conditional return
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-563
goto;>goto--jumper-563
s1pop1;;goto--branch-563
gotoreg1
null;;goto--jumper-563
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-564
goto;>goto--jumper-564
setreg1;>goto--jumper-564;goto--branch-564
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-564
#label
null;;calc_col3_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@15
gotoifmore;>goto--halfstep-568
gotoif;>goto--halfstep-568
goto;>goto--branch-568
dataread1;>xbuff_calc;goto--halfstep-568
dataread2;>@20
gotoifless;>goto--jumper-568
gotoif;>goto--jumper-568
goto;>goto--branch-568
setreg1;>goto--jumper-568;goto--branch-568
goto;>calc_col4_skip--label
null;;goto--jumper-568
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-571
goto;>goto--jumper-571
setreg1;>goto--jumper-571;goto--branch-571
s1push1
goto;>help_calc--label
null;;goto--jumper-571
#label
null;;calc_col4_skip--label
#conditional set
dataread1;>@3
dataread2;>ybuff_calc
gotoif;>goto--branch-576
goto;>goto--jumper-576
dataread1;>@1;goto--branch-576
datawrite1;>calc_redrawflgy
null;;goto--jumper-576
#conditional set
dataread1;>@5
dataread2;>ybuff_calc
gotoif;>goto--branch-577
goto;>goto--jumper-577
dataread1;>@1;goto--branch-577
datawrite1;>calc_redrawflgy
null;;goto--jumper-577
#conditional set
dataread1;>@7
dataread2;>ybuff_calc
gotoif;>goto--branch-578
goto;>goto--jumper-578
dataread1;>@1;goto--branch-578
datawrite1;>calc_redrawflgy
null;;goto--jumper-578
#conditional set
dataread1;>@9
dataread2;>ybuff_calc
gotoif;>goto--branch-579
goto;>goto--jumper-579
dataread1;>@1;goto--branch-579
datawrite1;>calc_redrawflgy
null;;goto--jumper-579
#goto 
goto;>calc_loop--label
#label
null;;calc_tritpush--label
#conditional return
dataread1;>tritlen
dataread2;>@9
gotoif;>goto--branch-585
goto;>goto--jumper-585
s1pop1;;goto--branch-585
gotoreg1
null;;goto--jumper-585
#get(1) (may be used with set, or asm code)
dataread1;>tritbuff
#stack push (uses stack 2)
s2push1
#multiply (2op math)
dataread1;>calc_entry
dataread2;>@3
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#add (2op math)
dataread1;>calc_entry
dataread2;>tritbuff
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#add (2op math)
dataread1;>tritlen
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_tritpop--label
#conditional return
dataread1;>tritlen
dataread2;>@0
gotoif;>goto--branch-598
goto;>goto--jumper-598
s1pop1;;goto--branch-598
gotoreg1
null;;goto--jumper-598
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#subtract (2op math)
dataread1;>calc_entry
dataread2;>tritbuff
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#divide (2op math)
dataread1;>calc_entry
dataread2;>@3
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#subtract (2op math)
dataread1;>tritlen
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_cleanup--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-611
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-611
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_purgeentry--label
#Upward range iterator
dataread1;>@0
datawrite1;>calc_cleanloop
setreg1;>uiter-retpos-617;uiter-loopback-617
s1push1
goto;>calc_tritpop--label
dataread1;>calc_cleanloop;uiter-retpos-617
setreg2;10x1
add
datawrite1;>calc_cleanloop
dataread2;>@9
gotoifless;>uiter-loopback-617
gotoif;>uiter-loopback-617

#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_entrytobuffer--label
#get(1) (may be used with set, or asm code)
dataread1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-627
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-627
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_add--label
#add (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-633
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-633
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_sub--label
#subtract (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-639
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-639
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_mul--label
#multiply (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-645
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-645
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_div--label
#conditional subroutine goto
dataread1;>calc_entry
dataread2;>@0
gotoif;>goto--branch-649
goto;>goto--jumper-649
setreg1;>goto--jumper-649;goto--branch-649
s1push1
goto;>calc_ERROR--label
null;;goto--jumper-649
#conditional return
dataread1;>calc_entry
dataread2;>@0
gotoif;>goto--branch-650
goto;>goto--jumper-650
s1pop1;;goto--branch-650
gotoreg1
null;;goto--jumper-650
#divide (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-653
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-653
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_ERROR--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-661
s1push1
goto;>hudsplash--label
null;;goto--jumper-661
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:B
fopwri1;:Y
fopwri1;:\s
fopwri1;:Z
fopwri1;:E
fopwri1;:R
fopwri1;:O
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-664
s1push1
goto;>icon_no--label
null;;goto--jumper-664
#prline
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:e
fopwri1;:r
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-667;uiter-loopback-667
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-667
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-667
gotoif;>uiter-loopback-667

#goto (extra code stores away return address.)
setreg1;>goto--jumper-669
s1push1
goto;>click_wait--label
null;;goto--jumper-669
#return from subroutine.
s1pop1
gotoreg1
#label
null;;crystal_ball--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #678
iowrite1;>mouse.button#SSTNPL Source Line: '678' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-683
s1push1
goto;>hudsplash--label
null;;goto--jumper-683
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:.
fopwri1;:\s
fopwri1;:A
fopwri1;:s
fopwri1;:k
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:Y
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:m
fopwri1;:y
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:o
fopwri1;:r
fopwri1;:w
fopwri1;:a
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:i
fopwri1;:f
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:s
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #689
include;sbtgsh+ball.tas0#SSTNPL Source Line: '689' 
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-691;uiter-loopback-691
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-691
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@13
gotoifless;>uiter-loopback-691
gotoif;>uiter-loopback-691

#label
null;;cry_inputloop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #696
ioread1;>mouse.button#SSTNPL Source Line: '696' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-698
goto;>goto--branch-698
setreg1;>goto--jumper-698;goto--branch-698
goto;>cry_inputloop--label
null;;goto--jumper-698
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #701
ioread1;>mouse.lockx#SSTNPL Source Line: '701' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_cry
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #703
ioread1;>mouse.locky#SSTNPL Source Line: '703' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_cry
#conditional goto
dataread1;>ybuff_cry
dataread2;>@3
gotoifmore;>goto--halfstep-706
gotoif;>goto--halfstep-706
goto;>goto--branch-706
dataread1;>ybuff_cry;goto--halfstep-706
dataread2;>@10
gotoifless;>goto--jumper-706
gotoif;>goto--jumper-706
goto;>goto--branch-706
setreg1;>goto--jumper-706;goto--branch-706
goto;>cry_inputloop--label
null;;goto--jumper-706
#conditional goto
dataread1;>xbuff_cry
dataread2;>@0
gotoifmore;>goto--halfstep-707
gotoif;>goto--halfstep-707
goto;>goto--branch-707
dataread1;>xbuff_cry;goto--halfstep-707
dataread2;>@35
gotoifless;>goto--jumper-707
gotoif;>goto--jumper-707
goto;>goto--branch-707
setreg1;>goto--jumper-707;goto--branch-707
goto;>cry_inputloop--label
null;;goto--jumper-707
#conditional subroutine goto
dataread1;>xbuff_cry
dataread2;>@0
gotoifmore;>goto--halfstep-708
gotoif;>goto--halfstep-708
goto;>goto--jumper-708
dataread1;>xbuff_cry;goto--halfstep-708
dataread2;>@23
gotoifless;>goto--branch-708
gotoif;>goto--branch-708
goto;>goto--jumper-708
setreg1;>goto--jumper-708;goto--branch-708
s1push1
goto;>cry_do_ball--label
null;;goto--jumper-708
#conditional return
dataread1;>xbuff_cry
dataread2;>@25
gotoifmore;>goto--halfstep-709
gotoif;>goto--halfstep-709
goto;>goto--jumper-709
dataread1;>xbuff_cry;goto--halfstep-709
dataread2;>@35
gotoifless;>goto--branch-709
gotoif;>goto--branch-709
goto;>goto--jumper-709
s1pop1;;goto--branch-709
gotoreg1
null;;goto--jumper-709
#goto 
goto;>crystal_ball--label
#label
null;;cry_do_ball--label
#Random ranged number
dataread1;>@-1
dataread2;>@1
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>crystal_random
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@1
gotoif;>goto--branch-718
goto;>goto--jumper-718
setreg1;>goto--jumper-718;goto--branch-718
s1push1
goto;>cry_yes--label
null;;goto--jumper-718
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@0
gotoif;>goto--branch-719
goto;>goto--jumper-719
setreg1;>goto--jumper-719;goto--branch-719
s1push1
goto;>cry_unsure--label
null;;goto--jumper-719
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@-1
gotoif;>goto--branch-720
goto;>goto--jumper-720
setreg1;>goto--jumper-720;goto--branch-720
s1push1
goto;>cry_no--label
null;;goto--jumper-720
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_no--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-727
s1push1
goto;>hudsplash--label
null;;goto--jumper-727
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-730
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-730
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:p
fopwri1;:i
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:k
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-732;uiter-loopback-732
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-732
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-732
gotoif;>uiter-loopback-732

#goto (extra code stores away return address.)
setreg1;>goto--jumper-734
s1push1
goto;>click_wait--label
null;;goto--jumper-734
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_yes--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-740
s1push1
goto;>hudsplash--label
null;;goto--jumper-740
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-743
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-743
#prline
fopwri1;:Y
fopwri1;:e
fopwri1;:s
fopwri1;:,
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:e
fopwri1;:d
fopwri1;:,
fopwri1;:\s
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:!
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-745;uiter-loopback-745
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-745
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-745
gotoif;>uiter-loopback-745

#goto (extra code stores away return address.)
setreg1;>goto--jumper-747
s1push1
goto;>click_wait--label
null;;goto--jumper-747
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_unsure--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-753
s1push1
goto;>hudsplash--label
null;;goto--jumper-753
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-756
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-756
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:i
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:p
fopwri1;:o
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:k
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-758;uiter-loopback-758
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-758
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-758
gotoif;>uiter-loopback-758

#goto (extra code stores away return address.)
setreg1;>goto--jumper-760
s1push1
goto;>click_wait--label
null;;goto--jumper-760
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_ballicon--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #764
include;sbtgsh+ballicon.tas0#SSTNPL Source Line: '764' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-775
s1push1
goto;>hudsplash--label
null;;goto--jumper-775
#prline
fopwri1;:S
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-779;uiter-loopback-779
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-779
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@20
gotoifless;>uiter-loopback-779
gotoif;>uiter-loopback-779

#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#label
null;;sys_shell_loop--label
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#prline
fopwri1;:S
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:L
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:Y
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#print
fopwri1;:>
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #790
iowrite1;>io.ttyrd#SSTNPL Source Line: '790' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-792
s1push1
goto;>cp.getentry--label
null;;goto--jumper-792
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_validcom
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--799
null;;tabstrc--adrbuff--799
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--799
null;;tabstrc--outbuff--799
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_1
dataread1;;tabstrc--recurs-tabbuff--799_1
datawrite1;>tabstrc--recurs-tabbuff_read--799_1
dataread1;;tabstrc--recurs-tabbuff_read--799_1

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--799_1
goto;>tabstrc--recurs-checkno--799_1
null;;tabstrc--recurs-checkyes--799_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--799
setreg2;+
add
datawrite1;>tabstrc--adrbuff--799

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_2
dataread1;;tabstrc--recurs-tabbuff--799_2
datawrite1;>tabstrc--recurs-tabbuff_read--799_2
dataread1;;tabstrc--recurs-tabbuff_read--799_2

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--799_2
goto;>tabstrc--recurs-checkno--799_2
null;;tabstrc--recurs-checkyes--799_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--799
setreg2;+
add
datawrite1;>tabstrc--adrbuff--799

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_3
dataread1;;tabstrc--recurs-tabbuff--799_3
datawrite1;>tabstrc--recurs-tabbuff_read--799_3
dataread1;;tabstrc--recurs-tabbuff_read--799_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--799_3
goto;>tabstrc--recurs-checkno--799_3
null;;tabstrc--recurs-checkyes--799_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--799
setreg2;+
add
datawrite1;>tabstrc--adrbuff--799

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_4
dataread1;;tabstrc--recurs-tabbuff--799_4
datawrite1;>tabstrc--recurs-tabbuff_read--799_4
dataread1;;tabstrc--recurs-tabbuff_read--799_4

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--799_4
goto;>tabstrc--recurs-checkno--799_4
null;;tabstrc--recurs-checkyes--799_4
##set flag########
setreg1;>tabstrc--outbuff--799
datawrite1;>tabstrc--recurs-flag--799_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--799_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--799
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-801
goto;>goto--jumper-801
setreg1;>goto--jumper-801;goto--branch-801
s1push1
goto;>sys_shell_help--label
null;;goto--jumper-801
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--803
null;;tabstrc--adrbuff--803
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--803
null;;tabstrc--outbuff--803
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_1
dataread1;;tabstrc--recurs-tabbuff--803_1
datawrite1;>tabstrc--recurs-tabbuff_read--803_1
dataread1;;tabstrc--recurs-tabbuff_read--803_1

setreg2;:b


gotoif;>tabstrc--recurs-checkyes--803_1
goto;>tabstrc--recurs-checkno--803_1
null;;tabstrc--recurs-checkyes--803_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_2
dataread1;;tabstrc--recurs-tabbuff--803_2
datawrite1;>tabstrc--recurs-tabbuff_read--803_2
dataread1;;tabstrc--recurs-tabbuff_read--803_2

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--803_2
goto;>tabstrc--recurs-checkno--803_2
null;;tabstrc--recurs-checkyes--803_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_3
dataread1;;tabstrc--recurs-tabbuff--803_3
datawrite1;>tabstrc--recurs-tabbuff_read--803_3
dataread1;;tabstrc--recurs-tabbuff_read--803_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--803_3
goto;>tabstrc--recurs-checkno--803_3
null;;tabstrc--recurs-checkyes--803_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_4
dataread1;;tabstrc--recurs-tabbuff--803_4
datawrite1;>tabstrc--recurs-tabbuff_read--803_4
dataread1;;tabstrc--recurs-tabbuff_read--803_4

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--803_4
goto;>tabstrc--recurs-checkno--803_4
null;;tabstrc--recurs-checkyes--803_4
##set flag########
setreg1;>tabstrc--outbuff--803
datawrite1;>tabstrc--recurs-flag--803_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--803_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--803
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-805
goto;>goto--jumper-805
setreg1;>goto--jumper-805;goto--branch-805
s1push1
goto;>crystal_ball--label
null;;goto--jumper-805
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--807
null;;tabstrc--adrbuff--807
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--807
null;;tabstrc--outbuff--807
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_1
dataread1;;tabstrc--recurs-tabbuff--807_1
datawrite1;>tabstrc--recurs-tabbuff_read--807_1
dataread1;;tabstrc--recurs-tabbuff_read--807_1

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--807_1
goto;>tabstrc--recurs-checkno--807_1
null;;tabstrc--recurs-checkyes--807_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_2
dataread1;;tabstrc--recurs-tabbuff--807_2
datawrite1;>tabstrc--recurs-tabbuff_read--807_2
dataread1;;tabstrc--recurs-tabbuff_read--807_2

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--807_2
goto;>tabstrc--recurs-checkno--807_2
null;;tabstrc--recurs-checkyes--807_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_3
dataread1;;tabstrc--recurs-tabbuff--807_3
datawrite1;>tabstrc--recurs-tabbuff_read--807_3
dataread1;;tabstrc--recurs-tabbuff_read--807_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--807_3
goto;>tabstrc--recurs-checkno--807_3
null;;tabstrc--recurs-checkyes--807_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_4
dataread1;;tabstrc--recurs-tabbuff--807_4
datawrite1;>tabstrc--recurs-tabbuff_read--807_4
dataread1;;tabstrc--recurs-tabbuff_read--807_4

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--807_4
goto;>tabstrc--recurs-checkno--807_4
null;;tabstrc--recurs-checkyes--807_4
##set flag########
setreg1;>tabstrc--outbuff--807
datawrite1;>tabstrc--recurs-flag--807_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--807_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--807
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-809
goto;>goto--jumper-809
setreg1;>goto--jumper-809;goto--branch-809
s1push1
goto;>calc_init--label
null;;goto--jumper-809
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--811
null;;tabstrc--adrbuff--811
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--811
null;;tabstrc--outbuff--811
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_1
dataread1;;tabstrc--recurs-tabbuff--811_1
datawrite1;>tabstrc--recurs-tabbuff_read--811_1
dataread1;;tabstrc--recurs-tabbuff_read--811_1

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--811_1
goto;>tabstrc--recurs-checkno--811_1
null;;tabstrc--recurs-checkyes--811_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_2
dataread1;;tabstrc--recurs-tabbuff--811_2
datawrite1;>tabstrc--recurs-tabbuff_read--811_2
dataread1;;tabstrc--recurs-tabbuff_read--811_2

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--811_2
goto;>tabstrc--recurs-checkno--811_2
null;;tabstrc--recurs-checkyes--811_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_3
dataread1;;tabstrc--recurs-tabbuff--811_3
datawrite1;>tabstrc--recurs-tabbuff_read--811_3
dataread1;;tabstrc--recurs-tabbuff_read--811_3

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--811_3
goto;>tabstrc--recurs-checkno--811_3
null;;tabstrc--recurs-checkyes--811_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_4
dataread1;;tabstrc--recurs-tabbuff--811_4
datawrite1;>tabstrc--recurs-tabbuff_read--811_4
dataread1;;tabstrc--recurs-tabbuff_read--811_4

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--811_4
goto;>tabstrc--recurs-checkno--811_4
null;;tabstrc--recurs-checkyes--811_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_5
dataread1;;tabstrc--recurs-tabbuff--811_5
datawrite1;>tabstrc--recurs-tabbuff_read--811_5
dataread1;;tabstrc--recurs-tabbuff_read--811_5

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--811_5
goto;>tabstrc--recurs-checkno--811_5
null;;tabstrc--recurs-checkyes--811_5
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_6
dataread1;;tabstrc--recurs-tabbuff--811_6
datawrite1;>tabstrc--recurs-tabbuff_read--811_6
dataread1;;tabstrc--recurs-tabbuff_read--811_6

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--811_6
goto;>tabstrc--recurs-checkno--811_6
null;;tabstrc--recurs-checkyes--811_6
##set flag########
setreg1;>tabstrc--outbuff--811
datawrite1;>tabstrc--recurs-flag--811_6
setreg1;+
datawrite1;;tabstrc--recurs-flag--811_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--811
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-813
goto;>goto--jumper-813
setreg1;>goto--jumper-813;goto--branch-813
s1push1
goto;>help--label
null;;goto--jumper-813
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--815
null;;tabstrc--adrbuff--815
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--815
null;;tabstrc--outbuff--815
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_1
dataread1;;tabstrc--recurs-tabbuff--815_1
datawrite1;>tabstrc--recurs-tabbuff_read--815_1
dataread1;;tabstrc--recurs-tabbuff_read--815_1

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--815_1
goto;>tabstrc--recurs-checkno--815_1
null;;tabstrc--recurs-checkyes--815_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_2
dataread1;;tabstrc--recurs-tabbuff--815_2
datawrite1;>tabstrc--recurs-tabbuff_read--815_2
dataread1;;tabstrc--recurs-tabbuff_read--815_2

setreg2;:b


gotoif;>tabstrc--recurs-checkyes--815_2
goto;>tabstrc--recurs-checkno--815_2
null;;tabstrc--recurs-checkyes--815_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_3
dataread1;;tabstrc--recurs-tabbuff--815_3
datawrite1;>tabstrc--recurs-tabbuff_read--815_3
dataread1;;tabstrc--recurs-tabbuff_read--815_3

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--815_3
goto;>tabstrc--recurs-checkno--815_3
null;;tabstrc--recurs-checkyes--815_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_4
dataread1;;tabstrc--recurs-tabbuff--815_4
datawrite1;>tabstrc--recurs-tabbuff_read--815_4
dataread1;;tabstrc--recurs-tabbuff_read--815_4

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--815_4
goto;>tabstrc--recurs-checkno--815_4
null;;tabstrc--recurs-checkyes--815_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_5
dataread1;;tabstrc--recurs-tabbuff--815_5
datawrite1;>tabstrc--recurs-tabbuff_read--815_5
dataread1;;tabstrc--recurs-tabbuff_read--815_5

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--815_5
goto;>tabstrc--recurs-checkno--815_5
null;;tabstrc--recurs-checkyes--815_5
##set flag########
setreg1;>tabstrc--outbuff--815
datawrite1;>tabstrc--recurs-flag--815_5
setreg1;+
datawrite1;;tabstrc--recurs-flag--815_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--815
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-817
goto;>goto--jumper-817
setreg1;>goto--jumper-817;goto--branch-817
s1push1
goto;>help_about--label
null;;goto--jumper-817
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--819
null;;tabstrc--adrbuff--819
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--819
null;;tabstrc--outbuff--819
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_1
dataread1;;tabstrc--recurs-tabbuff--819_1
datawrite1;>tabstrc--recurs-tabbuff_read--819_1
dataread1;;tabstrc--recurs-tabbuff_read--819_1

setreg2;:v


gotoif;>tabstrc--recurs-checkyes--819_1
goto;>tabstrc--recurs-checkno--819_1
null;;tabstrc--recurs-checkyes--819_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--819
setreg2;+
add
datawrite1;>tabstrc--adrbuff--819

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_2
dataread1;;tabstrc--recurs-tabbuff--819_2
datawrite1;>tabstrc--recurs-tabbuff_read--819_2
dataread1;;tabstrc--recurs-tabbuff_read--819_2

setreg2;:d


gotoif;>tabstrc--recurs-checkyes--819_2
goto;>tabstrc--recurs-checkno--819_2
null;;tabstrc--recurs-checkyes--819_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--819
setreg2;+
add
datawrite1;>tabstrc--adrbuff--819

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_3
dataread1;;tabstrc--recurs-tabbuff--819_3
datawrite1;>tabstrc--recurs-tabbuff_read--819_3
dataread1;;tabstrc--recurs-tabbuff_read--819_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--819_3
goto;>tabstrc--recurs-checkno--819_3
null;;tabstrc--recurs-checkyes--819_3
##set flag########
setreg1;>tabstrc--outbuff--819
datawrite1;>tabstrc--recurs-flag--819_3
setreg1;+
datawrite1;;tabstrc--recurs-flag--819_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--819
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-821
goto;>goto--jumper-821
setreg1;>goto--jumper-821;goto--branch-821
s1push1
goto;>VDI_shell--label
null;;goto--jumper-821
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--823
null;;tabstrc--adrbuff--823
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--823
null;;tabstrc--outbuff--823
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--823

datawrite1;>tabstrc--recurs-tabbuff--823_1
dataread1;;tabstrc--recurs-tabbuff--823_1
datawrite1;>tabstrc--recurs-tabbuff_read--823_1
dataread1;;tabstrc--recurs-tabbuff_read--823_1

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--823_1
goto;>tabstrc--recurs-checkno--823_1
null;;tabstrc--recurs-checkyes--823_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--823
setreg2;+
add
datawrite1;>tabstrc--adrbuff--823

setreg1;>tabstrc--adrbuff--823

datawrite1;>tabstrc--recurs-tabbuff--823_2
dataread1;;tabstrc--recurs-tabbuff--823_2
datawrite1;>tabstrc--recurs-tabbuff_read--823_2
dataread1;;tabstrc--recurs-tabbuff_read--823_2

setreg2;:x


gotoif;>tabstrc--recurs-checkyes--823_2
goto;>tabstrc--recurs-checkno--823_2
null;;tabstrc--recurs-checkyes--823_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--823
setreg2;+
add
datawrite1;>tabstrc--adrbuff--823

setreg1;>tabstrc--adrbuff--823

datawrite1;>tabstrc--recurs-tabbuff--823_3
dataread1;;tabstrc--recurs-tabbuff--823_3
datawrite1;>tabstrc--recurs-tabbuff_read--823_3
dataread1;;tabstrc--recurs-tabbuff_read--823_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--823_3
goto;>tabstrc--recurs-checkno--823_3
null;;tabstrc--recurs-checkyes--823_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--823
setreg2;+
add
datawrite1;>tabstrc--adrbuff--823

setreg1;>tabstrc--adrbuff--823

datawrite1;>tabstrc--recurs-tabbuff--823_4
dataread1;;tabstrc--recurs-tabbuff--823_4
datawrite1;>tabstrc--recurs-tabbuff_read--823_4
dataread1;;tabstrc--recurs-tabbuff_read--823_4

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--823_4
goto;>tabstrc--recurs-checkno--823_4
null;;tabstrc--recurs-checkyes--823_4
##set flag########
setreg1;>tabstrc--outbuff--823
datawrite1;>tabstrc--recurs-flag--823_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--823_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--823_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--823_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--823_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--823_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--823
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional return
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-825
goto;>goto--jumper-825
s1pop1;;goto--branch-825
gotoreg1
null;;goto--jumper-825
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>cp.buffer--table
add
datawrite1;>tabstrc--adrbuff--827
null;;tabstrc--adrbuff--827
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--827
null;;tabstrc--outbuff--827
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--827

datawrite1;>tabstrc--recurs-tabbuff--827_1
dataread1;;tabstrc--recurs-tabbuff--827_1
datawrite1;>tabstrc--recurs-tabbuff_read--827_1
dataread1;;tabstrc--recurs-tabbuff_read--827_1

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--827_1
goto;>tabstrc--recurs-checkno--827_1
null;;tabstrc--recurs-checkyes--827_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--827
setreg2;+
add
datawrite1;>tabstrc--adrbuff--827

setreg1;>tabstrc--adrbuff--827

datawrite1;>tabstrc--recurs-tabbuff--827_2
dataread1;;tabstrc--recurs-tabbuff--827_2
datawrite1;>tabstrc--recurs-tabbuff_read--827_2
dataread1;;tabstrc--recurs-tabbuff_read--827_2

setreg2;:n


gotoif;>tabstrc--recurs-checkyes--827_2
goto;>tabstrc--recurs-checkno--827_2
null;;tabstrc--recurs-checkyes--827_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--827
setreg2;+
add
datawrite1;>tabstrc--adrbuff--827

setreg1;>tabstrc--adrbuff--827

datawrite1;>tabstrc--recurs-tabbuff--827_3
dataread1;;tabstrc--recurs-tabbuff--827_3
datawrite1;>tabstrc--recurs-tabbuff_read--827_3
dataread1;;tabstrc--recurs-tabbuff_read--827_3

setreg2;:f


gotoif;>tabstrc--recurs-checkyes--827_3
goto;>tabstrc--recurs-checkno--827_3
null;;tabstrc--recurs-checkyes--827_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--827
setreg2;+
add
datawrite1;>tabstrc--adrbuff--827

setreg1;>tabstrc--adrbuff--827

datawrite1;>tabstrc--recurs-tabbuff--827_4
dataread1;;tabstrc--recurs-tabbuff--827_4
datawrite1;>tabstrc--recurs-tabbuff_read--827_4
dataread1;;tabstrc--recurs-tabbuff_read--827_4

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--827_4
goto;>tabstrc--recurs-checkno--827_4
null;;tabstrc--recurs-checkyes--827_4
##set flag########
setreg1;>tabstrc--outbuff--827
datawrite1;>tabstrc--recurs-flag--827_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--827_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--827_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--827_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--827_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--827_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--827
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-829
goto;>goto--jumper-829
setreg1;>goto--jumper-829;goto--branch-829
s1push1
goto;>sys_shell_info--label
null;;goto--jumper-829
#goto 
goto;>sys_shell_loop--label
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell_help--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:u
fopwri1;:i
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;::
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\n
#prline
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:b
fopwri1;:t
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell_info--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:P
fopwri1;:U
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:_
fopwri1;:G
fopwri1;:2
fopwri1;:x
fopwri1;:_
fopwri1;:9
fopwri1;:_
fopwri1;:r
fopwri1;:1
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:F
fopwri1;:X
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:A
fopwri1;:\s
fopwri1;:v
fopwri1;:2
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:M
fopwri1;::
fopwri1;:\s
fopwri1;:3
fopwri1;:9
fopwri1;:.
fopwri1;:3
fopwri1;:6
fopwri1;:6
fopwri1;:\s
fopwri1;:K
fopwri1;:N
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#module include: line 861: comprompt as cp
includeas;comprompt,cp
#END OF FILE
