#SSTNPL COMPILER v0.2.2
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/sbtgsh/auto_main.stnp
null;0;btnbuff
null;0;xbuff_main
null;0;ybuff_main
null;0;xbuff_calc
null;0;ybuff_calc
null;0;ybuff_help
null;0;xbuff_cry
null;0;ybuff_cry
null;10x1;main_actflg
null;10x1;help_actflg
null;0;exitcode
null;+0-00+0--;system_icon_colors
null;10x1;@1
null;10x0;@0
null;10x6;@6
null;10x13;@13
null;10x16;@16
null;10x28;@28
null;10x31;@31
null;10x43;@43
null;10x46;@46
null;10x58;@58
null;10x61;@61
null;10x73;@73
null;10x8;@8
null;10x15;@15
null;10x20;@20
null;10x0;foo1
null;10x11;@11
null;+++0--;*+++0--
null;+++00-;*+++00-
null;+++-0-;*+++-0-
null;+++-00;*+++-00
null;+++--0;*+++--0
null;+++0-0;*+++0-0
null;+++00+;*+++00+
null;---00+;*---00+
null;10x0;not_sup_fill
null;10x17;@17
null;10x0;nothing_here_fill
null;---++0;*---++0
null;---0++;*---0++
null;10x18;@18
null;10x2;@2
null;10x3;@3
null;10x4;@4
null;10x5;@5
null;10x21;@21
null;10x19;@19
null;10x9;@9
null;+++---;*+++---
null;0;calc_buffer
null;0;calc_entry
null;0;tritbuff
null;0;tritlen
null;0;calc_redrawflgx
null;0;calc_redrawflgy
null;---+++;*---+++
null;+;*+
null;10x7;@7
null;0;*0
null;10x10;@10
null;10x14;@14
null;-;*-
null;10x0;calc_cleanloop
null;0;crystal_random
null;10x35;@35
null;10x23;@23
null;10x25;@25
null;10x-1;@-1
null;0;sys_shell_validcom
null;0;sys_shell_cmdflg
null;++0---;*++0---
null;0++---;*0++---
null;0;shell_entry_size
null;0;shell_entry_itersize
null;0;shell_entry_zeroit
null;0;shell_entry_buff
null;0;shell_entry_chbuff
null;10x0;shell_entry_clearbuffer
null;10x80;shell_entry_max
null;:\n;:\n
null;:\x;:\x
null;10x0;getentry_tobuff_iter
null;10x0;getentry_pad_iter
#Set ternary packed art colors
dataread1;>system_icon_colors
iowrite1;>io.packcolor
#label
null;;main--label
#conditional subroutine goto
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-35
goto;>goto--jumper-35
setreg1;>goto--jumper-35;goto--branch-35
s1push1
goto;>mainscreen_draw--label
null;;goto--jumper-35
#conditional set
dataread1;>main_actflg
dataread2;>@1
gotoif;>goto--branch-36
goto;>goto--jumper-36
dataread1;>@0;goto--branch-36
datawrite1;>main_actflg
null;;goto--jumper-36
#label
null;;main_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #40
ioread1;>mouse.button#SSTNPL Source Line: '40' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-43
goto;>goto--branch-43
setreg1;>goto--jumper-43;goto--branch-43
goto;>main_loop--label
null;;goto--jumper-43
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #48
ioread1;>mouse.lockx#SSTNPL Source Line: '48' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_main
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #50
ioread1;>mouse.locky#SSTNPL Source Line: '50' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_main
#conditional goto
dataread1;>ybuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-55
gotoif;>goto--halfstep-55
goto;>goto--branch-55
dataread1;>ybuff_main;goto--halfstep-55
dataread2;>@6
gotoifless;>goto--jumper-55
gotoif;>goto--jumper-55
goto;>goto--branch-55
setreg1;>goto--jumper-55;goto--branch-55
goto;>row1_skip--label
null;;goto--jumper-55
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-57
gotoif;>goto--halfstep-57
goto;>goto--jumper-57
dataread1;>xbuff_main;goto--halfstep-57
dataread2;>@13
gotoifless;>goto--branch-57
gotoif;>goto--branch-57
goto;>goto--jumper-57
dataread1;>@1;goto--branch-57
datawrite1;>main_actflg
null;;goto--jumper-57
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-58
gotoif;>goto--halfstep-58
goto;>goto--jumper-58
dataread1;>xbuff_main;goto--halfstep-58
dataread2;>@13
gotoifless;>goto--branch-58
gotoif;>goto--branch-58
goto;>goto--jumper-58
setreg1;>goto--jumper-58;goto--branch-58
s1push1
goto;>calc_init--label
null;;goto--jumper-58
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-59
gotoif;>goto--halfstep-59
goto;>goto--jumper-59
dataread1;>xbuff_main;goto--halfstep-59
dataread2;>@28
gotoifless;>goto--branch-59
gotoif;>goto--branch-59
goto;>goto--jumper-59
dataread1;>@1;goto--branch-59
datawrite1;>main_actflg
null;;goto--jumper-59
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-60
gotoif;>goto--halfstep-60
goto;>goto--jumper-60
dataread1;>xbuff_main;goto--halfstep-60
dataread2;>@28
gotoifless;>goto--branch-60
gotoif;>goto--branch-60
goto;>goto--jumper-60
setreg1;>goto--jumper-60;goto--branch-60
s1push1
goto;>VDI_shell--label
null;;goto--jumper-60
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-61
gotoif;>goto--halfstep-61
goto;>goto--jumper-61
dataread1;>xbuff_main;goto--halfstep-61
dataread2;>@43
gotoifless;>goto--branch-61
gotoif;>goto--branch-61
goto;>goto--jumper-61
dataread1;>@1;goto--branch-61
datawrite1;>main_actflg
null;;goto--jumper-61
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-62
gotoif;>goto--halfstep-62
goto;>goto--jumper-62
dataread1;>xbuff_main;goto--halfstep-62
dataread2;>@43
gotoifless;>goto--branch-62
gotoif;>goto--branch-62
goto;>goto--jumper-62
setreg1;>goto--jumper-62;goto--branch-62
s1push1
goto;>not_implemented--label
null;;goto--jumper-62
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-63
gotoif;>goto--halfstep-63
goto;>goto--jumper-63
dataread1;>xbuff_main;goto--halfstep-63
dataread2;>@58
gotoifless;>goto--branch-63
gotoif;>goto--branch-63
goto;>goto--jumper-63
dataread1;>@1;goto--branch-63
datawrite1;>main_actflg
null;;goto--jumper-63
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-64
gotoif;>goto--halfstep-64
goto;>goto--jumper-64
dataread1;>xbuff_main;goto--halfstep-64
dataread2;>@58
gotoifless;>goto--branch-64
gotoif;>goto--branch-64
goto;>goto--jumper-64
setreg1;>goto--jumper-64;goto--branch-64
s1push1
goto;>help--label
null;;goto--jumper-64
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-65
gotoif;>goto--halfstep-65
goto;>goto--jumper-65
dataread1;>xbuff_main;goto--halfstep-65
dataread2;>@73
gotoifless;>goto--branch-65
gotoif;>goto--branch-65
goto;>goto--jumper-65
dataread1;>@1;goto--branch-65
datawrite1;>main_actflg
null;;goto--jumper-65
#conditional stop
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-66
gotoif;>goto--halfstep-66
goto;>goto--jumper-66
dataread1;>xbuff_main;goto--halfstep-66
dataread2;>@73
gotoifless;>goto--branch-66
gotoif;>goto--branch-66
goto;>goto--jumper-66
stop;;goto--branch-66

null;;goto--jumper-66
#label
null;;row1_skip--label
#conditional goto
dataread1;>ybuff_main
dataread2;>@8
gotoifmore;>goto--halfstep-72
gotoif;>goto--halfstep-72
goto;>goto--branch-72
dataread1;>ybuff_main;goto--halfstep-72
dataread2;>@13
gotoifless;>goto--jumper-72
gotoif;>goto--jumper-72
goto;>goto--branch-72
setreg1;>goto--jumper-72;goto--branch-72
goto;>row2_skip--label
null;;goto--jumper-72
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-74
gotoif;>goto--halfstep-74
goto;>goto--jumper-74
dataread1;>xbuff_main;goto--halfstep-74
dataread2;>@13
gotoifless;>goto--branch-74
gotoif;>goto--branch-74
goto;>goto--jumper-74
dataread1;>@1;goto--branch-74
datawrite1;>main_actflg
null;;goto--jumper-74
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-75
gotoif;>goto--halfstep-75
goto;>goto--jumper-75
dataread1;>xbuff_main;goto--halfstep-75
dataread2;>@13
gotoifless;>goto--branch-75
gotoif;>goto--branch-75
goto;>goto--jumper-75
setreg1;>goto--jumper-75;goto--branch-75
s1push1
goto;>crystal_ball--label
null;;goto--jumper-75
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-76
gotoif;>goto--halfstep-76
goto;>goto--jumper-76
dataread1;>xbuff_main;goto--halfstep-76
dataread2;>@28
gotoifless;>goto--branch-76
gotoif;>goto--branch-76
goto;>goto--jumper-76
dataread1;>@1;goto--branch-76
datawrite1;>main_actflg
null;;goto--jumper-76
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-77
gotoif;>goto--halfstep-77
goto;>goto--jumper-77
dataread1;>xbuff_main;goto--halfstep-77
dataread2;>@28
gotoifless;>goto--branch-77
gotoif;>goto--branch-77
goto;>goto--jumper-77
setreg1;>goto--jumper-77;goto--branch-77
s1push1
goto;>sys_shell--label
null;;goto--jumper-77
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-78
gotoif;>goto--halfstep-78
goto;>goto--jumper-78
dataread1;>xbuff_main;goto--halfstep-78
dataread2;>@43
gotoifless;>goto--branch-78
gotoif;>goto--branch-78
goto;>goto--jumper-78
dataread1;>@1;goto--branch-78
datawrite1;>main_actflg
null;;goto--jumper-78
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-79
gotoif;>goto--halfstep-79
goto;>goto--jumper-79
dataread1;>xbuff_main;goto--halfstep-79
dataread2;>@43
gotoifless;>goto--branch-79
gotoif;>goto--branch-79
goto;>goto--jumper-79
setreg1;>goto--jumper-79;goto--branch-79
s1push1
goto;>nothing_here--label
null;;goto--jumper-79
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-80
gotoif;>goto--halfstep-80
goto;>goto--jumper-80
dataread1;>xbuff_main;goto--halfstep-80
dataread2;>@58
gotoifless;>goto--branch-80
gotoif;>goto--branch-80
goto;>goto--jumper-80
dataread1;>@1;goto--branch-80
datawrite1;>main_actflg
null;;goto--jumper-80
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-81
gotoif;>goto--halfstep-81
goto;>goto--jumper-81
dataread1;>xbuff_main;goto--halfstep-81
dataread2;>@58
gotoifless;>goto--branch-81
gotoif;>goto--branch-81
goto;>goto--jumper-81
setreg1;>goto--jumper-81;goto--branch-81
s1push1
goto;>nothing_here--label
null;;goto--jumper-81
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-82
gotoif;>goto--halfstep-82
goto;>goto--jumper-82
dataread1;>xbuff_main;goto--halfstep-82
dataread2;>@73
gotoifless;>goto--branch-82
gotoif;>goto--branch-82
goto;>goto--jumper-82
dataread1;>@1;goto--branch-82
datawrite1;>main_actflg
null;;goto--jumper-82
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-83
gotoif;>goto--halfstep-83
goto;>goto--jumper-83
dataread1;>xbuff_main;goto--halfstep-83
dataread2;>@73
gotoifless;>goto--branch-83
gotoif;>goto--branch-83
goto;>goto--jumper-83
setreg1;>goto--jumper-83;goto--branch-83
s1push1
goto;>nothing_here--label
null;;goto--jumper-83
#label
null;;row2_skip--label
#conditional goto
dataread1;>ybuff_main
dataread2;>@15
gotoifmore;>goto--halfstep-89
gotoif;>goto--halfstep-89
goto;>goto--branch-89
dataread1;>ybuff_main;goto--halfstep-89
dataread2;>@20
gotoifless;>goto--jumper-89
gotoif;>goto--jumper-89
goto;>goto--branch-89
setreg1;>goto--jumper-89;goto--branch-89
goto;>row3_skip--label
null;;goto--jumper-89
#conditional set
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-91
gotoif;>goto--halfstep-91
goto;>goto--jumper-91
dataread1;>xbuff_main;goto--halfstep-91
dataread2;>@13
gotoifless;>goto--branch-91
gotoif;>goto--branch-91
goto;>goto--jumper-91
dataread1;>@1;goto--branch-91
datawrite1;>main_actflg
null;;goto--jumper-91
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@1
gotoifmore;>goto--halfstep-92
gotoif;>goto--halfstep-92
goto;>goto--jumper-92
dataread1;>xbuff_main;goto--halfstep-92
dataread2;>@13
gotoifless;>goto--branch-92
gotoif;>goto--branch-92
goto;>goto--jumper-92
setreg1;>goto--jumper-92;goto--branch-92
s1push1
goto;>nothing_here--label
null;;goto--jumper-92
#conditional set
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-93
gotoif;>goto--halfstep-93
goto;>goto--jumper-93
dataread1;>xbuff_main;goto--halfstep-93
dataread2;>@28
gotoifless;>goto--branch-93
gotoif;>goto--branch-93
goto;>goto--jumper-93
dataread1;>@1;goto--branch-93
datawrite1;>main_actflg
null;;goto--jumper-93
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@16
gotoifmore;>goto--halfstep-94
gotoif;>goto--halfstep-94
goto;>goto--jumper-94
dataread1;>xbuff_main;goto--halfstep-94
dataread2;>@28
gotoifless;>goto--branch-94
gotoif;>goto--branch-94
goto;>goto--jumper-94
setreg1;>goto--jumper-94;goto--branch-94
s1push1
goto;>nothing_here--label
null;;goto--jumper-94
#conditional set
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-95
gotoif;>goto--halfstep-95
goto;>goto--jumper-95
dataread1;>xbuff_main;goto--halfstep-95
dataread2;>@43
gotoifless;>goto--branch-95
gotoif;>goto--branch-95
goto;>goto--jumper-95
dataread1;>@1;goto--branch-95
datawrite1;>main_actflg
null;;goto--jumper-95
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@31
gotoifmore;>goto--halfstep-96
gotoif;>goto--halfstep-96
goto;>goto--jumper-96
dataread1;>xbuff_main;goto--halfstep-96
dataread2;>@43
gotoifless;>goto--branch-96
gotoif;>goto--branch-96
goto;>goto--jumper-96
setreg1;>goto--jumper-96;goto--branch-96
s1push1
goto;>nothing_here--label
null;;goto--jumper-96
#conditional set
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-97
gotoif;>goto--halfstep-97
goto;>goto--jumper-97
dataread1;>xbuff_main;goto--halfstep-97
dataread2;>@58
gotoifless;>goto--branch-97
gotoif;>goto--branch-97
goto;>goto--jumper-97
dataread1;>@1;goto--branch-97
datawrite1;>main_actflg
null;;goto--jumper-97
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@46
gotoifmore;>goto--halfstep-98
gotoif;>goto--halfstep-98
goto;>goto--jumper-98
dataread1;>xbuff_main;goto--halfstep-98
dataread2;>@58
gotoifless;>goto--branch-98
gotoif;>goto--branch-98
goto;>goto--jumper-98
setreg1;>goto--jumper-98;goto--branch-98
s1push1
goto;>nothing_here--label
null;;goto--jumper-98
#conditional set
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-99
gotoif;>goto--halfstep-99
goto;>goto--jumper-99
dataread1;>xbuff_main;goto--halfstep-99
dataread2;>@73
gotoifless;>goto--branch-99
gotoif;>goto--branch-99
goto;>goto--jumper-99
dataread1;>@1;goto--branch-99
datawrite1;>main_actflg
null;;goto--jumper-99
#conditional subroutine goto
dataread1;>xbuff_main
dataread2;>@61
gotoifmore;>goto--halfstep-100
gotoif;>goto--halfstep-100
goto;>goto--jumper-100
dataread1;>xbuff_main;goto--halfstep-100
dataread2;>@73
gotoifless;>goto--branch-100
gotoif;>goto--branch-100
goto;>goto--jumper-100
setreg1;>goto--jumper-100;goto--branch-100
s1push1
goto;>nothing_here--label
null;;goto--jumper-100
#label
null;;row3_skip--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #104
iowrite1;>mouse.button#SSTNPL Source Line: '104' 
#goto 
goto;>main--label
#label
null;;newline--label
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;space--label
#print space
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
null;;labelpad1--label
#Upward range iterator
dataread1;>@1
datawrite1;>foo1
setreg1;>uiter-retpos-124;uiter-loopback-124
s1push1
goto;>space--label
dataread1;>foo1;uiter-retpos-124
setreg2;10x1
add
datawrite1;>foo1
dataread2;>@11
gotoifless;>uiter-loopback-124
gotoif;>uiter-loopback-124

#return from subroutine.
s1pop1
gotoreg1
#label
null;;hudsplash--label
#Set text colors
dataread1;>*+++0--
iowrite1;>io.textcolor
#print
fopwri1;:S
#Set text colors
dataread1;>*+++00-
iowrite1;>io.textcolor
#print
fopwri1;:B
#Set text colors
dataread1;>*+++-0-
iowrite1;>io.textcolor
#print
fopwri1;:T
#Set text colors
dataread1;>*+++-00
iowrite1;>io.textcolor
#print
fopwri1;:C
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print
fopwri1;:V
#Set text colors
dataread1;>*+++0-0
iowrite1;>io.textcolor
#print
fopwri1;:M
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:4
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
null;;mainscreen_draw--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-154
s1push1
goto;>hudsplash--label
null;;goto--jumper-154
#prline
fopwri1;:M
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:M
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #158
include;sbtgsh+capps.tas0#SSTNPL Source Line: '158' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
#goto (extra code stores away return address.)
setreg1;>goto--jumper-164
s1push1
goto;>labelpad1--label
null;;goto--jumper-164
#print
fopwri1;:D
fopwri1;:i
fopwri1;:s
fopwri1;:k
#goto (extra code stores away return address.)
setreg1;>goto--jumper-166
s1push1
goto;>labelpad1--label
null;;goto--jumper-166
#print
fopwri1;:G
fopwri1;:a
fopwri1;:m
fopwri1;:e
#goto (extra code stores away return address.)
setreg1;>goto--jumper-168
s1push1
goto;>labelpad1--label
null;;goto--jumper-168
#print
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:E
fopwri1;:x
fopwri1;:i
fopwri1;:t
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #175
include;sbtgsh+capps2.tas0#SSTNPL Source Line: '175' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
#goto (extra code stores away return address.)
setreg1;>goto--jumper-181
s1push1
goto;>labelpad1--label
null;;goto--jumper-181
#print
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-185
s1push1
goto;>labelpad1--label
null;;goto--jumper-185
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-187
s1push1
goto;>labelpad1--label
null;;goto--jumper-187
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+++00+
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #192
include;sbtgsh+capps3.tas0#SSTNPL Source Line: '192' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#print space
fopwri1;:\s
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-198
s1push1
goto;>labelpad1--label
null;;goto--jumper-198
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-200
s1push1
goto;>labelpad1--label
null;;goto--jumper-200
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-202
s1push1
goto;>labelpad1--label
null;;goto--jumper-202
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#goto (extra code stores away return address.)
setreg1;>goto--jumper-204
s1push1
goto;>labelpad1--label
null;;goto--jumper-204
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:A
fopwri1;:M
fopwri1;::
fopwri1;:\s
fopwri1;:3
fopwri1;:9
fopwri1;:.
fopwri1;:3
fopwri1;:6
fopwri1;:6
fopwri1;:\s
fopwri1;:K
fopwri1;:i
fopwri1;:l
fopwri1;:o
fopwri1;:N
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:C
fopwri1;:P
fopwri1;:U
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:_
fopwri1;:G
fopwri1;:2
fopwri1;:x
fopwri1;:_
fopwri1;:9
fopwri1;:_
fopwri1;:r
fopwri1;:1
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:\v
fopwri1;:\s
fopwri1;:I
fopwri1;:n
fopwri1;:p
fopwri1;:u
fopwri1;:t
fopwri1;::
fopwri1;:\s
fopwri1;:M
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #213
iowrite1;>mouse.button#SSTNPL Source Line: '213' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;not_implemented--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-222
s1push1
goto;>hudsplash--label
null;;goto--jumper-222
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:p
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-225
s1push1
goto;>icon_message--label
null;;goto--jumper-225
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:y
fopwri1;:e
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:r
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-228;uiter-loopback-228
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-228
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-228
gotoif;>uiter-loopback-228

#goto (extra code stores away return address.)
setreg1;>goto--jumper-230
s1push1
goto;>click_wait--label
null;;goto--jumper-230
#return from subroutine.
s1pop1
gotoreg1
#label
null;;nothing_here--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-238
s1push1
goto;>hudsplash--label
null;;goto--jumper-238
#prline
fopwri1;:W
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:p
fopwri1;:s
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-241
s1push1
goto;>icon_message--label
null;;goto--jumper-241
#prline
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:s
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:e
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:r
fopwri1;:y
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:u
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>nothing_here_fill
setreg1;>uiter-retpos-244;uiter-loopback-244
s1push1
goto;>newline--label
dataread1;>nothing_here_fill;uiter-retpos-244
setreg2;10x1
add
datawrite1;>nothing_here_fill
dataread2;>@17
gotoifless;>uiter-loopback-244
gotoif;>uiter-loopback-244

#goto (extra code stores away return address.)
setreg1;>goto--jumper-246
s1push1
goto;>click_wait--label
null;;goto--jumper-246
#return from subroutine.
s1pop1
gotoreg1
#label
null;;icon_message--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #253
include;sbtgsh+icon_message.tas0#SSTNPL Source Line: '253' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;icon_no--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #257
include;sbtgsh+icon_no.tas0#SSTNPL Source Line: '257' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help--label
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>help_actflg
#label
null;;help__loop--label
#conditional goto
dataread1;>@1
dataread2;>help_actflg
gotoif;>goto--jumper-270
goto;>goto--branch-270
setreg1;>goto--jumper-270;goto--branch-270
goto;>help__skipdraw--label
null;;goto--jumper-270
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>help_actflg
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-276
s1push1
goto;>hudsplash--label
null;;goto--jumper-276
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:I
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:x
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:<
fopwri1;:\s
fopwri1;:C
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:g
fopwri1;:o
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:>
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#Set text colors
dataread1;>*---++0
iowrite1;>io.textcolor
#prline
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*---0++
iowrite1;>io.textcolor
#prline
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-290;uiter-loopback-290
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-290
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@18
gotoifless;>uiter-loopback-290
gotoif;>uiter-loopback-290

#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #292
iowrite1;>mouse.button#SSTNPL Source Line: '292' 
#label
null;;help__skipdraw--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #296
ioread1;>mouse.button#SSTNPL Source Line: '296' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-299
goto;>goto--branch-299
setreg1;>goto--jumper-299;goto--branch-299
goto;>help__skipdraw--label
null;;goto--jumper-299
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #301
ioread1;>mouse.locky#SSTNPL Source Line: '301' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_help
#conditional return
dataread1;>ybuff_help
dataread2;>@2
gotoif;>goto--branch-304
goto;>goto--jumper-304
s1pop1;;goto--branch-304
gotoreg1
null;;goto--jumper-304
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@3
gotoif;>goto--branch-306
goto;>goto--jumper-306
setreg1;>goto--jumper-306;goto--branch-306
s1push1
goto;>help_about--label
null;;goto--jumper-306
#conditional set
dataread1;>ybuff_help
dataread2;>@3
gotoif;>goto--branch-307
goto;>goto--jumper-307
dataread1;>@1;goto--branch-307
datawrite1;>help_actflg
null;;goto--jumper-307
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@4
gotoif;>goto--branch-309
goto;>goto--jumper-309
setreg1;>goto--jumper-309;goto--branch-309
s1push1
goto;>help_overview--label
null;;goto--jumper-309
#conditional set
dataread1;>ybuff_help
dataread2;>@4
gotoif;>goto--branch-310
goto;>goto--jumper-310
dataread1;>@1;goto--branch-310
datawrite1;>help_actflg
null;;goto--jumper-310
#conditional subroutine goto
dataread1;>ybuff_help
dataread2;>@5
gotoif;>goto--branch-312
goto;>goto--jumper-312
setreg1;>goto--jumper-312;goto--branch-312
s1push1
goto;>help_calc--label
null;;goto--jumper-312
#conditional set
dataread1;>ybuff_help
dataread2;>@5
gotoif;>goto--branch-313
goto;>goto--jumper-313
dataread1;>@1;goto--branch-313
datawrite1;>help_actflg
null;;goto--jumper-313
#goto 
goto;>help__loop--label
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-322;uiter-loopback-322
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-322
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@21
gotoifless;>uiter-loopback-322
gotoif;>uiter-loopback-322

#goto (extra code stores away return address.)
setreg1;>goto--jumper-324
s1push1
goto;>click_wait--label
null;;goto--jumper-324
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_about--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-330
s1push1
goto;>hudsplash--label
null;;goto--jumper-330
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:G
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:h
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:S
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:4
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:-
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:9
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:,
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:,
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-355;uiter-loopback-355
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-355
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@4
gotoifless;>uiter-loopback-355
gotoif;>uiter-loopback-355

#goto (extra code stores away return address.)
setreg1;>goto--jumper-357
s1push1
goto;>click_wait--label
null;;goto--jumper-357
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_overview--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-363
s1push1
goto;>hudsplash--label
null;;goto--jumper-363
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:O
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:v
fopwri1;:i
fopwri1;:e
fopwri1;:w
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:U
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:n
fopwri1;:a
fopwri1;:v
fopwri1;:i
fopwri1;:g
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:r
fopwri1;:i
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:s
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:m
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:u
fopwri1;:r
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:p
fopwri1;:p
fopwri1;:o
fopwri1;:r
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:.
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-372;uiter-loopback-372
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-372
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@19
gotoifless;>uiter-loopback-372
gotoif;>uiter-loopback-372

#goto (extra code stores away return address.)
setreg1;>goto--jumper-374
s1push1
goto;>click_wait--label
null;;goto--jumper-374
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help_calc--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-380
s1push1
goto;>hudsplash--label
null;;goto--jumper-380
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:A
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:O
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:.
fopwri1;:G
fopwri1;:.
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:U
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:[
fopwri1;:\s
fopwri1;:=
fopwri1;:\s
fopwri1;:]
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:s
fopwri1;:h
fopwri1;:\s
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:b
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:]
fopwri1;:,
fopwri1;:[
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:]
fopwri1;:,
fopwri1;:[
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:]
fopwri1;:,
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:[
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:]
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:'
fopwri1;:b
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;:'
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:\n
#prline
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:c
fopwri1;:l
fopwri1;:r
fopwri1;:]
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:'
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:'
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:]
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:]
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:e
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:o
fopwri1;:f
fopwri1;:f
fopwri1;:]
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-399;uiter-loopback-399
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-399
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@9
gotoifless;>uiter-loopback-399
gotoif;>uiter-loopback-399

#goto (extra code stores away return address.)
setreg1;>goto--jumper-401
s1push1
goto;>click_wait--label
null;;goto--jumper-401
#return from subroutine.
s1pop1
gotoreg1
#label
null;;click_wait--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #408
iowrite1;>mouse.button#SSTNPL Source Line: '408' 
#label
null;;click_wait_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #410
ioread1;>mouse.button#SSTNPL Source Line: '410' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-412
goto;>goto--branch-412
setreg1;>goto--jumper-412;goto--branch-412
goto;>click_wait_loop--label
null;;goto--jumper-412
#return from subroutine.
s1pop1
gotoreg1
#label
null;;VDI_shell--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-419
s1push1
goto;>hudsplash--label
null;;goto--jumper-419
#prline
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:W
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:'
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:S
fopwri1;:H
fopwri1;:\n
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:'
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:u
fopwri1;:t
fopwri1;:d
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-424;uiter-loopback-424
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-424
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@19
gotoifless;>uiter-loopback-424
gotoif;>uiter-loopback-424

#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #428
include;vdishell.tas0#SSTNPL Source Line: '428' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #429
dataread1;>vdiexitcode#SSTNPL Source Line: '429' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>exitcode
#conditional return
dataread1;>exitcode
dataread2;>@1
gotoif;>goto--branch-431
goto;>goto--jumper-431
s1pop1;;goto--branch-431
gotoreg1
null;;goto--jumper-431
#conditional stop
dataread1;>exitcode
dataread2;>@2
gotoif;>goto--branch-432
goto;>goto--jumper-432
stop;;goto--branch-432

null;;goto--jumper-432
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_init--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgy
#label
null;;calc_loop--label
#conditional goto
dataread1;>calc_redrawflgx
dataread2;>@1
gotoif;>goto--jumper-458
goto;>goto--branch-458
setreg1;>goto--jumper-458;goto--branch-458
goto;>calc_inputloop--label
null;;goto--jumper-458
#conditional goto
dataread1;>calc_redrawflgy
dataread2;>@1
gotoif;>goto--jumper-459
goto;>goto--branch-459
setreg1;>goto--jumper-459;goto--branch-459
goto;>calc_inputloop--label
null;;goto--jumper-459
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-462
s1push1
goto;>hudsplash--label
null;;goto--jumper-462
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:\s
fopwri1;:+
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:0
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:]
fopwri1;:[
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:P
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:]
fopwri1;:[
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:]
fopwri1;:[
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---+++
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:]
fopwri1;:[
fopwri1;:\s
fopwri1;:=
fopwri1;:\s
fopwri1;:]
#Set text colors
dataread1;>*+++0--
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:o
fopwri1;:f
fopwri1;:f
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*---++0
iowrite1;>io.textcolor
#print
fopwri1;:[
fopwri1;:d
fopwri1;:e
fopwri1;:l
fopwri1;:]
fopwri1;:[
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:]
fopwri1;:[
fopwri1;:c
fopwri1;:l
fopwri1;:r
fopwri1;:]
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:B
fopwri1;:u
fopwri1;:f
fopwri1;:f
fopwri1;:e
fopwri1;:r
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>calc_buffer
iowrite1;>io.tritdump
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#print newline
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#Dump (trits)
dataread1;>calc_entry
iowrite1;>io.tritdump
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-501;uiter-loopback-501
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-501
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@8
gotoifless;>uiter-loopback-501
gotoif;>uiter-loopback-501

#label
null;;calc_inputloop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #505
ioread1;>mouse.button#SSTNPL Source Line: '505' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-507
goto;>goto--branch-507
setreg1;>goto--jumper-507;goto--branch-507
goto;>calc_inputloop--label
null;;goto--jumper-507
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #516
ioread1;>mouse.lockx#SSTNPL Source Line: '516' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_calc
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #518
ioread1;>mouse.locky#SSTNPL Source Line: '518' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_calc
#conditional goto
dataread1;>xbuff_calc
dataread2;>@0
gotoifmore;>goto--halfstep-521
gotoif;>goto--halfstep-521
goto;>goto--branch-521
dataread1;>xbuff_calc;goto--halfstep-521
dataread2;>@4
gotoifless;>goto--jumper-521
gotoif;>goto--jumper-521
goto;>goto--branch-521
setreg1;>goto--jumper-521;goto--branch-521
goto;>calc_col1_skip--label
null;;goto--jumper-521
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-525
goto;>goto--jumper-525
dataread1;>*+;goto--branch-525
datawrite1;>tritbuff
null;;goto--jumper-525
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-526
goto;>goto--jumper-526
setreg1;>goto--jumper-526;goto--branch-526
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-526
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-528
goto;>goto--jumper-528
setreg1;>goto--jumper-528;goto--branch-528
s1push1
goto;>calc_add--label
null;;goto--jumper-528
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-529
goto;>goto--jumper-529
setreg1;>goto--jumper-529;goto--branch-529
s1push1
goto;>calc_div--label
null;;goto--jumper-529
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-530
goto;>goto--jumper-530
setreg1;>goto--jumper-530;goto--branch-530
s1push1
goto;>calc_tritpop--label
null;;goto--jumper-530
#label
null;;calc_col1_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@5
gotoifmore;>goto--halfstep-534
gotoif;>goto--halfstep-534
goto;>goto--branch-534
dataread1;>xbuff_calc;goto--halfstep-534
dataread2;>@9
gotoifless;>goto--jumper-534
gotoif;>goto--jumper-534
goto;>goto--branch-534
setreg1;>goto--jumper-534;goto--branch-534
goto;>calc_col2_skip--label
null;;goto--jumper-534
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-538
goto;>goto--jumper-538
dataread1;>*0;goto--branch-538
datawrite1;>tritbuff
null;;goto--jumper-538
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-539
goto;>goto--jumper-539
setreg1;>goto--jumper-539;goto--branch-539
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-539
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-540
goto;>goto--jumper-540
setreg1;>goto--jumper-540;goto--branch-540
s1push1
goto;>calc_sub--label
null;;goto--jumper-540
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-541
goto;>goto--jumper-541
setreg1;>goto--jumper-541;goto--branch-541
s1push1
goto;>calc_entrytobuffer--label
null;;goto--jumper-541
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-542
goto;>goto--jumper-542
setreg1;>goto--jumper-542;goto--branch-542
s1push1
goto;>calc_cleanup--label
null;;goto--jumper-542
#label
null;;calc_col2_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@10
gotoifmore;>goto--halfstep-547
gotoif;>goto--halfstep-547
goto;>goto--branch-547
dataread1;>xbuff_calc;goto--halfstep-547
dataread2;>@14
gotoifless;>goto--jumper-547
gotoif;>goto--jumper-547
goto;>goto--branch-547
setreg1;>goto--jumper-547;goto--branch-547
goto;>calc_col3_skip--label
null;;goto--jumper-547
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional set
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-551
goto;>goto--jumper-551
dataread1;>*-;goto--branch-551
datawrite1;>tritbuff
null;;goto--jumper-551
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-552
goto;>goto--jumper-552
setreg1;>goto--jumper-552;goto--branch-552
s1push1
goto;>calc_tritpush--label
null;;goto--jumper-552
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@5
gotoif;>goto--branch-553
goto;>goto--jumper-553
setreg1;>goto--jumper-553;goto--branch-553
s1push1
goto;>calc_mul--label
null;;goto--jumper-553
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-554
goto;>goto--jumper-554
setreg1;>goto--jumper-554;goto--branch-554
s1push1
goto;>calc_cleanup--label
null;;goto--jumper-554
#conditional return
dataread1;>ybuff_calc
dataread2;>@7
gotoif;>goto--branch-555
goto;>goto--jumper-555
s1pop1;;goto--branch-555
gotoreg1
null;;goto--jumper-555
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@9
gotoif;>goto--branch-556
goto;>goto--jumper-556
setreg1;>goto--jumper-556;goto--branch-556
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-556
#label
null;;calc_col3_skip--label
#conditional goto
dataread1;>xbuff_calc
dataread2;>@15
gotoifmore;>goto--halfstep-560
gotoif;>goto--halfstep-560
goto;>goto--branch-560
dataread1;>xbuff_calc;goto--halfstep-560
dataread2;>@20
gotoifless;>goto--jumper-560
gotoif;>goto--jumper-560
goto;>goto--branch-560
setreg1;>goto--jumper-560;goto--branch-560
goto;>calc_col4_skip--label
null;;goto--jumper-560
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_redrawflgx
#conditional subroutine goto
dataread1;>ybuff_calc
dataread2;>@3
gotoif;>goto--branch-563
goto;>goto--jumper-563
setreg1;>goto--jumper-563;goto--branch-563
s1push1
goto;>help_calc--label
null;;goto--jumper-563
#label
null;;calc_col4_skip--label
#conditional set
dataread1;>@3
dataread2;>ybuff_calc
gotoif;>goto--branch-568
goto;>goto--jumper-568
dataread1;>@1;goto--branch-568
datawrite1;>calc_redrawflgy
null;;goto--jumper-568
#conditional set
dataread1;>@5
dataread2;>ybuff_calc
gotoif;>goto--branch-569
goto;>goto--jumper-569
dataread1;>@1;goto--branch-569
datawrite1;>calc_redrawflgy
null;;goto--jumper-569
#conditional set
dataread1;>@7
dataread2;>ybuff_calc
gotoif;>goto--branch-570
goto;>goto--jumper-570
dataread1;>@1;goto--branch-570
datawrite1;>calc_redrawflgy
null;;goto--jumper-570
#conditional set
dataread1;>@9
dataread2;>ybuff_calc
gotoif;>goto--branch-571
goto;>goto--jumper-571
dataread1;>@1;goto--branch-571
datawrite1;>calc_redrawflgy
null;;goto--jumper-571
#goto 
goto;>calc_loop--label
#label
null;;calc_tritpush--label
#conditional return
dataread1;>tritlen
dataread2;>@9
gotoif;>goto--branch-577
goto;>goto--jumper-577
s1pop1;;goto--branch-577
gotoreg1
null;;goto--jumper-577
#get(1) (may be used with set, or asm code)
dataread1;>tritbuff
#stack push (uses stack 2)
s2push1
#multiply (2op math)
dataread1;>calc_entry
dataread2;>@3
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#add (2op math)
dataread1;>calc_entry
dataread2;>tritbuff
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#add (2op math)
dataread1;>tritlen
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_tritpop--label
#conditional return
dataread1;>tritlen
dataread2;>@0
gotoif;>goto--branch-590
goto;>goto--jumper-590
s1pop1;;goto--branch-590
gotoreg1
null;;goto--jumper-590
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#subtract (2op math)
dataread1;>calc_entry
dataread2;>tritbuff
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#divide (2op math)
dataread1;>calc_entry
dataread2;>@3
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#subtract (2op math)
dataread1;>tritlen
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_cleanup--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-603
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-603
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_purgeentry--label
#Upward range iterator
dataread1;>@0
datawrite1;>calc_cleanloop
setreg1;>uiter-retpos-609;uiter-loopback-609
s1push1
goto;>calc_tritpop--label
dataread1;>calc_cleanloop;uiter-retpos-609
setreg2;10x1
add
datawrite1;>calc_cleanloop
dataread2;>@9
gotoifless;>uiter-loopback-609
gotoif;>uiter-loopback-609

#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritlen
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>tritbuff
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_entrytobuffer--label
#get(1) (may be used with set, or asm code)
dataread1;>calc_entry
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-619
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-619
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_add--label
#add (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-625
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-625
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_sub--label
#subtract (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-631
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-631
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_mul--label
#multiply (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-637
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-637
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_div--label
#conditional subroutine goto
dataread1;>calc_entry
dataread2;>@0
gotoif;>goto--branch-641
goto;>goto--jumper-641
setreg1;>goto--jumper-641;goto--branch-641
s1push1
goto;>calc_ERROR--label
null;;goto--jumper-641
#conditional return
dataread1;>calc_entry
dataread2;>@0
gotoif;>goto--branch-642
goto;>goto--jumper-642
s1pop1;;goto--branch-642
gotoreg1
null;;goto--jumper-642
#divide (2op math)
dataread1;>calc_buffer
dataread2;>calc_entry
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>calc_buffer
#goto (extra code stores away return address.)
setreg1;>goto--jumper-645
s1push1
goto;>calc_purgeentry--label
null;;goto--jumper-645
#return from subroutine.
s1pop1
gotoreg1
#label
null;;calc_ERROR--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-653
s1push1
goto;>hudsplash--label
null;;goto--jumper-653
#prline
fopwri1;:C
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:D
fopwri1;:E
fopwri1;:\s
fopwri1;:B
fopwri1;:Y
fopwri1;:\s
fopwri1;:Z
fopwri1;:E
fopwri1;:R
fopwri1;:O
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-656
s1push1
goto;>icon_no--label
null;;goto--jumper-656
#prline
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:e
fopwri1;:r
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-659;uiter-loopback-659
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-659
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-659
gotoif;>uiter-loopback-659

#goto (extra code stores away return address.)
setreg1;>goto--jumper-661
s1push1
goto;>click_wait--label
null;;goto--jumper-661
#return from subroutine.
s1pop1
gotoreg1
#label
null;;crystal_ball--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #670
iowrite1;>mouse.button#SSTNPL Source Line: '670' 
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-675
s1push1
goto;>hudsplash--label
null;;goto--jumper-675
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:.
fopwri1;:\s
fopwri1;:A
fopwri1;:s
fopwri1;:k
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:Y
fopwri1;:e
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:m
fopwri1;:y
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:!
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:o
fopwri1;:r
fopwri1;:w
fopwri1;:a
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:i
fopwri1;:f
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:s
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #681
include;sbtgsh+ball.tas0#SSTNPL Source Line: '681' 
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-683;uiter-loopback-683
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-683
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@13
gotoifless;>uiter-loopback-683
gotoif;>uiter-loopback-683

#label
null;;cry_inputloop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #688
ioread1;>mouse.button#SSTNPL Source Line: '688' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-690
goto;>goto--branch-690
setreg1;>goto--jumper-690;goto--branch-690
goto;>cry_inputloop--label
null;;goto--jumper-690
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #693
ioread1;>mouse.lockx#SSTNPL Source Line: '693' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff_cry
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #695
ioread1;>mouse.locky#SSTNPL Source Line: '695' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff_cry
#conditional goto
dataread1;>ybuff_cry
dataread2;>@3
gotoifmore;>goto--halfstep-698
gotoif;>goto--halfstep-698
goto;>goto--branch-698
dataread1;>ybuff_cry;goto--halfstep-698
dataread2;>@10
gotoifless;>goto--jumper-698
gotoif;>goto--jumper-698
goto;>goto--branch-698
setreg1;>goto--jumper-698;goto--branch-698
goto;>cry_inputloop--label
null;;goto--jumper-698
#conditional goto
dataread1;>xbuff_cry
dataread2;>@0
gotoifmore;>goto--halfstep-699
gotoif;>goto--halfstep-699
goto;>goto--branch-699
dataread1;>xbuff_cry;goto--halfstep-699
dataread2;>@35
gotoifless;>goto--jumper-699
gotoif;>goto--jumper-699
goto;>goto--branch-699
setreg1;>goto--jumper-699;goto--branch-699
goto;>cry_inputloop--label
null;;goto--jumper-699
#conditional subroutine goto
dataread1;>xbuff_cry
dataread2;>@0
gotoifmore;>goto--halfstep-700
gotoif;>goto--halfstep-700
goto;>goto--jumper-700
dataread1;>xbuff_cry;goto--halfstep-700
dataread2;>@23
gotoifless;>goto--branch-700
gotoif;>goto--branch-700
goto;>goto--jumper-700
setreg1;>goto--jumper-700;goto--branch-700
s1push1
goto;>cry_do_ball--label
null;;goto--jumper-700
#conditional return
dataread1;>xbuff_cry
dataread2;>@25
gotoifmore;>goto--halfstep-701
gotoif;>goto--halfstep-701
goto;>goto--jumper-701
dataread1;>xbuff_cry;goto--halfstep-701
dataread2;>@35
gotoifless;>goto--branch-701
gotoif;>goto--branch-701
goto;>goto--jumper-701
s1pop1;;goto--branch-701
gotoreg1
null;;goto--jumper-701
#goto 
goto;>crystal_ball--label
#label
null;;cry_do_ball--label
#Random ranged number
dataread1;>@-1
dataread2;>@1
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>crystal_random
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@1
gotoif;>goto--branch-710
goto;>goto--jumper-710
setreg1;>goto--jumper-710;goto--branch-710
s1push1
goto;>cry_yes--label
null;;goto--jumper-710
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@0
gotoif;>goto--branch-711
goto;>goto--jumper-711
setreg1;>goto--jumper-711;goto--branch-711
s1push1
goto;>cry_unsure--label
null;;goto--jumper-711
#conditional subroutine goto
dataread1;>crystal_random
dataread2;>@-1
gotoif;>goto--branch-712
goto;>goto--jumper-712
setreg1;>goto--jumper-712;goto--branch-712
s1push1
goto;>cry_no--label
null;;goto--jumper-712
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_no--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-719
s1push1
goto;>hudsplash--label
null;;goto--jumper-719
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-722
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-722
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:p
fopwri1;:i
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:k
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-724;uiter-loopback-724
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-724
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-724
gotoif;>uiter-loopback-724

#goto (extra code stores away return address.)
setreg1;>goto--jumper-726
s1push1
goto;>click_wait--label
null;;goto--jumper-726
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_yes--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-732
s1push1
goto;>hudsplash--label
null;;goto--jumper-732
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-735
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-735
#prline
fopwri1;:Y
fopwri1;:e
fopwri1;:s
fopwri1;:,
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:e
fopwri1;:d
fopwri1;:,
fopwri1;:\s
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:!
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-737;uiter-loopback-737
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-737
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-737
gotoif;>uiter-loopback-737

#goto (extra code stores away return address.)
setreg1;>goto--jumper-739
s1push1
goto;>click_wait--label
null;;goto--jumper-739
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_unsure--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-745
s1push1
goto;>hudsplash--label
null;;goto--jumper-745
#prline
fopwri1;:C
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:n
fopwri1;:s
fopwri1;:w
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-748
s1push1
goto;>cry_ballicon--label
null;;goto--jumper-748
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:i
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:p
fopwri1;:o
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:k
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-750;uiter-loopback-750
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-750
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@17
gotoifless;>uiter-loopback-750
gotoif;>uiter-loopback-750

#goto (extra code stores away return address.)
setreg1;>goto--jumper-752
s1push1
goto;>click_wait--label
null;;goto--jumper-752
#return from subroutine.
s1pop1
gotoreg1
#label
null;;cry_ballicon--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #756
include;sbtgsh+ballicon.tas0#SSTNPL Source Line: '756' 
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#goto (extra code stores away return address.)
setreg1;>goto--jumper-767
s1push1
goto;>hudsplash--label
null;;goto--jumper-767
#prline
fopwri1;:S
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#Set text colors
dataread1;>*---00+
iowrite1;>io.textcolor
#prline
fopwri1;:T
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:.
fopwri1;:\n
#Upward range iterator
dataread1;>@1
datawrite1;>not_sup_fill
setreg1;>uiter-retpos-771;uiter-loopback-771
s1push1
goto;>newline--label
dataread1;>not_sup_fill;uiter-retpos-771
setreg2;10x1
add
datawrite1;>not_sup_fill
dataread2;>@20
gotoifless;>uiter-loopback-771
gotoif;>uiter-loopback-771

#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#label
null;;sys_shell_loop--label
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#prline
fopwri1;:S
fopwri1;:H
fopwri1;:E
fopwri1;:L
fopwri1;:L
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:A
fopwri1;:D
fopwri1;:Y
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#print
fopwri1;:>
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #782
iowrite1;>io.ttyrd#SSTNPL Source Line: '782' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-784
s1push1
goto;>getentry--label
null;;goto--jumper-784
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_validcom
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--791
null;;tabstrc--adrbuff--791
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--791
null;;tabstrc--outbuff--791
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--791

datawrite1;>tabstrc--recurs-tabbuff--791_1
dataread1;;tabstrc--recurs-tabbuff--791_1
datawrite1;>tabstrc--recurs-tabbuff_read--791_1
dataread1;;tabstrc--recurs-tabbuff_read--791_1

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--791_1
goto;>tabstrc--recurs-checkno--791_1
null;;tabstrc--recurs-checkyes--791_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--791
setreg2;+
add
datawrite1;>tabstrc--adrbuff--791

setreg1;>tabstrc--adrbuff--791

datawrite1;>tabstrc--recurs-tabbuff--791_2
dataread1;;tabstrc--recurs-tabbuff--791_2
datawrite1;>tabstrc--recurs-tabbuff_read--791_2
dataread1;;tabstrc--recurs-tabbuff_read--791_2

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--791_2
goto;>tabstrc--recurs-checkno--791_2
null;;tabstrc--recurs-checkyes--791_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--791
setreg2;+
add
datawrite1;>tabstrc--adrbuff--791

setreg1;>tabstrc--adrbuff--791

datawrite1;>tabstrc--recurs-tabbuff--791_3
dataread1;;tabstrc--recurs-tabbuff--791_3
datawrite1;>tabstrc--recurs-tabbuff_read--791_3
dataread1;;tabstrc--recurs-tabbuff_read--791_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--791_3
goto;>tabstrc--recurs-checkno--791_3
null;;tabstrc--recurs-checkyes--791_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--791
setreg2;+
add
datawrite1;>tabstrc--adrbuff--791

setreg1;>tabstrc--adrbuff--791

datawrite1;>tabstrc--recurs-tabbuff--791_4
dataread1;;tabstrc--recurs-tabbuff--791_4
datawrite1;>tabstrc--recurs-tabbuff_read--791_4
dataread1;;tabstrc--recurs-tabbuff_read--791_4

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--791_4
goto;>tabstrc--recurs-checkno--791_4
null;;tabstrc--recurs-checkyes--791_4
##set flag########
setreg1;>tabstrc--outbuff--791
datawrite1;>tabstrc--recurs-flag--791_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--791_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--791_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--791_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--791_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--791_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--791
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-793
goto;>goto--jumper-793
setreg1;>goto--jumper-793;goto--branch-793
s1push1
goto;>sys_shell_help--label
null;;goto--jumper-793
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--795
null;;tabstrc--adrbuff--795
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--795
null;;tabstrc--outbuff--795
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--795

datawrite1;>tabstrc--recurs-tabbuff--795_1
dataread1;;tabstrc--recurs-tabbuff--795_1
datawrite1;>tabstrc--recurs-tabbuff_read--795_1
dataread1;;tabstrc--recurs-tabbuff_read--795_1

setreg2;:b


gotoif;>tabstrc--recurs-checkyes--795_1
goto;>tabstrc--recurs-checkno--795_1
null;;tabstrc--recurs-checkyes--795_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--795
setreg2;+
add
datawrite1;>tabstrc--adrbuff--795

setreg1;>tabstrc--adrbuff--795

datawrite1;>tabstrc--recurs-tabbuff--795_2
dataread1;;tabstrc--recurs-tabbuff--795_2
datawrite1;>tabstrc--recurs-tabbuff_read--795_2
dataread1;;tabstrc--recurs-tabbuff_read--795_2

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--795_2
goto;>tabstrc--recurs-checkno--795_2
null;;tabstrc--recurs-checkyes--795_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--795
setreg2;+
add
datawrite1;>tabstrc--adrbuff--795

setreg1;>tabstrc--adrbuff--795

datawrite1;>tabstrc--recurs-tabbuff--795_3
dataread1;;tabstrc--recurs-tabbuff--795_3
datawrite1;>tabstrc--recurs-tabbuff_read--795_3
dataread1;;tabstrc--recurs-tabbuff_read--795_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--795_3
goto;>tabstrc--recurs-checkno--795_3
null;;tabstrc--recurs-checkyes--795_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--795
setreg2;+
add
datawrite1;>tabstrc--adrbuff--795

setreg1;>tabstrc--adrbuff--795

datawrite1;>tabstrc--recurs-tabbuff--795_4
dataread1;;tabstrc--recurs-tabbuff--795_4
datawrite1;>tabstrc--recurs-tabbuff_read--795_4
dataread1;;tabstrc--recurs-tabbuff_read--795_4

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--795_4
goto;>tabstrc--recurs-checkno--795_4
null;;tabstrc--recurs-checkyes--795_4
##set flag########
setreg1;>tabstrc--outbuff--795
datawrite1;>tabstrc--recurs-flag--795_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--795_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--795_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--795_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--795_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--795_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--795
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-797
goto;>goto--jumper-797
setreg1;>goto--jumper-797;goto--branch-797
s1push1
goto;>crystal_ball--label
null;;goto--jumper-797
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--799
null;;tabstrc--adrbuff--799
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--799
null;;tabstrc--outbuff--799
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_1
dataread1;;tabstrc--recurs-tabbuff--799_1
datawrite1;>tabstrc--recurs-tabbuff_read--799_1
dataread1;;tabstrc--recurs-tabbuff_read--799_1

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--799_1
goto;>tabstrc--recurs-checkno--799_1
null;;tabstrc--recurs-checkyes--799_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--799
setreg2;+
add
datawrite1;>tabstrc--adrbuff--799

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_2
dataread1;;tabstrc--recurs-tabbuff--799_2
datawrite1;>tabstrc--recurs-tabbuff_read--799_2
dataread1;;tabstrc--recurs-tabbuff_read--799_2

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--799_2
goto;>tabstrc--recurs-checkno--799_2
null;;tabstrc--recurs-checkyes--799_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--799
setreg2;+
add
datawrite1;>tabstrc--adrbuff--799

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_3
dataread1;;tabstrc--recurs-tabbuff--799_3
datawrite1;>tabstrc--recurs-tabbuff_read--799_3
dataread1;;tabstrc--recurs-tabbuff_read--799_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--799_3
goto;>tabstrc--recurs-checkno--799_3
null;;tabstrc--recurs-checkyes--799_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--799
setreg2;+
add
datawrite1;>tabstrc--adrbuff--799

setreg1;>tabstrc--adrbuff--799

datawrite1;>tabstrc--recurs-tabbuff--799_4
dataread1;;tabstrc--recurs-tabbuff--799_4
datawrite1;>tabstrc--recurs-tabbuff_read--799_4
dataread1;;tabstrc--recurs-tabbuff_read--799_4

setreg2;:c


gotoif;>tabstrc--recurs-checkyes--799_4
goto;>tabstrc--recurs-checkno--799_4
null;;tabstrc--recurs-checkyes--799_4
##set flag########
setreg1;>tabstrc--outbuff--799
datawrite1;>tabstrc--recurs-flag--799_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--799_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--799_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--799
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-801
goto;>goto--jumper-801
setreg1;>goto--jumper-801;goto--branch-801
s1push1
goto;>calc_init--label
null;;goto--jumper-801
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--803
null;;tabstrc--adrbuff--803
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--803
null;;tabstrc--outbuff--803
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_1
dataread1;;tabstrc--recurs-tabbuff--803_1
datawrite1;>tabstrc--recurs-tabbuff_read--803_1
dataread1;;tabstrc--recurs-tabbuff_read--803_1

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--803_1
goto;>tabstrc--recurs-checkno--803_1
null;;tabstrc--recurs-checkyes--803_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_2
dataread1;;tabstrc--recurs-tabbuff--803_2
datawrite1;>tabstrc--recurs-tabbuff_read--803_2
dataread1;;tabstrc--recurs-tabbuff_read--803_2

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--803_2
goto;>tabstrc--recurs-checkno--803_2
null;;tabstrc--recurs-checkyes--803_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_3
dataread1;;tabstrc--recurs-tabbuff--803_3
datawrite1;>tabstrc--recurs-tabbuff_read--803_3
dataread1;;tabstrc--recurs-tabbuff_read--803_3

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--803_3
goto;>tabstrc--recurs-checkno--803_3
null;;tabstrc--recurs-checkyes--803_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_4
dataread1;;tabstrc--recurs-tabbuff--803_4
datawrite1;>tabstrc--recurs-tabbuff_read--803_4
dataread1;;tabstrc--recurs-tabbuff_read--803_4

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--803_4
goto;>tabstrc--recurs-checkno--803_4
null;;tabstrc--recurs-checkyes--803_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_5
dataread1;;tabstrc--recurs-tabbuff--803_5
datawrite1;>tabstrc--recurs-tabbuff_read--803_5
dataread1;;tabstrc--recurs-tabbuff_read--803_5

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--803_5
goto;>tabstrc--recurs-checkno--803_5
null;;tabstrc--recurs-checkyes--803_5
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--803
setreg2;+
add
datawrite1;>tabstrc--adrbuff--803

setreg1;>tabstrc--adrbuff--803

datawrite1;>tabstrc--recurs-tabbuff--803_6
dataread1;;tabstrc--recurs-tabbuff--803_6
datawrite1;>tabstrc--recurs-tabbuff_read--803_6
dataread1;;tabstrc--recurs-tabbuff_read--803_6

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--803_6
goto;>tabstrc--recurs-checkno--803_6
null;;tabstrc--recurs-checkyes--803_6
##set flag########
setreg1;>tabstrc--outbuff--803
datawrite1;>tabstrc--recurs-flag--803_6
setreg1;+
datawrite1;;tabstrc--recurs-flag--803_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_6
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--803_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--803
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-805
goto;>goto--jumper-805
setreg1;>goto--jumper-805;goto--branch-805
s1push1
goto;>help--label
null;;goto--jumper-805
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--807
null;;tabstrc--adrbuff--807
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--807
null;;tabstrc--outbuff--807
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_1
dataread1;;tabstrc--recurs-tabbuff--807_1
datawrite1;>tabstrc--recurs-tabbuff_read--807_1
dataread1;;tabstrc--recurs-tabbuff_read--807_1

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--807_1
goto;>tabstrc--recurs-checkno--807_1
null;;tabstrc--recurs-checkyes--807_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_2
dataread1;;tabstrc--recurs-tabbuff--807_2
datawrite1;>tabstrc--recurs-tabbuff_read--807_2
dataread1;;tabstrc--recurs-tabbuff_read--807_2

setreg2;:b


gotoif;>tabstrc--recurs-checkyes--807_2
goto;>tabstrc--recurs-checkno--807_2
null;;tabstrc--recurs-checkyes--807_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_3
dataread1;;tabstrc--recurs-tabbuff--807_3
datawrite1;>tabstrc--recurs-tabbuff_read--807_3
dataread1;;tabstrc--recurs-tabbuff_read--807_3

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--807_3
goto;>tabstrc--recurs-checkno--807_3
null;;tabstrc--recurs-checkyes--807_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_4
dataread1;;tabstrc--recurs-tabbuff--807_4
datawrite1;>tabstrc--recurs-tabbuff_read--807_4
dataread1;;tabstrc--recurs-tabbuff_read--807_4

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--807_4
goto;>tabstrc--recurs-checkno--807_4
null;;tabstrc--recurs-checkyes--807_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--807
setreg2;+
add
datawrite1;>tabstrc--adrbuff--807

setreg1;>tabstrc--adrbuff--807

datawrite1;>tabstrc--recurs-tabbuff--807_5
dataread1;;tabstrc--recurs-tabbuff--807_5
datawrite1;>tabstrc--recurs-tabbuff_read--807_5
dataread1;;tabstrc--recurs-tabbuff_read--807_5

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--807_5
goto;>tabstrc--recurs-checkno--807_5
null;;tabstrc--recurs-checkyes--807_5
##set flag########
setreg1;>tabstrc--outbuff--807
datawrite1;>tabstrc--recurs-flag--807_5
setreg1;+
datawrite1;;tabstrc--recurs-flag--807_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_5
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--807_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--807
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-809
goto;>goto--jumper-809
setreg1;>goto--jumper-809;goto--branch-809
s1push1
goto;>help_about--label
null;;goto--jumper-809
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--811
null;;tabstrc--adrbuff--811
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--811
null;;tabstrc--outbuff--811
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_1
dataread1;;tabstrc--recurs-tabbuff--811_1
datawrite1;>tabstrc--recurs-tabbuff_read--811_1
dataread1;;tabstrc--recurs-tabbuff_read--811_1

setreg2;:v


gotoif;>tabstrc--recurs-checkyes--811_1
goto;>tabstrc--recurs-checkno--811_1
null;;tabstrc--recurs-checkyes--811_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_2
dataread1;;tabstrc--recurs-tabbuff--811_2
datawrite1;>tabstrc--recurs-tabbuff_read--811_2
dataread1;;tabstrc--recurs-tabbuff_read--811_2

setreg2;:d


gotoif;>tabstrc--recurs-checkyes--811_2
goto;>tabstrc--recurs-checkno--811_2
null;;tabstrc--recurs-checkyes--811_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--811
setreg2;+
add
datawrite1;>tabstrc--adrbuff--811

setreg1;>tabstrc--adrbuff--811

datawrite1;>tabstrc--recurs-tabbuff--811_3
dataread1;;tabstrc--recurs-tabbuff--811_3
datawrite1;>tabstrc--recurs-tabbuff_read--811_3
dataread1;;tabstrc--recurs-tabbuff_read--811_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--811_3
goto;>tabstrc--recurs-checkno--811_3
null;;tabstrc--recurs-checkyes--811_3
##set flag########
setreg1;>tabstrc--outbuff--811
datawrite1;>tabstrc--recurs-flag--811_3
setreg1;+
datawrite1;;tabstrc--recurs-flag--811_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--811_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--811
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-813
goto;>goto--jumper-813
setreg1;>goto--jumper-813;goto--branch-813
s1push1
goto;>VDI_shell--label
null;;goto--jumper-813
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--815
null;;tabstrc--adrbuff--815
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--815
null;;tabstrc--outbuff--815
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_1
dataread1;;tabstrc--recurs-tabbuff--815_1
datawrite1;>tabstrc--recurs-tabbuff_read--815_1
dataread1;;tabstrc--recurs-tabbuff_read--815_1

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--815_1
goto;>tabstrc--recurs-checkno--815_1
null;;tabstrc--recurs-checkyes--815_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_2
dataread1;;tabstrc--recurs-tabbuff--815_2
datawrite1;>tabstrc--recurs-tabbuff_read--815_2
dataread1;;tabstrc--recurs-tabbuff_read--815_2

setreg2;:x


gotoif;>tabstrc--recurs-checkyes--815_2
goto;>tabstrc--recurs-checkno--815_2
null;;tabstrc--recurs-checkyes--815_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_3
dataread1;;tabstrc--recurs-tabbuff--815_3
datawrite1;>tabstrc--recurs-tabbuff_read--815_3
dataread1;;tabstrc--recurs-tabbuff_read--815_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--815_3
goto;>tabstrc--recurs-checkno--815_3
null;;tabstrc--recurs-checkyes--815_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--815
setreg2;+
add
datawrite1;>tabstrc--adrbuff--815

setreg1;>tabstrc--adrbuff--815

datawrite1;>tabstrc--recurs-tabbuff--815_4
dataread1;;tabstrc--recurs-tabbuff--815_4
datawrite1;>tabstrc--recurs-tabbuff_read--815_4
dataread1;;tabstrc--recurs-tabbuff_read--815_4

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--815_4
goto;>tabstrc--recurs-checkno--815_4
null;;tabstrc--recurs-checkyes--815_4
##set flag########
setreg1;>tabstrc--outbuff--815
datawrite1;>tabstrc--recurs-flag--815_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--815_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--815_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--815
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional return
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-817
goto;>goto--jumper-817
s1pop1;;goto--branch-817
gotoreg1
null;;goto--jumper-817
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabstrc--adrbuff--819
null;;tabstrc--adrbuff--819
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--819
null;;tabstrc--outbuff--819
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_1
dataread1;;tabstrc--recurs-tabbuff--819_1
datawrite1;>tabstrc--recurs-tabbuff_read--819_1
dataread1;;tabstrc--recurs-tabbuff_read--819_1

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--819_1
goto;>tabstrc--recurs-checkno--819_1
null;;tabstrc--recurs-checkyes--819_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--819
setreg2;+
add
datawrite1;>tabstrc--adrbuff--819

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_2
dataread1;;tabstrc--recurs-tabbuff--819_2
datawrite1;>tabstrc--recurs-tabbuff_read--819_2
dataread1;;tabstrc--recurs-tabbuff_read--819_2

setreg2;:n


gotoif;>tabstrc--recurs-checkyes--819_2
goto;>tabstrc--recurs-checkno--819_2
null;;tabstrc--recurs-checkyes--819_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--819
setreg2;+
add
datawrite1;>tabstrc--adrbuff--819

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_3
dataread1;;tabstrc--recurs-tabbuff--819_3
datawrite1;>tabstrc--recurs-tabbuff_read--819_3
dataread1;;tabstrc--recurs-tabbuff_read--819_3

setreg2;:f


gotoif;>tabstrc--recurs-checkyes--819_3
goto;>tabstrc--recurs-checkno--819_3
null;;tabstrc--recurs-checkyes--819_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--819
setreg2;+
add
datawrite1;>tabstrc--adrbuff--819

setreg1;>tabstrc--adrbuff--819

datawrite1;>tabstrc--recurs-tabbuff--819_4
dataread1;;tabstrc--recurs-tabbuff--819_4
datawrite1;>tabstrc--recurs-tabbuff_read--819_4
dataread1;;tabstrc--recurs-tabbuff_read--819_4

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--819_4
goto;>tabstrc--recurs-checkno--819_4
null;;tabstrc--recurs-checkyes--819_4
##set flag########
setreg1;>tabstrc--outbuff--819
datawrite1;>tabstrc--recurs-flag--819_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--819_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_4
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_3
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_2
#recursionskip endpoint
null;;tabstrc--recurs-checkno--819_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--819
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>sys_shell_cmdflg
#conditional subroutine goto
dataread1;>sys_shell_cmdflg
dataread2;>@1
gotoif;>goto--branch-821
goto;>goto--jumper-821
setreg1;>goto--jumper-821;goto--branch-821
s1push1
goto;>sys_shell_info--label
null;;goto--jumper-821
#goto 
goto;>sys_shell_loop--label
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell_help--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:c
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:u
fopwri1;:i
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;::
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\n
#prline
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:b
fopwri1;:t
fopwri1;:v
fopwri1;:d
fopwri1;:i
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sys_shell_info--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#prline
fopwri1;:C
fopwri1;:P
fopwri1;:U
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:_
fopwri1;:G
fopwri1;:2
fopwri1;:x
fopwri1;:_
fopwri1;:9
fopwri1;:_
fopwri1;:r
fopwri1;:1
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:F
fopwri1;:X
fopwri1;::
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:G
fopwri1;:A
fopwri1;:\s
fopwri1;:v
fopwri1;:2
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:M
fopwri1;::
fopwri1;:\s
fopwri1;:3
fopwri1;:9
fopwri1;:.
fopwri1;:3
fopwri1;:6
fopwri1;:6
fopwri1;:\s
fopwri1;:K
fopwri1;:N
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#table width=85, height=1
null;;shell_entry_buffer--table
#tpad
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#label
null;;getentry--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_size
#label
null;;getentry_loop--label
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-896
gotoif;>keyprompt--loop-896
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_chbuff
#conditional goto
dataread1;>shell_entry_size
dataread2;>@0
gotoif;>goto--branch-898
goto;>goto--jumper-898
setreg1;>goto--jumper-898;goto--branch-898
goto;>shell_entry_skipnewline--label
null;;goto--jumper-898
#conditional subroutine goto
dataread1;>shell_entry_chbuff
dataread2;>:\n
gotoif;>goto--branch-899
goto;>goto--jumper-899
setreg1;>goto--jumper-899;goto--branch-899
s1push1
goto;>getentry_tobuff--label
null;;goto--jumper-899
#conditional return
dataread1;>shell_entry_chbuff
dataread2;>:\n
gotoif;>goto--branch-900
goto;>goto--jumper-900
s1pop1;;goto--branch-900
gotoreg1
null;;goto--jumper-900
#label
null;;shell_entry_skipnewline--label
#conditional goto
dataread1;>shell_entry_chbuff
dataread2;>:\n
gotoif;>goto--branch-903
goto;>goto--jumper-903
setreg1;>goto--jumper-903;goto--branch-903
goto;>getentry_loop--label
null;;goto--jumper-903
#conditional subroutine goto
dataread1;>shell_entry_chbuff
dataread2;>:\x
gotoif;>goto--branch-905
goto;>goto--jumper-905
setreg1;>goto--jumper-905;goto--branch-905
s1push1
goto;>getentry_backone--label
null;;goto--jumper-905
#conditional goto
dataread1;>shell_entry_chbuff
dataread2;>:\x
gotoif;>goto--branch-906
goto;>goto--jumper-906
setreg1;>goto--jumper-906;goto--branch-906
goto;>getentry_loop--label
null;;goto--jumper-906
#conditional goto
dataread1;>shell_entry_size
dataread2;>shell_entry_max
gotoif;>goto--branch-909
goto;>goto--jumper-909
setreg1;>goto--jumper-909;goto--branch-909
goto;>getentry_loop--label
null;;goto--jumper-909
#Dump (character)
dataread1;>shell_entry_chbuff
iowrite1;>io.ttywr
#add (2op math)
dataread1;>shell_entry_size
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_size
#get(1) (may be used with set, or asm code)
dataread1;>shell_entry_chbuff
#stack push (uses stack 2)
s2push1
#goto 
goto;>getentry_loop--label
#label
null;;getentry_backone--label
#conditional return
dataread1;>shell_entry_size
dataread2;>@0
gotoif;>goto--branch-920
goto;>goto--jumper-920
s1pop1;;goto--branch-920
gotoreg1
null;;goto--jumper-920
#Dump (character)
dataread1;>:\x
iowrite1;>io.ttywr
#stack pop (uses stack 2)
s2pop1
#subtract (2op math)
dataread1;>shell_entry_size
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_size
#return from subroutine.
s1pop1
gotoreg1
#label
null;;getentry_tobuff--label
#stack reverse (uses stack 2)
s2reverse
#subtract (2op math)
dataread1;>shell_entry_size
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_itersize
#add (2op math)
dataread1;>shell_entry_size
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_zeroit
#Upward range iterator
dataread1;>@0
datawrite1;>getentry_tobuff_iter
setreg1;>uiter-retpos-934;uiter-loopback-934
s1push1
goto;>getentry_tobuff_loop--label
dataread1;>getentry_tobuff_iter;uiter-retpos-934
setreg2;10x1
add
datawrite1;>getentry_tobuff_iter
dataread2;>shell_entry_itersize
gotoifless;>uiter-loopback-934
gotoif;>uiter-loopback-934

#Upward range iterator
dataread1;>shell_entry_size
datawrite1;>getentry_pad_iter
setreg1;>uiter-retpos-935;uiter-loopback-935
s1push1
goto;>getentry_pad--label
dataread1;>getentry_pad_iter;uiter-retpos-935
setreg2;10x1
add
datawrite1;>getentry_pad_iter
dataread2;>shell_entry_zeroit
gotoifless;>uiter-loopback-935
gotoif;>uiter-loopback-935

#conditional return
dataread1;>shell_entry_clearbuffer
dataread2;>@0
gotoif;>goto--branch-936
goto;>goto--jumper-936
s1pop1;;goto--branch-936
gotoreg1
null;;goto--jumper-936
#Upward range iterator
dataread1;>shell_entry_zeroit
datawrite1;>getentry_pad_iter
setreg1;>uiter-retpos-937;uiter-loopback-937
s1push1
goto;>getentry_pad--label
dataread1;>getentry_pad_iter;uiter-retpos-937
setreg2;10x1
add
datawrite1;>getentry_pad_iter
dataread2;>shell_entry_max
gotoifless;>uiter-loopback-937
gotoif;>uiter-loopback-937

#return from subroutine.
s1pop1
gotoreg1
#label
null;;getentry_tobuff_loop--label
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_buff
#SSTNPL table write instruction.
setreg1;10x85
dataread2;>@0
mul
dataread2;>getentry_tobuff_iter
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabw--adrbuff--943
dataread1;>shell_entry_buff
datawrite1;;tabw--adrbuff--943
#return from subroutine.
s1pop1
gotoreg1
#label
null;;getentry_pad--label
#SSTNPL table write instruction.
setreg1;10x85
dataread2;>@0
mul
dataread2;>getentry_pad_iter
add
setreg2;10x1
add
setreg2;>shell_entry_buffer--table
add
datawrite1;>tabw--adrbuff--948
dataread1;>@0
datawrite1;;tabw--adrbuff--948
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
