#SSTNPL COMPILER v0.4.0
#header
head-rname=credits
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/showcase/credits/credits.stnp
null;10x31;@31
null;---------;*---------
null;10x30;@30
#Set SBTGA mode
dataread1;>@31
iowrite1;>ga.mode
#plotter fill
dataread1;>*---------
iowrite1;>plot.fill
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#val (used with set to change variable value during runtime.)
setreg1;10x-287
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#val (used with set to change variable value during runtime.)
setreg1;10x-80
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #18
setreg1;>image_offset1#SSTNPL Source Line: '18' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-21
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-21
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#val (used with set to change variable value during runtime.)
setreg1;10x-287
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #29
setreg1;>image_offset2#SSTNPL Source Line: '29' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-31
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-31
#val (used with set to change variable value during runtime.)
setreg1;10x-280
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#val (used with set to change variable value during runtime.)
setreg1;10x-220
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-38
s1push1
goto;>seg.init_pos--label
zerosize;;goto--jumper-38
#val (used with set to change variable value during runtime.)
setreg1;10x4
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.width
#val (used with set to change variable value during runtime.)
setreg1;10x12
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#val (used with set to change variable value during runtime.)
setreg1;10x6
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.hori_space
#val (used with set to change variable value during runtime.)
setreg1;++++++---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\s
fopwri1;:D
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:l
fopwri1;:o
fopwri1;:p
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:T
fopwri1;:e
fopwri1;:a
fopwri1;:m
fopwri1;:\s
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-53
s1push1
goto;>seg.output--label
zerosize;;goto--jumper-53
#val (used with set to change variable value during runtime.)
setreg1;+++++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:d
fopwri1;:\s
fopwri1;:D
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:l
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:\m
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\m
fopwri1;:\s
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:h
fopwri1;:i
fopwri1;:c
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:\m
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\m
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:\m
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:i
fopwri1;:l
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:R
fopwri1;:e
fopwri1;:s
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:J
fopwri1;:A
fopwri1;:V
fopwri1;:A
fopwri1;:\s
fopwri1;:G
fopwri1;:u
fopwri1;:r
fopwri1;:u
fopwri1;:\m
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\m
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\m
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:K
fopwri1;:r
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:o
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\m
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:\m
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:W
fopwri1;:o
fopwri1;:l
fopwri1;:f
fopwri1;:S
fopwri1;:k
fopwri1;:i
fopwri1;:n
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\m
fopwri1;:\s
fopwri1;:s
fopwri1;:y
fopwri1;:s
fopwri1;:t
fopwri1;:e
fopwri1;:m
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:i
fopwri1;:g
fopwri1;:n
fopwri1;:\m
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:e
fopwri1;:e
fopwri1;:k
fopwri1;:e
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:.
fopwri1;:m
fopwri1;:d
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:w
fopwri1;:e
fopwri1;:s
fopwri1;:o
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:p
fopwri1;:e
fopwri1;:o
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:w
fopwri1;:h
fopwri1;:o
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:k
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:d
fopwri1;:a
fopwri1;:y
fopwri1;:.
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-73
s1push1
goto;>seg.output--label
zerosize;;goto--jumper-73
#val (used with set to change variable value during runtime.)
setreg1;---++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-79
s1push1
goto;>seg.output--label
zerosize;;goto--jumper-79
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-81
gotoif;>keyprompt--loop-81
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#module include: line 86: plrle_noalpha as pl
includeas;plrle_noalpha,pl
#module include: line 87: segment as seg
includeas;segment,seg
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #88
include;showcase+media+3dletters.tas0;image_offset1#SSTNPL Source Line: '88' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #89
include;showcase+media+sstnpl_banner.tas0;image_offset2#SSTNPL Source Line: '89' 
#END OF FILE
