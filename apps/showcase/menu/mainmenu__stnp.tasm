#SSTNPL COMPILER v0.3.0
#header
head-rname=mainmenu
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/showcase/menu/mainmenu.stnp
null;+00+00+++;*+00+00+++
null;10x-121;@-121
null;10x243;@243
null;10x10;@10
null;-------++;*-------++
null;0;KBuff
null;:q;:q
null;:Q;:Q
null;:s;:s
null;:S;:S
null;:c;:c
null;:C;:C
null;10x0;@0
#plotter fill
dataread1;>*+00+00+++
iowrite1;>plot.fill
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@243
iowrite1;>plot.width
#plotter height
dataread1;>@10
iowrite1;>plot.height
#plotter draw line
dataread1;>*-------++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#val (used with set to change variable value during runtime.)
setreg1;+++++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x-117
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#val (used with set to change variable value during runtime.)
setreg1;10x-119
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-17
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-17
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.width
#val (used with set to change variable value during runtime.)
setreg1;10x7
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#val (used with set to change variable value during runtime.)
setreg1;10x8
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.hori_space
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:o
fopwri1;:w
fopwri1;:c
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:M
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-29
s1push1
goto;>seg.output--label
null;;goto--jumper-29
#val (used with set to change variable value during runtime.)
setreg1;---------
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x-90
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-36
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-36
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:<
fopwri1;:q
fopwri1;:>
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:<
fopwri1;:s
fopwri1;:>
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:l
fopwri1;:a
fopwri1;:s
fopwri1;:h
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:<
fopwri1;:c
fopwri1;:>
fopwri1;:\s
fopwri1;:P
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:l
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-41
s1push1
goto;>seg.output--label
null;;goto--jumper-41
#label
null;;Main--label
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-46
gotoif;>keyprompt--loop-46
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>KBuff
#conditional stop
dataread1;>KBuff
dataread2;>:q
gotoif;>goto--branch-48
goto;>goto--jumper-48
stop;;goto--branch-48

null;;goto--jumper-48
#conditional stop
dataread1;>KBuff
dataread2;>:Q
gotoif;>goto--branch-49
goto;>goto--jumper-49
stop;;goto--branch-49

null;;goto--jumper-49
#conditional goto
dataread1;>KBuff
dataread2;>:s
gotoif;>goto--branch-50
goto;>goto--jumper-50
setreg1;>goto--jumper-50;goto--branch-50
goto;>DEMO_splash--label
null;;goto--jumper-50
#conditional goto
dataread1;>KBuff
dataread2;>:S
gotoif;>goto--branch-51
goto;>goto--jumper-51
setreg1;>goto--jumper-51;goto--branch-51
goto;>DEMO_splash--label
null;;goto--jumper-51
#conditional goto
dataread1;>KBuff
dataread2;>:c
gotoif;>goto--branch-52
goto;>goto--jumper-52
setreg1;>goto--jumper-52;goto--branch-52
goto;>DEMO_color--label
null;;goto--jumper-52
#conditional goto
dataread1;>KBuff
dataread2;>:C
gotoif;>goto--branch-53
goto;>goto--jumper-53
setreg1;>goto--jumper-53;goto--branch-53
goto;>DEMO_color--label
null;;goto--jumper-53
#goto 
goto;>Main--label
#label
null;;DEMO_splash--label
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#prline
fopwri1;:C
fopwri1;:R
fopwri1;:A
fopwri1;:S
fopwri1;:H
fopwri1;:!
fopwri1;:\s
fopwri1;:x
fopwri1;:.
fopwri1;:x
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;::
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:m
fopwri1;:.
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:?
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-62
gotoif;>keyprompt--loop-62
#stop (shutdown vm)
stop
#label
null;;DEMO_color--label
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:l
fopwri1;:o
fopwri1;:r
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#prline
fopwri1;:C
fopwri1;:R
fopwri1;:A
fopwri1;:S
fopwri1;:H
fopwri1;:!
fopwri1;:\s
fopwri1;:x
fopwri1;:.
fopwri1;:x
fopwri1;:\n
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;::
fopwri1;:\s
fopwri1;:C
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:P
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:l
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:g
fopwri1;:r
fopwri1;:a
fopwri1;:m
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-71
gotoif;>keyprompt--loop-71
#stop (shutdown vm)
stop
#module include: line 74: segment as seg
includeas;segment,seg
#END OF FILE
