#SSTNPL COMPILER v0.3.0
#header
head-rname=color
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/showcase/color/color.stnp
null;10x30;@30
null;10x-121;xpos
null;10x-121;ypos
null;10x-9841;color
null;10x2;@2
null;10x6;@6
null;10x-121;@-121
null;10x9841;@9841
null;10x121;@121
null;10x3;@3
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#get(1) (may be used with set, or asm code)
dataread1;>color
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #9
iowrite1;>plot.color#SSTNPL Source Line: '9' 
#plotter width
dataread1;>@2
iowrite1;>plot.width
#plotter height
dataread1;>@6
iowrite1;>plot.height
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#val (used with set to change variable value during runtime.)
setreg1;+++++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x-117
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#val (used with set to change variable value during runtime.)
setreg1;10x-119
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-25
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-25
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.width
#val (used with set to change variable value during runtime.)
setreg1;10x7
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#val (used with set to change variable value during runtime.)
setreg1;10x8
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.hori_space
#label
null;;main--label
#plotter draw rect
iowrite1;>plot.rect
#conditional goto
dataread1;>color
dataread2;>@9841
gotoif;>goto--branch-41
goto;>goto--jumper-41
setreg1;>goto--jumper-41;goto--branch-41
goto;>end--label
null;;goto--jumper-41
#conditional subroutine goto
dataread1;>xpos
dataread2;>@121
gotoif;>goto--branch-45
goto;>goto--jumper-45
setreg1;>goto--jumper-45;goto--branch-45
s1push1
goto;>rollover--label
null;;goto--jumper-45
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #47
setreg2;10x1#SSTNPL Source Line: '47' 
#get(1) (may be used with set, or asm code)
dataread1;>xpos
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #49
add#SSTNPL Source Line: '49' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #50
iowrite1;>plot.x1#SSTNPL Source Line: '50' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xpos
#get(1) (may be used with set, or asm code)
dataread1;>color
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #54
add#SSTNPL Source Line: '54' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #55
iowrite1;>plot.color#SSTNPL Source Line: '55' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>color
#goto 
goto;>main--label
#label
null;;rollover--label
#val (used with set to change variable value during runtime.)
setreg1;10x-122
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xpos
#add (2op math)
dataread1;>ypos
dataread2;>@3
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ypos
#plotter y pos 1
dataread1;>ypos
iowrite1;>plot.y1
#return from subroutine.
s1pop1
gotoreg1
#label
null;;end--label
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:o
fopwri1;:w
fopwri1;:c
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:P
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:l
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-72
s1push1
goto;>seg.output--label
null;;goto--jumper-72
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-73
gotoif;>keyprompt--loop-73
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#module include: line 79: segment as seg
includeas;segment,seg
#END OF FILE
