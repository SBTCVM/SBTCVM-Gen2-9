#SSTNPL COMPILER v0.3.0
#header
head-rname=splash
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/showcase/splash/splash.stnp
null;10x30;@30
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#val (used with set to change variable value during runtime.)
setreg1;---------
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x-115
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-13
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-13
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #15
setreg1;>image_offset1#SSTNPL Source Line: '15' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-18
s1push1
goto;>pl.decode--label
null;;goto--jumper-18
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:o
fopwri1;:w
fopwri1;:c
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-23
s1push1
goto;>seg.output--label
null;;goto--jumper-23
#val (used with set to change variable value during runtime.)
setreg1;10x4
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#val (used with set to change variable value during runtime.)
setreg1;10x10
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:V
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:1
fopwri1;:.
fopwri1;:0
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:F
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-33
s1push1
goto;>seg.output--label
null;;goto--jumper-33
#val (used with set to change variable value during runtime.)
setreg1;+++++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x10
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-42
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-42
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:B
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:C
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:V
fopwri1;:i
fopwri1;:r
fopwri1;:t
fopwri1;:u
fopwri1;:a
fopwri1;:l
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:M
fopwri1;:a
fopwri1;:c
fopwri1;:h
fopwri1;:i
fopwri1;:n
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-54
s1push1
goto;>seg.output--label
null;;goto--jumper-54
#val (used with set to change variable value during runtime.)
setreg1;10x110
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-60
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-60
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.width
#val (used with set to change variable value during runtime.)
setreg1;10x7
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.hori_space
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:.
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-70
s1push1
goto;>seg.output--label
null;;goto--jumper-70
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-72
gotoif;>keyprompt--loop-72
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#module include: line 78: plrle_noalpha as pl
includeas;plrle_noalpha,pl
#module include: line 79: segment as seg
includeas;segment,seg
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #80
include;showcase+media+bootsplash.tas0;image_offset1#SSTNPL Source Line: '80' 
#END OF FILE
