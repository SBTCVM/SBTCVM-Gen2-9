#SSTNPL COMPILER v0.4.0
#header
head-rname=credits
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/bench/bench/credits.stnp
null;:v;:v
null;:0;$common.DESK_MAIN_VERS
null;:.;:.
null;:1;$common.DESK_SUB_VERS
null;:1;$common.DESK_MIN_VERS
#goto (extra code stores away return address.)
setreg1;>goto--jumper-4
s1push1
goto;>scene_1--label
null;;goto--jumper-4
#goto (extra code stores away return address.)
setreg1;>goto--jumper-5
s1push1
goto;>refresh--label
null;;goto--jumper-5
#bprinttail1n
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:B
fopwri1;:E
fopwri1;:N
fopwri1;:C
fopwri1;:H
fopwri1;:\s
fopset1;>io.ttywr
#buffer 1 tail write
dataread1;>:v
iowrite1;>buffer.1.write.tail
#buffer 1 tail write
dataread1;>$common.DESK_MAIN_VERS
iowrite1;>buffer.1.write.tail
#buffer 1 tail write
dataread1;>:.
iowrite1;>buffer.1.write.tail
#buffer 1 tail write
dataread1;>$common.DESK_SUB_VERS
iowrite1;>buffer.1.write.tail
#buffer 1 tail write
dataread1;>:.
iowrite1;>buffer.1.write.tail
#buffer 1 tail write
dataread1;>$common.DESK_MIN_VERS
iowrite1;>buffer.1.write.tail
#goto (extra code stores away return address.)
setreg1;>goto--jumper-16
s1push1
goto;>seg.output--label
null;;goto--jumper-16
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-18
setreg1;0;waitcy-loopback-18
setreg2;10x1
add
datawrite1;>waitcy-loopback-18
setreg2;10x5000
gotoifless;>waitcy-loopback-18

#goto (extra code stores away return address.)
setreg1;>goto--jumper-19
s1push1
goto;>scene_2--label
null;;goto--jumper-19
#goto (extra code stores away return address.)
setreg1;>goto--jumper-20
s1push1
goto;>refresh--label
null;;goto--jumper-20
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-25
s1push1
goto;>seg.output--label
null;;goto--jumper-25
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-27
setreg1;0;waitcy-loopback-27
setreg2;10x1
add
datawrite1;>waitcy-loopback-27
setreg2;10x5000
gotoifless;>waitcy-loopback-27

#goto (extra code stores away return address.)
setreg1;>goto--jumper-28
s1push1
goto;>scene_3--label
null;;goto--jumper-28
#goto (extra code stores away return address.)
setreg1;>goto--jumper-29
s1push1
goto;>refresh--label
null;;goto--jumper-29
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:\s
fopwri1;:A
fopwri1;:r
fopwri1;:t
fopwri1;:w
fopwri1;:o
fopwri1;:r
fopwri1;:k
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-33
s1push1
goto;>seg.output--label
null;;goto--jumper-33
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-35
setreg1;0;waitcy-loopback-35
setreg2;10x1
add
datawrite1;>waitcy-loopback-35
setreg2;10x5000
gotoifless;>waitcy-loopback-35

#goto (extra code stores away return address.)
setreg1;>goto--jumper-36
s1push1
goto;>scene_4--label
null;;goto--jumper-36
#goto (extra code stores away return address.)
setreg1;>goto--jumper-37
s1push1
goto;>refresh--label
null;;goto--jumper-37
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:'
fopwri1;:s
fopwri1;:e
fopwri1;:g
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:'
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:u
fopwri1;:l
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:p
fopwri1;:l
fopwri1;:a
fopwri1;:y
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:.
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:\s
fopwri1;:P
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:s
fopwri1;:t
fopwri1;:a
fopwri1;:k
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:l
fopwri1;:y
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-44
s1push1
goto;>seg.output--label
null;;goto--jumper-44
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-46
setreg1;0;waitcy-loopback-46
setreg2;10x1
add
datawrite1;>waitcy-loopback-46
setreg2;10x5000
gotoifless;>waitcy-loopback-46

#goto (extra code stores away return address.)
setreg1;>goto--jumper-47
s1push1
goto;>scene_5--label
null;;goto--jumper-47
#goto (extra code stores away return address.)
setreg1;>goto--jumper-48
s1push1
goto;>refresh--label
null;;goto--jumper-48
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:'
fopwri1;:p
fopwri1;:l
fopwri1;:r
fopwri1;:l
fopwri1;:e
fopwri1;:'
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:u
fopwri1;:l
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:a
fopwri1;:w
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:c
fopwri1;:k
fopwri1;:r
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:.
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:d
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-56
s1push1
goto;>seg.output--label
null;;goto--jumper-56
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-58
setreg1;0;waitcy-loopback-58
setreg2;10x1
add
datawrite1;>waitcy-loopback-58
setreg2;10x5000
gotoifless;>waitcy-loopback-58

#goto (extra code stores away return address.)
setreg1;>goto--jumper-59
s1push1
goto;>scene_6--label
null;;goto--jumper-59
#goto (extra code stores away return address.)
setreg1;>goto--jumper-60
s1push1
goto;>refresh--label
null;;goto--jumper-60
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:E
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:O
fopwri1;:f
fopwri1;:\s
fopwri1;:C
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:n
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:S
fopwri1;:T
fopwri1;:N
fopwri1;:P
fopwri1;:L
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:n
fopwri1;:c
fopwri1;:h
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:w
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:T
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:k
fopwri1;:s
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:y
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:B
fopwri1;:E
fopwri1;:N
fopwri1;:C
fopwri1;:H
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\n
fopset1;>io.ttywr
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:+
fopwri1;:0
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-73
s1push1
goto;>seg.output--label
null;;goto--jumper-73
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-75
setreg1;0;waitcy-loopback-75
setreg2;10x1
add
datawrite1;>waitcy-loopback-75
setreg2;10x5000
gotoifless;>waitcy-loopback-75

#prline
fopwri1;:S
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:k
fopwri1;:t
fopwri1;:o
fopwri1;:p
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:k
fopwri1;:t
fopwri1;:o
fopwri1;:p
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:\n
fopset1;>io.ttywr
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;:!
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:s
fopwri1;:k
fopwri1;:t
fopwri1;:o
fopwri1;:p
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:!
fopwri1;:\n
#stop (shutdown vm)
stop
#label
null;;refresh--label
#val (used with set to change variable value during runtime.)
setreg1;+++++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x27
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#val (used with set to change variable value during runtime.)
setreg1;10x-121
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#goto (extra code stores away return address.)
setreg1;>goto--jumper-97
s1push1
goto;>pl.decode--label
null;;goto--jumper-97
#buffer 1 reset
iowrite1;>buffer.1.reset
#val (used with set to change variable value during runtime.)
setreg1;10x-119
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-107
s1push1
goto;>seg.init_pos--label
null;;goto--jumper-107
#return from subroutine.
s1pop1
gotoreg1
#label
null;;scene_1--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #112
setreg1;>IMG_BG_1#SSTNPL Source Line: '112' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#return from subroutine.
s1pop1
gotoreg1
#label
null;;scene_2--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #117
setreg1;>IMG_BG_2#SSTNPL Source Line: '117' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#return from subroutine.
s1pop1
gotoreg1
#label
null;;scene_3--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #122
setreg1;>IMG_BG_3#SSTNPL Source Line: '122' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#return from subroutine.
s1pop1
gotoreg1
#label
null;;scene_4--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #127
setreg1;>IMG_BG_4#SSTNPL Source Line: '127' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#return from subroutine.
s1pop1
gotoreg1
#label
null;;scene_5--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #132
setreg1;>IMG_BG_5#SSTNPL Source Line: '132' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#return from subroutine.
s1pop1
gotoreg1
#label
null;;scene_6--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #137
setreg1;>IMG_BG_6#SSTNPL Source Line: '137' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#return from subroutine.
s1pop1
gotoreg1
#module include: line 141: bench/lib/common as common
includeas;bench/lib/common,common
#module include: line 142: segment as seg
includeas;segment,seg
#module include: line 143: plrle_noalpha as pl
includeas;plrle_noalpha,pl
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #144
include;bench/media/credits_bg.tas0;IMG_BG_1#SSTNPL Source Line: '144' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #145
include;bench/media/credits_bg_2.tas0;IMG_BG_2#SSTNPL Source Line: '145' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #146
include;bench/media/credits_bg_3.tas0;IMG_BG_3#SSTNPL Source Line: '146' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #147
include;bench/media/credits_bg_4.tas0;IMG_BG_4#SSTNPL Source Line: '147' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #148
include;bench/media/credits_bg_5.tas0;IMG_BG_5#SSTNPL Source Line: '148' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #149
include;bench/media/credits_bg_6.tas0;IMG_BG_6#SSTNPL Source Line: '149' 
#END OF FILE
