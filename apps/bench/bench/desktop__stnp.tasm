#SSTNPL COMPILER v0.3.0
#header
head-rname=desktop
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/bench/bench/desktop.stnp
null;0;xbuff
null;0;ybuff
null;10x1;actflg
null;0;btnbuff
null;10x1;@1
null;10x0;@0
null;10x-90;@-90
null;10x-63;@-63
null;10x-120;@-120
null;10x-93;@-93
null;10x-58;@-58
null;10x-27;@-27
null;10x30;@30
#label
null;;main--label
#conditional subroutine goto
dataread1;>actflg
dataread2;>@1
gotoif;>goto--branch-14
goto;>goto--jumper-14
setreg1;>goto--jumper-14;goto--branch-14
s1push1
goto;>draw_desktop--label
null;;goto--jumper-14
#conditional set
dataread1;>actflg
dataread2;>@1
gotoif;>goto--branch-15
goto;>goto--jumper-15
dataread1;>@0;goto--branch-15
datawrite1;>actflg
null;;goto--jumper-15
#label
null;;main_loop--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #19
ioread1;>mouse.button#SSTNPL Source Line: '19' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional goto
dataread1;>btnbuff
dataread2;>@1
gotoif;>goto--jumper-22
goto;>goto--branch-22
setreg1;>goto--jumper-22;goto--branch-22
goto;>main_loop--label
null;;goto--jumper-22
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #26
ioread1;>mouse.lockx#SSTNPL Source Line: '26' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #28
ioread1;>mouse.locky#SSTNPL Source Line: '28' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff
#conditional goto
dataread1;>ybuff
dataread2;>@-90
gotoifmore;>goto--halfstep-30
gotoif;>goto--halfstep-30
goto;>goto--branch-30
dataread1;>ybuff;goto--halfstep-30
dataread2;>@-63
gotoifless;>goto--jumper-30
gotoif;>goto--jumper-30
goto;>goto--branch-30
setreg1;>goto--jumper-30;goto--branch-30
goto;>row1_skip--label
null;;goto--jumper-30
#conditional subroutine goto
dataread1;>xbuff
dataread2;>@-120
gotoifmore;>goto--halfstep-33
gotoif;>goto--halfstep-33
goto;>goto--jumper-33
dataread1;>xbuff;goto--halfstep-33
dataread2;>@-93
gotoifless;>goto--branch-33
gotoif;>goto--branch-33
goto;>goto--jumper-33
setreg1;>goto--jumper-33;goto--branch-33
s1push1
goto;>info--label
null;;goto--jumper-33
#label
null;;row1_skip--label
#conditional goto
dataread1;>ybuff
dataread2;>@-58
gotoifmore;>goto--halfstep-36
gotoif;>goto--halfstep-36
goto;>goto--branch-36
dataread1;>ybuff;goto--halfstep-36
dataread2;>@-27
gotoifless;>goto--jumper-36
gotoif;>goto--jumper-36
goto;>goto--branch-36
setreg1;>goto--jumper-36;goto--branch-36
goto;>row2_skip--label
null;;goto--jumper-36
#conditional subroutine goto
dataread1;>xbuff
dataread2;>@-120
gotoifmore;>goto--halfstep-39
gotoif;>goto--halfstep-39
goto;>goto--jumper-39
dataread1;>xbuff;goto--halfstep-39
dataread2;>@-93
gotoifless;>goto--branch-39
gotoif;>goto--branch-39
goto;>goto--jumper-39
setreg1;>goto--jumper-39;goto--branch-39
s1push1
goto;>dos--label
null;;goto--jumper-39
#label
null;;row2_skip--label
#goto 
goto;>main--label
#label
null;;info--label
#prline
fopwri1;:S
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:\n
fopset1;>io.ttywr
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;:!
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:!
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;dos--label
#prline
fopwri1;:S
fopwri1;:t
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:s
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:-
fopwri1;:1
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:s
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:\n
fopset1;>io.ttywr
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;:!
fopwri1;:\s
fopwri1;:d
fopwri1;:o
fopwri1;:s
fopwri1;:.
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:!
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;draw_desktop--label
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#goto (extra code stores away return address.)
setreg1;>goto--jumper-64
s1push1
goto;>common.ui_base_draw--label
null;;goto--jumper-64
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#val (used with set to change variable value during runtime.)
setreg1;10x-120
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#val (used with set to change variable value during runtime.)
setreg1;10x-90
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #79
setreg1;>ICON_info#SSTNPL Source Line: '79' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-81
s1push1
goto;>pl.decode--label
null;;goto--jumper-81
#val (used with set to change variable value during runtime.)
setreg1;10x-58
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #86
setreg1;>ICON_dos#SSTNPL Source Line: '86' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-88
s1push1
goto;>pl.decode--label
null;;goto--jumper-88
#return from subroutine.
s1pop1
gotoreg1
#module include: line 94: bench+lib+common as common
includeas;bench+lib+common,common
#module include: line 95: plrle as pl
includeas;plrle,pl
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #96
include;bench+media+info.tas0;ICON_info#SSTNPL Source Line: '96' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #97
include;bench+media+dos.tas0;ICON_dos#SSTNPL Source Line: '97' 
#END OF FILE
