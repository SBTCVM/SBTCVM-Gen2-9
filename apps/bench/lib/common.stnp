#SBTCVM DESK common functions

const DESK_MAIN_VERS=:0
const DESK_SUB_VERS=:2
const DESK_MIN_VERS=:0
const COLOR_desktop=000000+++

const COLOR_desktop0=0-+0-++++
const COLOR_desktop1=00-00-+++
const COLOR_desktop2=000000+++
const COLOR_desktop3=00+00++++
const COLOR_desktop4=0+-0+-+++

const COLOR_hud=+++++++++
const COLOR_hudshadow1=+00+00+00

label ui_base_draw
	#drawfill $COLOR_desktop2
	drawx1 @-121
	
	drawwidth @243
	#drawheight @46
	
	#drawy1 @-99
	#drawcolor $COLOR_desktop0
	#drawrect
	
	#drawy1 @-55
	#drawcolor $COLOR_desktop1
	#drawrect
	
	#drawy1 @33
	#drawcolor $COLOR_desktop3
	#drawrect
	
	#drawy1 @77
	#drawcolor $COLOR_desktop4
	#drawrect
	drawblit @13
	drawcolor $COLOR_hud
		#drawx1 @-121
		drawy1 @-121
		#drawwidth @243
		drawheight @22
		drawrect
	drawcolor $COLOR_hudshadow1
		drawy1 @-99
		drawheight @3
		drawrect
	val @3
		set pl.pixx
		set pl.pixy
		
		val @-120
		set pl.posx
		set pl.posy
		asm setreg1;>ICON_logo
		set pl.offset
		gsub pl.decode
		
return

label tune
#soundchip param setup
val @220
asm iowrite1;>snd.1.freq
val @277
asm iowrite1;>snd.2.freq
val @330
asm iowrite1;>snd.3.freq
val @2
asm iowrite1;>snd.1.wave
asm iowrite1;>snd.2.wave
asm iowrite1;>snd.3.wave
val @5
asm iowrite1;>snd.1.vol
asm iowrite1;>snd.2.vol
asm iowrite1;>snd.3.vol
val @-1
asm iowrite1;>snd.1.pan
val @0
asm iowrite1;>snd.2.pan
val @1
asm iowrite1;>snd.3.pan
#play startup tune.
asm iowrite1;>snd.1.play
waitcy 1000
asm iowrite1;>snd.2.play
waitcy 1000
asm iowrite1;>snd.3.play
waitcy 8000

asm iowrite1;>snd.1.stop
asm iowrite1;>snd.2.stop
asm iowrite1;>snd.3.stop
return



label print_version
chardump :v
chardump $DESK_MAIN_VERS
chardump :.
chardump $DESK_SUB_VERS
chardump :.
chardump $DESK_MIN_VERS
return

var mouse_color=*---------
var mouse_line=*+++++++++

var mx=0
var my=0
var locktmp=0

label mouse_cursor
	drawselect @-2
	drawblit @-1
	drawcolor mouse_color
	###X###
	asm ioread1;>mouse.realx
	asm iowrite1;>plot.x1
	asm iowrite1;>plot.x2
	
	asm setreg2;10x6
	asm add2
	asm iowrite2;>plot.x3
	set2 mx
	###Y###
	asm ioread1;>mouse.realy
	asm iowrite1;>plot.y1
	asm setreg2;10x8
	asm add2
	
	asm iowrite2;>plot.y2
	
	
	asm setreg2;10x6
	asm add2
	
	asm iowrite2;>plot.y3
	set2 my
	drawtri
	
	drawcolor mouse_line
	drawline
	
	drawx2 mx
	drawy2 my
	drawline
	
	drawcopy @0
	drawselect @0
	gsub flock
return

label flock
asm iowrite1;>plot.fhalt
label drawLOCK
		asm ioread1;>plot.buffer
		set locktmp
		ifmore locktmp,@0 goto drawLOCK
return

var btnbuff=0

label mouse_wait
	drawselect @0
	drawcopy @-1
label mouse_wait_loop
	gsub mouse_cursor
	asm ioread1;>mouse.button
	set btnbuff
	ifnot btnbuff,@1 goto mouse_wait_loop
return
	

include plrle_noalpha as pl
asm include;bench+media+logo.tas0;ICON_logo
