#SSTNPL COMPILER v0.4.0
#header
head-rname=yn_dialog
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "apps/bench/lib/yn_dialog.stnp
null;+++++++++;dialog_color
null;0;answer
null;0;btnbuff
null;0;xbuff
null;0;ybuff
null;10x-1;@-1
null;10x-80;@-80
null;10x-40;@-40
null;10x161;@161
null;10x81;@81
null;10x0;@0
null;10x21;@21
null;10x-75;@-75
null;10x-39;@-39
null;10x39;@39
null;10x75;@75
#label
zerosize;;main--label
#plotter buffer select
dataread1;>@-1
iowrite1;>plot.select
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>answer
#plotter x pos 1
dataread1;>@-80
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-40
iowrite1;>plot.y1
#plotter width
dataread1;>@161
iowrite1;>plot.width
#plotter height
dataread1;>@81
iowrite1;>plot.height
#plotter draw line
dataread1;>dialog_color
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#val (used with set to change variable value during runtime.)
setreg1;---------
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x-78
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#val (used with set to change variable value during runtime.)
setreg1;10x-38
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-30-0
s1push1
goto;>seg.init_pos--label
zerosize;;goto--jumper-30-0
#val (used with set to change variable value during runtime.)
setreg1;10x4
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.width
#val (used with set to change variable value during runtime.)
setreg1;10x12
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#val (used with set to change variable value during runtime.)
setreg1;10x6
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.hori_space
#goto (extra code stores away return address.)
setreg1;>goto--jumper-40-0
s1push1
goto;>seg.output--label
zerosize;;goto--jumper-40-0
#plotter buffer copy
dataread1;>@0
iowrite1;>plot.copy
#val (used with set to change variable value during runtime.)
setreg1;10x3
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.pixy
#val (used with set to change variable value during runtime.)
setreg1;10x-75
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #51-0
setreg1;>btn_yes#SSTNPL Source Line: '51-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-53-0
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-53-0
#val (used with set to change variable value during runtime.)
setreg1;10x39
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posx
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #60-0
setreg1;>btn_no#SSTNPL Source Line: '60-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>pl.offset
#goto (extra code stores away return address.)
setreg1;>goto--jumper-62-0
s1push1
goto;>pl.decode--label
zerosize;;goto--jumper-62-0
#label
zerosize;;_main_loop--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-66-0
s1push1
goto;>common.mouse_cursor--label
zerosize;;goto--jumper-66-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #67-0
ioread1;>mouse.button#SSTNPL Source Line: '67-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional flow control begin
dataread1;>btnbuff
dataread2;>@0
gotoifmore;>goto--branch-69-0
goto;>goto--jumper-69-0
goto;>flow--con-x-1;goto--branch-69-0

zerosize;;goto--jumper-69-0
zerosize;;flow--con-x-1--start
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #70-0
ioread1;>mouse.lockx#SSTNPL Source Line: '70-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xbuff
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #72-0
ioread1;>mouse.locky#SSTNPL Source Line: '72-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ybuff
#conditional flow control begin
dataread1;>ybuff
dataread2;>@0
gotoifmore;>goto--halfstep-75-0
gotoif;>goto--halfstep-75-0
goto;>goto--branch-75-0
dataread1;>ybuff;goto--halfstep-75-0
dataread2;>@21
gotoifless;>goto--jumper-75-0
gotoif;>goto--jumper-75-0
goto;>goto--branch-75-0
goto;>flow--con-x-2;goto--branch-75-0

zerosize;;goto--jumper-75-0
zerosize;;flow--con-x-2--start
#conditional flow control begin
dataread1;>xbuff
dataread2;>@-75
gotoifmore;>goto--halfstep-76-0
gotoif;>goto--halfstep-76-0
goto;>goto--branch-76-0
dataread1;>xbuff;goto--halfstep-76-0
dataread2;>@-39
gotoifless;>goto--jumper-76-0
gotoif;>goto--jumper-76-0
goto;>goto--branch-76-0
goto;>flow--con-x-3;goto--branch-76-0

zerosize;;goto--jumper-76-0
zerosize;;flow--con-x-3--start
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>answer
#return from subroutine.
s1pop1
gotoreg1
zerosize;;flow--con-x-3
#conditional flow control begin
dataread1;>xbuff
dataread2;>@39
gotoifmore;>goto--halfstep-81-0
gotoif;>goto--halfstep-81-0
goto;>goto--branch-81-0
dataread1;>xbuff;goto--halfstep-81-0
dataread2;>@75
gotoifless;>goto--jumper-81-0
gotoif;>goto--jumper-81-0
goto;>goto--branch-81-0
goto;>flow--con-x-4;goto--branch-81-0

zerosize;;goto--jumper-81-0
zerosize;;flow--con-x-4--start
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>answer
#return from subroutine.
s1pop1
gotoreg1
zerosize;;flow--con-x-4
zerosize;;flow--con-x-2
zerosize;;flow--con-x-1
#goto 
goto;>_main_loop--label
#module include: line 90-0: plrle_noalpha as pl
includeas;plrle_noalpha,pl
#module include: line 91-0: segment as seg
includeas;segment,seg
#module include: line 92-0: bench/lib/common as common
includeas;bench/lib/common,common
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #94-0
include;bench/media/diag_yes.tas0;btn_yes#SSTNPL Source Line: '94-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #95-0
include;bench/media/diag_no.tas0;btn_no#SSTNPL Source Line: '95-0' 
#END OF FILE
