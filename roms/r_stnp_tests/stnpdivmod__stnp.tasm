#SSTNPL COMPILER v0.2.0
#header
head-rname=stnpdivmod
head-nspin=stdnsp
fopset1;>io.ttywr
#stnp source file: (autogenerated from) "ROMS/r_stnp_tests/stnpdivmod.stnp
null;10x10;op1
null;10x4;op2
null;0;quot
null;0;remain
#prline
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#print
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:1
fopwri1;::
fopwri1;:\s
#Dump (decimal)
dataread1;>op1
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#print
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:2
fopwri1;::
fopwri1;:\s
#Dump (decimal)
dataread1;>op2
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#divide modulo (2op math)
dataread1;>op1
dataread2;>op2
divmod
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>remain
#set2 (used for asm, or get2)
datawrite2;>quot
#print
fopwri1;:q
fopwri1;:u
fopwri1;:o
fopwri1;:t
fopwri1;:i
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;::
fopwri1;:\s
#Dump (decimal)
dataread1;>quot
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#print
fopwri1;:r
fopwri1;:e
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;::
fopwri1;:\s
#Dump (decimal)
dataread1;>remain
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#END OF FILE
