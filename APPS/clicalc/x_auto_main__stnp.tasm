#SSTNPL COMPILER v0.2.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
#stnp source file: (autogenerated from) "APPS/clicalc/auto_main.stnp
null;0;gett_ch
null;0;gett_val
null;0;gett_cnt
null;0;gett_decv
null;0;gett_numb
null;0;gett_disp
null;0;v1buff
null;0;v2buff
null;0;resbuff
null;0;resbuff2
null;0;kb
null;:a;:a
null;:A;:A
null;:s;:s
null;:S;:S
null;:m;:m
null;:M;:M
null;:d;:d
null;:D;:D
null;:r;:r
null;:R;:R
null;:i;:i
null;:I;:I
null;:b;:b
null;:B;:B
null;:h;:h
null;:H;:H
null;:?;:?
null;:/;:/
null;:q;:q
null;:Q;:Q
null;10x0;@0
null;:\x;:\x
null;:0;:0
null;:);:)
null;:-;:-
null;10x-1;@-1
null;:_;:_
null;:n;:n
null;:N;:N
null;:+;:+
null;10x1;@1
null;:=;:=
null;:p;:p
null;:P;:P
null;:\n;:\n
null;10x3;@3
null;10x9;@9
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:V
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:1
fopwri1;:.
fopwri1;:0
fopwri1;:\n
#prline
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:'
fopwri1;:h
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:,
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:'
fopwri1;:?
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:f
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#label
null;;main--label
#print
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-24
gotoif;>keyprompt--loop-24
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#print newline
fopwri1;:\n
#conditional subroutine goto
dataread1;>kb
dataread2;>:a
gotoif;>goto--branch-27
goto;>goto--jumper-27
setreg1;>goto--jumper-27;goto--branch-27
s1push1
goto;>add--label
null;;goto--jumper-27
#conditional subroutine goto
dataread1;>kb
dataread2;>:A
gotoif;>goto--branch-28
goto;>goto--jumper-28
setreg1;>goto--jumper-28;goto--branch-28
s1push1
goto;>add--label
null;;goto--jumper-28
#conditional subroutine goto
dataread1;>kb
dataread2;>:s
gotoif;>goto--branch-29
goto;>goto--jumper-29
setreg1;>goto--jumper-29;goto--branch-29
s1push1
goto;>sub--label
null;;goto--jumper-29
#conditional subroutine goto
dataread1;>kb
dataread2;>:S
gotoif;>goto--branch-30
goto;>goto--jumper-30
setreg1;>goto--jumper-30;goto--branch-30
s1push1
goto;>sub--label
null;;goto--jumper-30
#conditional subroutine goto
dataread1;>kb
dataread2;>:m
gotoif;>goto--branch-31
goto;>goto--jumper-31
setreg1;>goto--jumper-31;goto--branch-31
s1push1
goto;>mul--label
null;;goto--jumper-31
#conditional subroutine goto
dataread1;>kb
dataread2;>:M
gotoif;>goto--branch-32
goto;>goto--jumper-32
setreg1;>goto--jumper-32;goto--branch-32
s1push1
goto;>mul--label
null;;goto--jumper-32
#conditional subroutine goto
dataread1;>kb
dataread2;>:d
gotoif;>goto--branch-33
goto;>goto--jumper-33
setreg1;>goto--jumper-33;goto--branch-33
s1push1
goto;>div--label
null;;goto--jumper-33
#conditional subroutine goto
dataread1;>kb
dataread2;>:D
gotoif;>goto--branch-34
goto;>goto--jumper-34
setreg1;>goto--jumper-34;goto--branch-34
s1push1
goto;>div--label
null;;goto--jumper-34
#conditional subroutine goto
dataread1;>kb
dataread2;>:r
gotoif;>goto--branch-35
goto;>goto--jumper-35
setreg1;>goto--jumper-35;goto--branch-35
s1push1
goto;>divm--label
null;;goto--jumper-35
#conditional subroutine goto
dataread1;>kb
dataread2;>:R
gotoif;>goto--branch-36
goto;>goto--jumper-36
setreg1;>goto--jumper-36;goto--branch-36
s1push1
goto;>divm--label
null;;goto--jumper-36
#conditional subroutine goto
dataread1;>kb
dataread2;>:i
gotoif;>goto--branch-37
goto;>goto--jumper-37
setreg1;>goto--jumper-37;goto--branch-37
s1push1
goto;>inv--label
null;;goto--jumper-37
#conditional subroutine goto
dataread1;>kb
dataread2;>:I
gotoif;>goto--branch-38
goto;>goto--jumper-38
setreg1;>goto--jumper-38;goto--branch-38
s1push1
goto;>inv--label
null;;goto--jumper-38
#conditional subroutine goto
dataread1;>kb
dataread2;>:b
gotoif;>goto--branch-39
goto;>goto--jumper-39
setreg1;>goto--jumper-39;goto--branch-39
s1push1
goto;>abso--label
null;;goto--jumper-39
#conditional subroutine goto
dataread1;>kb
dataread2;>:B
gotoif;>goto--branch-40
goto;>goto--jumper-40
setreg1;>goto--jumper-40;goto--branch-40
s1push1
goto;>abso--label
null;;goto--jumper-40
#conditional subroutine goto
dataread1;>kb
dataread2;>:h
gotoif;>goto--branch-41
goto;>goto--jumper-41
setreg1;>goto--jumper-41;goto--branch-41
s1push1
goto;>help--label
null;;goto--jumper-41
#conditional subroutine goto
dataread1;>kb
dataread2;>:H
gotoif;>goto--branch-42
goto;>goto--jumper-42
setreg1;>goto--jumper-42;goto--branch-42
s1push1
goto;>help--label
null;;goto--jumper-42
#conditional subroutine goto
dataread1;>kb
dataread2;>:?
gotoif;>goto--branch-43
goto;>goto--jumper-43
setreg1;>goto--jumper-43;goto--branch-43
s1push1
goto;>about--label
null;;goto--jumper-43
#conditional subroutine goto
dataread1;>kb
dataread2;>:/
gotoif;>goto--branch-44
goto;>goto--jumper-44
setreg1;>goto--jumper-44;goto--branch-44
s1push1
goto;>about--label
null;;goto--jumper-44
#conditional stop
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-45
goto;>goto--jumper-45
stop;;goto--branch-45

null;;goto--jumper-45
#conditional stop
dataread1;>kb
dataread2;>:Q
gotoif;>goto--branch-46
goto;>goto--jumper-46
stop;;goto--branch-46

null;;goto--jumper-46
#goto 
goto;>main--label
#label
null;;add--label
#prline
fopwri1;:A
fopwri1;:D
fopwri1;:D
fopwri1;:I
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-54
s1push1
goto;>getnums--label
null;;goto--jumper-54
#add (2op math)
dataread1;>v1buff
dataread2;>v2buff
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:s
fopwri1;:u
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;inv--label
#prline
fopwri1;:I
fopwri1;:N
fopwri1;:V
fopwri1;:E
fopwri1;:R
fopwri1;:T
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-67
s1push1
goto;>get1num--label
null;;goto--jumper-67
#invert a variable.
dataread1;>v1buff
invert1
datawrite1;>v1buff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;abso--label
#prline
fopwri1;:A
fopwri1;:B
fopwri1;:S
fopwri1;:O
fopwri1;:L
fopwri1;:U
fopwri1;:T
fopwri1;:E
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-79
s1push1
goto;>get1num--label
null;;goto--jumper-79
#Get abs of var
dataread1;>v1buff
abs1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>v1buff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;sub--label
#prline
fopwri1;:S
fopwri1;:U
fopwri1;:B
fopwri1;:T
fopwri1;:R
fopwri1;:A
fopwri1;:C
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-93
s1push1
goto;>getnums--label
null;;goto--jumper-93
#subtract (2op math)
dataread1;>v1buff
dataread2;>v2buff
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;mul--label
#prline
fopwri1;:M
fopwri1;:U
fopwri1;:L
fopwri1;:T
fopwri1;:I
fopwri1;:P
fopwri1;:L
fopwri1;:I
fopwri1;:C
fopwri1;:A
fopwri1;:T
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-107
s1push1
goto;>getnums--label
null;;goto--jumper-107
#multiply (2op math)
dataread1;>v1buff
dataread2;>v2buff
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;div--label
#prline
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:S
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-120
s1push1
goto;>getnums--label
null;;goto--jumper-120
#conditional goto
dataread1;>v2buff
dataread2;>@0
gotoif;>goto--branch-122
goto;>goto--jumper-122
setreg1;>goto--jumper-122;goto--branch-122
goto;>div_err--label
null;;goto--jumper-122
#divide (2op math)
dataread1;>v1buff
dataread2;>v2buff
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#print
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;divm--label
#prline
fopwri1;:D
fopwri1;:I
fopwri1;:V
fopwri1;:I
fopwri1;:S
fopwri1;:I
fopwri1;:O
fopwri1;:N
fopwri1;:\s
fopwri1;:(
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:u
fopwri1;:l
fopwri1;:o
fopwri1;:)
fopwri1;::
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-135
s1push1
goto;>getnums--label
null;;goto--jumper-135
#conditional goto
dataread1;>v2buff
dataread2;>@0
gotoif;>goto--branch-137
goto;>goto--jumper-137
setreg1;>goto--jumper-137;goto--branch-137
goto;>div_err--label
null;;goto--jumper-137
#divide modulo (2op math)
dataread1;>v1buff
dataread2;>v2buff
divmod
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>resbuff
#set2 (used for asm, or get2)
datawrite2;>resbuff2
#print
fopwri1;:r
fopwri1;:e
fopwri1;:m
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#print
fopwri1;:q
fopwri1;:u
fopwri1;:o
fopwri1;:t
fopwri1;:i
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>resbuff2
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>resbuff2
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;div_err--label
#prline
fopwri1;:E
fopwri1;:R
fopwri1;:R
fopwri1;:O
fopwri1;:R
fopwri1;::
fopwri1;:\s
fopwri1;:N
fopwri1;:o
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:l
fopwri1;:a
fopwri1;:n
fopwri1;:c
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:,
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\s
fopwri1;:z
fopwri1;:e
fopwri1;:r
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;getnums--label
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:0
fopwri1;:?
fopwri1;:\s
fopwri1;:>
#goto (extra code stores away return address.)
setreg1;>goto--jumper-162
s1push1
goto;>gett--label
null;;goto--jumper-162
#copy variables 
dataread1;>gett_val
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:0
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:1
fopwri1;:?
fopwri1;:\s
fopwri1;:>
#goto (extra code stores away return address.)
setreg1;>goto--jumper-172
s1push1
goto;>gett--label
null;;goto--jumper-172
#copy variables 
dataread1;>gett_val
datawrite1;>v2buff
#print newline
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:1
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v2buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v2buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;get1num--label
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:?
fopwri1;:\s
fopwri1;:>
#goto (extra code stores away return address.)
setreg1;>goto--jumper-185
s1push1
goto;>gett--label
null;;goto--jumper-185
#copy variables 
dataread1;>gett_val
datawrite1;>v1buff
#print newline
fopwri1;:\n
#print
fopwri1;:n
fopwri1;:u
fopwri1;:m
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;::
fopwri1;:\s
#Dump (trits)
dataread1;>v1buff
iowrite1;>io.tritdump
#print
fopwri1;:\s
fopwri1;:(
fopwri1;:\s
#Dump (decimal)
dataread1;>v1buff
iowrite1;>io.decdump
#prline
fopwri1;:\s
fopwri1;:)
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;gett--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_val
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#label
null;;gett_loop--label
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-203
gotoif;>keyprompt--loop-203
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_ch
#conditional set
dataread1;>gett_ch
dataread2;>:\x
gotoif;>goto--branch-205
goto;>goto--jumper-205
dataread1;>:\x;goto--branch-205
datawrite1;>gett_disp
null;;goto--jumper-205
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:\x
gotoif;>goto--branch-206
goto;>goto--jumper-206
setreg1;>goto--jumper-206;goto--branch-206
s1push1
goto;>gett_backone--label
null;;goto--jumper-206
#conditional set
dataread1;>gett_ch
dataread2;>:0
gotoif;>goto--branch-208
goto;>goto--jumper-208
dataread1;>@0;goto--branch-208
datawrite1;>gett_decv
null;;goto--jumper-208
#conditional set
dataread1;>gett_ch
dataread2;>:0
gotoif;>goto--branch-209
goto;>goto--jumper-209
dataread1;>:0;goto--branch-209
datawrite1;>gett_disp
null;;goto--jumper-209
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:0
gotoif;>goto--branch-210
goto;>goto--jumper-210
setreg1;>goto--jumper-210;goto--branch-210
s1push1
goto;>gett_donum--label
null;;goto--jumper-210
#conditional set
dataread1;>gett_ch
dataread2;>:)
gotoif;>goto--branch-211
goto;>goto--jumper-211
dataread1;>@0;goto--branch-211
datawrite1;>gett_decv
null;;goto--jumper-211
#conditional set
dataread1;>gett_ch
dataread2;>:)
gotoif;>goto--branch-212
goto;>goto--jumper-212
dataread1;>:0;goto--branch-212
datawrite1;>gett_disp
null;;goto--jumper-212
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:)
gotoif;>goto--branch-213
goto;>goto--jumper-213
setreg1;>goto--jumper-213;goto--branch-213
s1push1
goto;>gett_donum--label
null;;goto--jumper-213
#conditional set
dataread1;>gett_ch
dataread2;>:-
gotoif;>goto--branch-216
goto;>goto--jumper-216
dataread1;>@-1;goto--branch-216
datawrite1;>gett_decv
null;;goto--jumper-216
#conditional set
dataread1;>gett_ch
dataread2;>:-
gotoif;>goto--branch-217
goto;>goto--jumper-217
dataread1;>:-;goto--branch-217
datawrite1;>gett_disp
null;;goto--jumper-217
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:-
gotoif;>goto--branch-218
goto;>goto--jumper-218
setreg1;>goto--jumper-218;goto--branch-218
s1push1
goto;>gett_donum--label
null;;goto--jumper-218
#conditional set
dataread1;>gett_ch
dataread2;>:_
gotoif;>goto--branch-219
goto;>goto--jumper-219
dataread1;>@-1;goto--branch-219
datawrite1;>gett_decv
null;;goto--jumper-219
#conditional set
dataread1;>gett_ch
dataread2;>:_
gotoif;>goto--branch-220
goto;>goto--jumper-220
dataread1;>:-;goto--branch-220
datawrite1;>gett_disp
null;;goto--jumper-220
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:_
gotoif;>goto--branch-221
goto;>goto--jumper-221
setreg1;>goto--jumper-221;goto--branch-221
s1push1
goto;>gett_donum--label
null;;goto--jumper-221
#conditional set
dataread1;>gett_ch
dataread2;>:n
gotoif;>goto--branch-222
goto;>goto--jumper-222
dataread1;>@-1;goto--branch-222
datawrite1;>gett_decv
null;;goto--jumper-222
#conditional set
dataread1;>gett_ch
dataread2;>:n
gotoif;>goto--branch-223
goto;>goto--jumper-223
dataread1;>:-;goto--branch-223
datawrite1;>gett_disp
null;;goto--jumper-223
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:n
gotoif;>goto--branch-224
goto;>goto--jumper-224
setreg1;>goto--jumper-224;goto--branch-224
s1push1
goto;>gett_donum--label
null;;goto--jumper-224
#conditional set
dataread1;>gett_ch
dataread2;>:N
gotoif;>goto--branch-225
goto;>goto--jumper-225
dataread1;>@-1;goto--branch-225
datawrite1;>gett_decv
null;;goto--jumper-225
#conditional set
dataread1;>gett_ch
dataread2;>:N
gotoif;>goto--branch-226
goto;>goto--jumper-226
dataread1;>:-;goto--branch-226
datawrite1;>gett_disp
null;;goto--jumper-226
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:N
gotoif;>goto--branch-227
goto;>goto--jumper-227
setreg1;>goto--jumper-227;goto--branch-227
s1push1
goto;>gett_donum--label
null;;goto--jumper-227
#conditional set
dataread1;>gett_ch
dataread2;>:+
gotoif;>goto--branch-230
goto;>goto--jumper-230
dataread1;>@1;goto--branch-230
datawrite1;>gett_decv
null;;goto--jumper-230
#conditional set
dataread1;>gett_ch
dataread2;>:+
gotoif;>goto--branch-231
goto;>goto--jumper-231
dataread1;>:+;goto--branch-231
datawrite1;>gett_disp
null;;goto--jumper-231
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:+
gotoif;>goto--branch-232
goto;>goto--jumper-232
setreg1;>goto--jumper-232;goto--branch-232
s1push1
goto;>gett_donum--label
null;;goto--jumper-232
#conditional set
dataread1;>gett_ch
dataread2;>:=
gotoif;>goto--branch-233
goto;>goto--jumper-233
dataread1;>@1;goto--branch-233
datawrite1;>gett_decv
null;;goto--jumper-233
#conditional set
dataread1;>gett_ch
dataread2;>:=
gotoif;>goto--branch-234
goto;>goto--jumper-234
dataread1;>:+;goto--branch-234
datawrite1;>gett_disp
null;;goto--jumper-234
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:=
gotoif;>goto--branch-235
goto;>goto--jumper-235
setreg1;>goto--jumper-235;goto--branch-235
s1push1
goto;>gett_donum--label
null;;goto--jumper-235
#conditional set
dataread1;>gett_ch
dataread2;>:p
gotoif;>goto--branch-236
goto;>goto--jumper-236
dataread1;>@1;goto--branch-236
datawrite1;>gett_decv
null;;goto--jumper-236
#conditional set
dataread1;>gett_ch
dataread2;>:p
gotoif;>goto--branch-237
goto;>goto--jumper-237
dataread1;>:+;goto--branch-237
datawrite1;>gett_disp
null;;goto--jumper-237
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:p
gotoif;>goto--branch-238
goto;>goto--jumper-238
setreg1;>goto--jumper-238;goto--branch-238
s1push1
goto;>gett_donum--label
null;;goto--jumper-238
#conditional set
dataread1;>gett_ch
dataread2;>:P
gotoif;>goto--branch-239
goto;>goto--jumper-239
dataread1;>@1;goto--branch-239
datawrite1;>gett_decv
null;;goto--jumper-239
#conditional set
dataread1;>gett_ch
dataread2;>:P
gotoif;>goto--branch-240
goto;>goto--jumper-240
dataread1;>:+;goto--branch-240
datawrite1;>gett_disp
null;;goto--jumper-240
#conditional subroutine goto
dataread1;>gett_ch
dataread2;>:P
gotoif;>goto--branch-241
goto;>goto--jumper-241
setreg1;>goto--jumper-241;goto--branch-241
s1push1
goto;>gett_donum--label
null;;goto--jumper-241
#conditional goto
dataread1;>gett_ch
dataread2;>:\n
gotoif;>goto--branch-244
goto;>goto--jumper-244
setreg1;>goto--jumper-244;goto--branch-244
goto;>gett_end--label
null;;goto--jumper-244
#conditional stop
dataread1;>gett_ch
dataread2;>:q
gotoif;>goto--branch-246
goto;>goto--jumper-246
stop;;goto--branch-246

null;;goto--jumper-246
#conditional stop
dataread1;>gett_ch
dataread2;>:Q
gotoif;>goto--branch-247
goto;>goto--jumper-247
stop;;goto--branch-247

null;;goto--jumper-247
#goto 
goto;>gett_loop--label
#label
null;;gett_end--label
#stack reverse (uses stack 2)
s2reverse
#label
null;;gett_end_loop--label
#conditional return
dataread1;>gett_cnt
dataread2;>@0
gotoif;>goto--branch-254
goto;>goto--jumper-254
s1pop1;;goto--branch-254
gotoreg1
null;;goto--jumper-254
#subtract (2op math)
dataread1;>gett_cnt
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_numb
#multiply (2op math)
dataread1;>gett_val
dataread2;>@3
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_val
#add (2op math)
dataread1;>gett_val
dataread2;>gett_numb
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_val
#goto 
goto;>gett_end_loop--label
#label
null;;gett_donum--label
#conditional return
dataread1;>gett_cnt
dataread2;>@9
gotoif;>goto--branch-271
goto;>goto--jumper-271
s1pop1;;goto--branch-271
gotoreg1
null;;goto--jumper-271
#Dump (character)
dataread1;>gett_disp
iowrite1;>io.ttywr
#get(1) (may be used with set, or asm code)
dataread1;>gett_decv
#stack push (uses stack 2)
s2push1
#add (2op math)
dataread1;>gett_cnt
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#return from subroutine.
s1pop1
gotoreg1
#label
null;;gett_backone--label
#conditional return
dataread1;>gett_cnt
dataread2;>@0
gotoif;>goto--branch-284
goto;>goto--jumper-284
s1pop1;;goto--branch-284
gotoreg1
null;;goto--jumper-284
#Dump (character)
dataread1;>gett_disp
iowrite1;>io.ttywr
#subtract (2op math)
dataread1;>gett_cnt
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>gett_cnt
#stack pop (uses stack 2)
s2pop1
#return from subroutine.
s1pop1
gotoreg1
#label
null;;about--label
#print newline
fopwri1;:\n
#prline
fopwri1;:-
fopwri1;:-
fopwri1;:A
fopwri1;:B
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:0
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:(
fopwri1;:c
fopwri1;:)
fopwri1;:\s
fopwri1;:2
fopwri1;:0
fopwri1;:1
fopwri1;:8
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:o
fopwri1;:m
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:L
fopwri1;:e
fopwri1;:a
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:C
fopwri1;:o
fopwri1;:n
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:s
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:f
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:s
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;::
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:n
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:i
fopwri1;:f
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:m
fopwri1;:s
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:p
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:b
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:S
fopwri1;:o
fopwri1;:f
fopwri1;:t
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:F
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:,
fopwri1;:\s
fopwri1;:e
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:3
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:,
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:(
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:r
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:)
fopwri1;:\s
fopwri1;:a
fopwri1;:n
fopwri1;:y
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:a
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:,
fopwri1;:\n
#prline
fopwri1;:b
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:W
fopwri1;:I
fopwri1;:T
fopwri1;:H
fopwri1;:O
fopwri1;:U
fopwri1;:T
fopwri1;:\s
fopwri1;:A
fopwri1;:N
fopwri1;:Y
fopwri1;:\s
fopwri1;:W
fopwri1;:A
fopwri1;:R
fopwri1;:R
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:Y
fopwri1;:\c
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:e
fopwri1;:v
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:i
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:r
fopwri1;:r
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\n
#prline
fopwri1;:M
fopwri1;:E
fopwri1;:R
fopwri1;:C
fopwri1;:H
fopwri1;:A
fopwri1;:N
fopwri1;:T
fopwri1;:A
fopwri1;:B
fopwri1;:I
fopwri1;:L
fopwri1;:I
fopwri1;:T
fopwri1;:Y
fopwri1;:\s
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:F
fopwri1;:I
fopwri1;:T
fopwri1;:N
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:F
fopwri1;:O
fopwri1;:R
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:P
fopwri1;:A
fopwri1;:R
fopwri1;:T
fopwri1;:I
fopwri1;:C
fopwri1;:U
fopwri1;:L
fopwri1;:A
fopwri1;:R
fopwri1;:\s
fopwri1;:P
fopwri1;:U
fopwri1;:R
fopwri1;:P
fopwri1;:O
fopwri1;:S
fopwri1;:E
fopwri1;:.
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:r
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:t
fopwri1;:a
fopwri1;:i
fopwri1;:l
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:Y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:u
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:c
fopwri1;:e
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:p
fopwri1;:y
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:G
fopwri1;:N
fopwri1;:U
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:l
fopwri1;:\s
fopwri1;:P
fopwri1;:u
fopwri1;:b
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:L
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:l
fopwri1;:o
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:t
fopwri1;:h
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:.
fopwri1;:\s
fopwri1;:I
fopwri1;:f
fopwri1;:\s
fopwri1;:n
fopwri1;:o
fopwri1;:t
fopwri1;:,
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:<
fopwri1;:h
fopwri1;:t
fopwri1;:t
fopwri1;:p
fopwri1;::
fopwri1;:/
fopwri1;:/
fopwri1;:w
fopwri1;:w
fopwri1;:w
fopwri1;:.
fopwri1;:g
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:o
fopwri1;:r
fopwri1;:g
fopwri1;:/
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:e
fopwri1;:n
fopwri1;:s
fopwri1;:e
fopwri1;:s
fopwri1;:/
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:R
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#print
fopwri1;:?
fopwri1;:>
fopwri1;:>
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-316
gotoif;>keyprompt--loop-316
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;help--label
#prline
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\s
fopwri1;:v
fopwri1;:1
fopwri1;:.
fopwri1;:0
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:n
fopwri1;:a
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:C
fopwri1;:L
fopwri1;:I
fopwri1;:\s
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:u
fopwri1;:l
fopwri1;:a
fopwri1;:t
fopwri1;:o
fopwri1;:r
fopwri1;:\n
#prline
fopwri1;:C
fopwri1;:O
fopwri1;:M
fopwri1;:M
fopwri1;:A
fopwri1;:N
fopwri1;:D
fopwri1;:S
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:a
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:d
fopwri1;:d
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:s
fopwri1;::
fopwri1;:\s
fopwri1;:s
fopwri1;:u
fopwri1;:b
fopwri1;:t
fopwri1;:r
fopwri1;:a
fopwri1;:c
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:m
fopwri1;::
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:i
fopwri1;:p
fopwri1;:l
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:d
fopwri1;::
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:r
fopwri1;::
fopwri1;:\s
fopwri1;:m
fopwri1;:o
fopwri1;:d
fopwri1;:u
fopwri1;:l
fopwri1;:o
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:v
fopwri1;:i
fopwri1;:d
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:i
fopwri1;::
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:b
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:s
fopwri1;:o
fopwri1;:l
fopwri1;:u
fopwri1;:t
fopwri1;:e
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:h
fopwri1;::
fopwri1;:\s
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:?
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:b
fopwri1;:o
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:q
fopwri1;::
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:\n
#prline
fopwri1;:W
fopwri1;:H
fopwri1;:E
fopwri1;:N
fopwri1;:\s
fopwri1;:E
fopwri1;:N
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:I
fopwri1;:N
fopwri1;:G
fopwri1;:\s
fopwri1;:N
fopwri1;:U
fopwri1;:M
fopwri1;:B
fopwri1;:E
fopwri1;:R
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:p
fopwri1;:,
fopwri1;:P
fopwri1;:,
fopwri1;:+
fopwri1;:,
fopwri1;:=
fopwri1;:]
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:p
fopwri1;:o
fopwri1;:s
fopwri1;:i
fopwri1;:t
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:0
fopwri1;:,
fopwri1;:)
fopwri1;:]
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:g
fopwri1;:r
fopwri1;:o
fopwri1;:u
fopwri1;:n
fopwri1;:d
fopwri1;:/
fopwri1;:z
fopwri1;:e
fopwri1;:r
fopwri1;:o
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:n
fopwri1;:,
fopwri1;:N
fopwri1;:,
fopwri1;:-
fopwri1;:,
fopwri1;:_
fopwri1;:]
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:n
fopwri1;:e
fopwri1;:g
fopwri1;:a
fopwri1;:t
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:q
fopwri1;:,
fopwri1;:Q
fopwri1;:]
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:a
fopwri1;:l
fopwri1;:c
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:[
fopwri1;:B
fopwri1;:A
fopwri1;:C
fopwri1;:K
fopwri1;:S
fopwri1;:P
fopwri1;:A
fopwri1;:C
fopwri1;:E
fopwri1;:]
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:l
fopwri1;:a
fopwri1;:s
fopwri1;:t
fopwri1;:-
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:d
fopwri1;:i
fopwri1;:g
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:i
fopwri1;:n
fopwri1;:p
fopwri1;:u
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:l
fopwri1;:i
fopwri1;:m
fopwri1;:i
fopwri1;:t
fopwri1;:e
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:9
fopwri1;:\s
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:s
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:R
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:R
fopwri1;:E
fopwri1;:T
fopwri1;:U
fopwri1;:R
fopwri1;:N
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:M
fopwri1;:A
fopwri1;:I
fopwri1;:N
fopwri1;:\s
fopwri1;:M
fopwri1;:E
fopwri1;:N
fopwri1;:U
fopwri1;:\n
#print
fopwri1;:?
fopwri1;:>
fopwri1;:>
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-343
gotoif;>keyprompt--loop-343
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
