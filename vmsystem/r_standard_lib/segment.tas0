#SSTNPL COMPILER v0.3.0
#header
head-rname=segment
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/segment.stnp
null;0;posx
null;0;posy
null;10x8;height
null;10x4;width
null;10x20;vert_space
null;10x10;hori_space
null;10x9841;color_on
null;10x0;color_off
null;0;current_x
null;0;offset
null;0;boolt
null;0;segx1
null;0;segy1
null;0;segx2
null;0;segy2
null;0;b_tmp
null;10x0;@0
null;10x1;@1
null;:\s;:\s
null;:9;:9
null;:Z;:Z
null;:M;:M
null;:m;:m
null;:a;:a
null;10x2;@2
null;:b;:b
null;10x3;@3
null;:c;:c
null;10x4;@4
null;:d;:d
null;10x5;@5
null;:e;:e
null;10x6;@6
null;:f;:f
null;10x7;@7
null;:g;:g
null;10x8;@8
null;:h;:h
null;10x9;@9
null;:i;:i
null;10x10;@10
null;:j;:j
null;10x11;@11
null;:k;:k
null;10x12;@12
null;:l;:l
null;10x13;@13
null;10x14;@14
null;:n;:n
null;10x15;@15
null;:o;:o
null;10x16;@16
null;:p;:p
null;10x17;@17
null;:q;:q
null;10x18;@18
null;:r;:r
null;10x19;@19
null;:s;:s
null;10x20;@20
null;:t;:t
null;10x21;@21
null;:u;:u
null;10x22;@22
null;:v;:v
null;10x23;@23
null;:w;:w
null;10x24;@24
null;:x;:x
null;10x25;@25
null;:y;:y
null;10x26;@26
null;:z;:z
null;10x27;@27
null;:A;:A
null;:B;:B
null;:C;:C
null;:D;:D
null;:E;:E
null;:F;:F
null;:G;:G
null;:H;:H
null;:I;:I
null;:J;:J
null;:K;:K
null;:L;:L
null;:N;:N
null;:O;:O
null;:P;:P
null;:Q;:Q
null;:R;:R
null;:S;:S
null;:T;:T
null;:U;:U
null;:V;:V
null;:W;:W
null;:X;:X
null;:Y;:Y
null;:0;:0
null;10x28;@28
null;:1;:1
null;10x29;@29
null;:2;:2
null;10x30;@30
null;:3;:3
null;10x31;@31
null;:4;:4
null;10x32;@32
null;:5;:5
null;10x33;@33
null;:6;:6
null;10x34;@34
null;:7;:7
null;10x35;@35
null;:8;:8
null;10x36;@36
null;10x37;@37
null;:?;:?
null;10x38;@38
null;:+;:+
null;10x39;@39
null;:-;:-
null;10x40;@40
null;:_;:_
null;10x41;@41
null;:<;:<
null;10x42;@42
null;:>;:>
null;10x43;@43
null;:";:"
null;10x44;@44
null;:';:'
null;10x45;@45
null;:$;:$
null;10x46;@46
null;:%;:%
null;10x47;@47
null;:\v;:\v
null;10x48;@48
null;:/;:/
null;10x49;@49
null;:\b;:\b
null;10x50;@50
null;:=;:=
null;10x51;@51
null;:.;:.
null;10x52;@52
null;:\m;:\m
null;10x53;@53
null;10x0;$false
#label
null;;init_pos--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#return from subroutine.
s1pop1
gotoreg1
#label
null;;output--label
#buffer 1 head read
ioread1;>buffer.1.read.head
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>b_tmp
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#conditional return
dataread1;>b_tmp
dataread2;>@0
gotoif;>goto--branch-47
goto;>goto--jumper-47
s1pop1;;goto--branch-47
gotoreg1
null;;goto--jumper-47
#conditional subroutine goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-48
goto;>goto--jumper-48
setreg1;>goto--jumper-48;goto--branch-48
s1push1
goto;>newline--label
null;;goto--jumper-48
#conditional goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-49
goto;>goto--jumper-49
setreg1;>goto--jumper-49;goto--branch-49
goto;>output--label
null;;goto--jumper-49
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoif;>goto--branch-51
goto;>goto--jumper-51
setreg1;>goto--jumper-51;goto--branch-51
goto;>skip_draw--label
null;;goto--jumper-51
#conditional goto
dataread1;>b_tmp
dataread2;>:9
gotoifmore;>goto--branch-53
goto;>goto--jumper-53
setreg1;>goto--jumper-53;goto--branch-53
goto;>skip_to_symbols--label
null;;goto--jumper-53
#conditional goto
dataread1;>b_tmp
dataread2;>:Z
gotoifmore;>goto--branch-54
goto;>goto--jumper-54
setreg1;>goto--jumper-54;goto--branch-54
goto;>skip_alpha--label
null;;goto--jumper-54
#conditional goto
dataread1;>b_tmp
dataread2;>:M
gotoifmore;>goto--branch-55
goto;>goto--jumper-55
setreg1;>goto--jumper-55;goto--branch-55
goto;>skip_alpha_upper_firsthalf--label
null;;goto--jumper-55
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoifmore;>goto--branch-57
goto;>goto--jumper-57
setreg1;>goto--jumper-57;goto--branch-57
goto;>skip_alpha_lower--label
null;;goto--jumper-57
#conditional goto
dataread1;>b_tmp
dataread2;>:m
gotoifmore;>goto--branch-58
goto;>goto--jumper-58
setreg1;>goto--jumper-58;goto--branch-58
goto;>skip_alpha_lower_firsthalf--label
null;;goto--jumper-58
#conditional set
dataread1;>b_tmp
dataread2;>:a
gotoif;>goto--branch-61
goto;>goto--jumper-61
dataread1;>@2;goto--branch-61
datawrite1;>offset
null;;goto--jumper-61
#conditional set
dataread1;>b_tmp
dataread2;>:b
gotoif;>goto--branch-62
goto;>goto--jumper-62
dataread1;>@3;goto--branch-62
datawrite1;>offset
null;;goto--jumper-62
#conditional set
dataread1;>b_tmp
dataread2;>:c
gotoif;>goto--branch-63
goto;>goto--jumper-63
dataread1;>@4;goto--branch-63
datawrite1;>offset
null;;goto--jumper-63
#conditional set
dataread1;>b_tmp
dataread2;>:d
gotoif;>goto--branch-64
goto;>goto--jumper-64
dataread1;>@5;goto--branch-64
datawrite1;>offset
null;;goto--jumper-64
#conditional set
dataread1;>b_tmp
dataread2;>:e
gotoif;>goto--branch-65
goto;>goto--jumper-65
dataread1;>@6;goto--branch-65
datawrite1;>offset
null;;goto--jumper-65
#conditional set
dataread1;>b_tmp
dataread2;>:f
gotoif;>goto--branch-66
goto;>goto--jumper-66
dataread1;>@7;goto--branch-66
datawrite1;>offset
null;;goto--jumper-66
#conditional set
dataread1;>b_tmp
dataread2;>:g
gotoif;>goto--branch-67
goto;>goto--jumper-67
dataread1;>@8;goto--branch-67
datawrite1;>offset
null;;goto--jumper-67
#conditional set
dataread1;>b_tmp
dataread2;>:h
gotoif;>goto--branch-68
goto;>goto--jumper-68
dataread1;>@9;goto--branch-68
datawrite1;>offset
null;;goto--jumper-68
#conditional set
dataread1;>b_tmp
dataread2;>:i
gotoif;>goto--branch-69
goto;>goto--jumper-69
dataread1;>@10;goto--branch-69
datawrite1;>offset
null;;goto--jumper-69
#conditional set
dataread1;>b_tmp
dataread2;>:j
gotoif;>goto--branch-70
goto;>goto--jumper-70
dataread1;>@11;goto--branch-70
datawrite1;>offset
null;;goto--jumper-70
#conditional set
dataread1;>b_tmp
dataread2;>:k
gotoif;>goto--branch-71
goto;>goto--jumper-71
dataread1;>@12;goto--branch-71
datawrite1;>offset
null;;goto--jumper-71
#conditional set
dataread1;>b_tmp
dataread2;>:l
gotoif;>goto--branch-72
goto;>goto--jumper-72
dataread1;>@13;goto--branch-72
datawrite1;>offset
null;;goto--jumper-72
#conditional set
dataread1;>b_tmp
dataread2;>:m
gotoif;>goto--branch-73
goto;>goto--jumper-73
dataread1;>@14;goto--branch-73
datawrite1;>offset
null;;goto--jumper-73
#goto 
goto;>end--label
#label
null;;skip_alpha_lower_firsthalf--label
#conditional set
dataread1;>b_tmp
dataread2;>:n
gotoif;>goto--branch-79
goto;>goto--jumper-79
dataread1;>@15;goto--branch-79
datawrite1;>offset
null;;goto--jumper-79
#conditional set
dataread1;>b_tmp
dataread2;>:o
gotoif;>goto--branch-80
goto;>goto--jumper-80
dataread1;>@16;goto--branch-80
datawrite1;>offset
null;;goto--jumper-80
#conditional set
dataread1;>b_tmp
dataread2;>:p
gotoif;>goto--branch-81
goto;>goto--jumper-81
dataread1;>@17;goto--branch-81
datawrite1;>offset
null;;goto--jumper-81
#conditional set
dataread1;>b_tmp
dataread2;>:q
gotoif;>goto--branch-82
goto;>goto--jumper-82
dataread1;>@18;goto--branch-82
datawrite1;>offset
null;;goto--jumper-82
#conditional set
dataread1;>b_tmp
dataread2;>:r
gotoif;>goto--branch-83
goto;>goto--jumper-83
dataread1;>@19;goto--branch-83
datawrite1;>offset
null;;goto--jumper-83
#conditional set
dataread1;>b_tmp
dataread2;>:s
gotoif;>goto--branch-84
goto;>goto--jumper-84
dataread1;>@20;goto--branch-84
datawrite1;>offset
null;;goto--jumper-84
#conditional set
dataread1;>b_tmp
dataread2;>:t
gotoif;>goto--branch-85
goto;>goto--jumper-85
dataread1;>@21;goto--branch-85
datawrite1;>offset
null;;goto--jumper-85
#conditional set
dataread1;>b_tmp
dataread2;>:u
gotoif;>goto--branch-86
goto;>goto--jumper-86
dataread1;>@22;goto--branch-86
datawrite1;>offset
null;;goto--jumper-86
#conditional set
dataread1;>b_tmp
dataread2;>:v
gotoif;>goto--branch-87
goto;>goto--jumper-87
dataread1;>@23;goto--branch-87
datawrite1;>offset
null;;goto--jumper-87
#conditional set
dataread1;>b_tmp
dataread2;>:w
gotoif;>goto--branch-88
goto;>goto--jumper-88
dataread1;>@24;goto--branch-88
datawrite1;>offset
null;;goto--jumper-88
#conditional set
dataread1;>b_tmp
dataread2;>:x
gotoif;>goto--branch-89
goto;>goto--jumper-89
dataread1;>@25;goto--branch-89
datawrite1;>offset
null;;goto--jumper-89
#conditional set
dataread1;>b_tmp
dataread2;>:y
gotoif;>goto--branch-90
goto;>goto--jumper-90
dataread1;>@26;goto--branch-90
datawrite1;>offset
null;;goto--jumper-90
#conditional set
dataread1;>b_tmp
dataread2;>:z
gotoif;>goto--branch-91
goto;>goto--jumper-91
dataread1;>@27;goto--branch-91
datawrite1;>offset
null;;goto--jumper-91
#goto 
goto;>end--label
#label
null;;skip_alpha_lower--label
#conditional set
dataread1;>b_tmp
dataread2;>:A
gotoif;>goto--branch-96
goto;>goto--jumper-96
dataread1;>@2;goto--branch-96
datawrite1;>offset
null;;goto--jumper-96
#conditional set
dataread1;>b_tmp
dataread2;>:B
gotoif;>goto--branch-97
goto;>goto--jumper-97
dataread1;>@3;goto--branch-97
datawrite1;>offset
null;;goto--jumper-97
#conditional set
dataread1;>b_tmp
dataread2;>:C
gotoif;>goto--branch-98
goto;>goto--jumper-98
dataread1;>@4;goto--branch-98
datawrite1;>offset
null;;goto--jumper-98
#conditional set
dataread1;>b_tmp
dataread2;>:D
gotoif;>goto--branch-99
goto;>goto--jumper-99
dataread1;>@5;goto--branch-99
datawrite1;>offset
null;;goto--jumper-99
#conditional set
dataread1;>b_tmp
dataread2;>:E
gotoif;>goto--branch-100
goto;>goto--jumper-100
dataread1;>@6;goto--branch-100
datawrite1;>offset
null;;goto--jumper-100
#conditional set
dataread1;>b_tmp
dataread2;>:F
gotoif;>goto--branch-101
goto;>goto--jumper-101
dataread1;>@7;goto--branch-101
datawrite1;>offset
null;;goto--jumper-101
#conditional set
dataread1;>b_tmp
dataread2;>:G
gotoif;>goto--branch-102
goto;>goto--jumper-102
dataread1;>@8;goto--branch-102
datawrite1;>offset
null;;goto--jumper-102
#conditional set
dataread1;>b_tmp
dataread2;>:H
gotoif;>goto--branch-103
goto;>goto--jumper-103
dataread1;>@9;goto--branch-103
datawrite1;>offset
null;;goto--jumper-103
#conditional set
dataread1;>b_tmp
dataread2;>:I
gotoif;>goto--branch-104
goto;>goto--jumper-104
dataread1;>@10;goto--branch-104
datawrite1;>offset
null;;goto--jumper-104
#conditional set
dataread1;>b_tmp
dataread2;>:J
gotoif;>goto--branch-105
goto;>goto--jumper-105
dataread1;>@11;goto--branch-105
datawrite1;>offset
null;;goto--jumper-105
#conditional set
dataread1;>b_tmp
dataread2;>:K
gotoif;>goto--branch-106
goto;>goto--jumper-106
dataread1;>@12;goto--branch-106
datawrite1;>offset
null;;goto--jumper-106
#conditional set
dataread1;>b_tmp
dataread2;>:L
gotoif;>goto--branch-107
goto;>goto--jumper-107
dataread1;>@13;goto--branch-107
datawrite1;>offset
null;;goto--jumper-107
#conditional set
dataread1;>b_tmp
dataread2;>:M
gotoif;>goto--branch-108
goto;>goto--jumper-108
dataread1;>@14;goto--branch-108
datawrite1;>offset
null;;goto--jumper-108
#goto 
goto;>end--label
#label
null;;skip_alpha_upper_firsthalf--label
#conditional set
dataread1;>b_tmp
dataread2;>:N
gotoif;>goto--branch-115
goto;>goto--jumper-115
dataread1;>@15;goto--branch-115
datawrite1;>offset
null;;goto--jumper-115
#conditional set
dataread1;>b_tmp
dataread2;>:O
gotoif;>goto--branch-116
goto;>goto--jumper-116
dataread1;>@16;goto--branch-116
datawrite1;>offset
null;;goto--jumper-116
#conditional set
dataread1;>b_tmp
dataread2;>:P
gotoif;>goto--branch-117
goto;>goto--jumper-117
dataread1;>@17;goto--branch-117
datawrite1;>offset
null;;goto--jumper-117
#conditional set
dataread1;>b_tmp
dataread2;>:Q
gotoif;>goto--branch-118
goto;>goto--jumper-118
dataread1;>@18;goto--branch-118
datawrite1;>offset
null;;goto--jumper-118
#conditional set
dataread1;>b_tmp
dataread2;>:R
gotoif;>goto--branch-119
goto;>goto--jumper-119
dataread1;>@19;goto--branch-119
datawrite1;>offset
null;;goto--jumper-119
#conditional set
dataread1;>b_tmp
dataread2;>:S
gotoif;>goto--branch-120
goto;>goto--jumper-120
dataread1;>@20;goto--branch-120
datawrite1;>offset
null;;goto--jumper-120
#conditional set
dataread1;>b_tmp
dataread2;>:T
gotoif;>goto--branch-121
goto;>goto--jumper-121
dataread1;>@21;goto--branch-121
datawrite1;>offset
null;;goto--jumper-121
#conditional set
dataread1;>b_tmp
dataread2;>:U
gotoif;>goto--branch-122
goto;>goto--jumper-122
dataread1;>@22;goto--branch-122
datawrite1;>offset
null;;goto--jumper-122
#conditional set
dataread1;>b_tmp
dataread2;>:V
gotoif;>goto--branch-123
goto;>goto--jumper-123
dataread1;>@23;goto--branch-123
datawrite1;>offset
null;;goto--jumper-123
#conditional set
dataread1;>b_tmp
dataread2;>:W
gotoif;>goto--branch-124
goto;>goto--jumper-124
dataread1;>@24;goto--branch-124
datawrite1;>offset
null;;goto--jumper-124
#conditional set
dataread1;>b_tmp
dataread2;>:X
gotoif;>goto--branch-125
goto;>goto--jumper-125
dataread1;>@25;goto--branch-125
datawrite1;>offset
null;;goto--jumper-125
#conditional set
dataread1;>b_tmp
dataread2;>:Y
gotoif;>goto--branch-126
goto;>goto--jumper-126
dataread1;>@26;goto--branch-126
datawrite1;>offset
null;;goto--jumper-126
#conditional set
dataread1;>b_tmp
dataread2;>:Z
gotoif;>goto--branch-127
goto;>goto--jumper-127
dataread1;>@27;goto--branch-127
datawrite1;>offset
null;;goto--jumper-127
#goto 
goto;>end--label
#label
null;;skip_alpha--label
#conditional set
dataread1;>b_tmp
dataread2;>:0
gotoif;>goto--branch-131
goto;>goto--jumper-131
dataread1;>@28;goto--branch-131
datawrite1;>offset
null;;goto--jumper-131
#conditional set
dataread1;>b_tmp
dataread2;>:1
gotoif;>goto--branch-132
goto;>goto--jumper-132
dataread1;>@29;goto--branch-132
datawrite1;>offset
null;;goto--jumper-132
#conditional set
dataread1;>b_tmp
dataread2;>:2
gotoif;>goto--branch-133
goto;>goto--jumper-133
dataread1;>@30;goto--branch-133
datawrite1;>offset
null;;goto--jumper-133
#conditional set
dataread1;>b_tmp
dataread2;>:3
gotoif;>goto--branch-134
goto;>goto--jumper-134
dataread1;>@31;goto--branch-134
datawrite1;>offset
null;;goto--jumper-134
#conditional set
dataread1;>b_tmp
dataread2;>:4
gotoif;>goto--branch-135
goto;>goto--jumper-135
dataread1;>@32;goto--branch-135
datawrite1;>offset
null;;goto--jumper-135
#conditional set
dataread1;>b_tmp
dataread2;>:5
gotoif;>goto--branch-136
goto;>goto--jumper-136
dataread1;>@33;goto--branch-136
datawrite1;>offset
null;;goto--jumper-136
#conditional set
dataread1;>b_tmp
dataread2;>:6
gotoif;>goto--branch-137
goto;>goto--jumper-137
dataread1;>@34;goto--branch-137
datawrite1;>offset
null;;goto--jumper-137
#conditional set
dataread1;>b_tmp
dataread2;>:7
gotoif;>goto--branch-138
goto;>goto--jumper-138
dataread1;>@35;goto--branch-138
datawrite1;>offset
null;;goto--jumper-138
#conditional set
dataread1;>b_tmp
dataread2;>:8
gotoif;>goto--branch-139
goto;>goto--jumper-139
dataread1;>@36;goto--branch-139
datawrite1;>offset
null;;goto--jumper-139
#conditional set
dataread1;>b_tmp
dataread2;>:9
gotoif;>goto--branch-140
goto;>goto--jumper-140
dataread1;>@37;goto--branch-140
datawrite1;>offset
null;;goto--jumper-140
#goto 
goto;>end--label
#label
null;;skip_to_symbols--label
#conditional set
dataread1;>b_tmp
dataread2;>:?
gotoif;>goto--branch-144
goto;>goto--jumper-144
dataread1;>@38;goto--branch-144
datawrite1;>offset
null;;goto--jumper-144
#conditional set
dataread1;>b_tmp
dataread2;>:+
gotoif;>goto--branch-145
goto;>goto--jumper-145
dataread1;>@39;goto--branch-145
datawrite1;>offset
null;;goto--jumper-145
#conditional set
dataread1;>b_tmp
dataread2;>:-
gotoif;>goto--branch-146
goto;>goto--jumper-146
dataread1;>@40;goto--branch-146
datawrite1;>offset
null;;goto--jumper-146
#conditional set
dataread1;>b_tmp
dataread2;>:_
gotoif;>goto--branch-147
goto;>goto--jumper-147
dataread1;>@41;goto--branch-147
datawrite1;>offset
null;;goto--jumper-147
#conditional set
dataread1;>b_tmp
dataread2;>:<
gotoif;>goto--branch-148
goto;>goto--jumper-148
dataread1;>@42;goto--branch-148
datawrite1;>offset
null;;goto--jumper-148
#conditional set
dataread1;>b_tmp
dataread2;>:>
gotoif;>goto--branch-149
goto;>goto--jumper-149
dataread1;>@43;goto--branch-149
datawrite1;>offset
null;;goto--jumper-149
#conditional set
dataread1;>b_tmp
dataread2;>:"
gotoif;>goto--branch-150
goto;>goto--jumper-150
dataread1;>@44;goto--branch-150
datawrite1;>offset
null;;goto--jumper-150
#conditional set
dataread1;>b_tmp
dataread2;>:'
gotoif;>goto--branch-151
goto;>goto--jumper-151
dataread1;>@45;goto--branch-151
datawrite1;>offset
null;;goto--jumper-151
#conditional set
dataread1;>b_tmp
dataread2;>:$
gotoif;>goto--branch-152
goto;>goto--jumper-152
dataread1;>@46;goto--branch-152
datawrite1;>offset
null;;goto--jumper-152
#conditional set
dataread1;>b_tmp
dataread2;>:%
gotoif;>goto--branch-153
goto;>goto--jumper-153
dataread1;>@47;goto--branch-153
datawrite1;>offset
null;;goto--jumper-153
#conditional set
dataread1;>b_tmp
dataread2;>:\v
gotoif;>goto--branch-154
goto;>goto--jumper-154
dataread1;>@48;goto--branch-154
datawrite1;>offset
null;;goto--jumper-154
#conditional set
dataread1;>b_tmp
dataread2;>:/
gotoif;>goto--branch-155
goto;>goto--jumper-155
dataread1;>@49;goto--branch-155
datawrite1;>offset
null;;goto--jumper-155
#conditional set
dataread1;>b_tmp
dataread2;>:\b
gotoif;>goto--branch-156
goto;>goto--jumper-156
dataread1;>@50;goto--branch-156
datawrite1;>offset
null;;goto--jumper-156
#conditional set
dataread1;>b_tmp
dataread2;>:=
gotoif;>goto--branch-157
goto;>goto--jumper-157
dataread1;>@51;goto--branch-157
datawrite1;>offset
null;;goto--jumper-157
#conditional set
dataread1;>b_tmp
dataread2;>:.
gotoif;>goto--branch-158
goto;>goto--jumper-158
dataread1;>@52;goto--branch-158
datawrite1;>offset
null;;goto--jumper-158
#conditional set
dataread1;>b_tmp
dataread2;>:\m
gotoif;>goto--branch-159
goto;>goto--jumper-159
dataread1;>@53;goto--branch-159
datawrite1;>offset
null;;goto--jumper-159
#label
null;;end--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-162
s1push1
goto;>segment_draw--label
null;;goto--jumper-162
#label
null;;skip_draw--label
#add (2op math)
dataread1;>current_x
dataread2;>hori_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#goto 
goto;>output--label
#table width=16, height=54
null;;seg_data--table
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;0
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#label
null;;newline--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#add (2op math)
dataread1;>posy
dataread2;>vert_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>posy
#return from subroutine.
s1pop1
gotoreg1
#label
null;;segment_draw--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--240
dataread1;;tabr--adrbuff--240
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-242
goto;>goto--jumper-242
setreg1;>goto--jumper-242;goto--branch-242
goto;>seg_1--label
null;;goto--jumper-242
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-251
s1push1
goto;>segment_single--label
null;;goto--jumper-251
#label
null;;seg_1--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@1
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--254
dataread1;;tabr--adrbuff--254
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-256
goto;>goto--jumper-256
setreg1;>goto--jumper-256;goto--branch-256
goto;>seg_2--label
null;;goto--jumper-256
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-265
s1push1
goto;>segment_single--label
null;;goto--jumper-265
#label
null;;seg_2--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@2
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--268
dataread1;;tabr--adrbuff--268
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-270
goto;>goto--jumper-270
setreg1;>goto--jumper-270;goto--branch-270
goto;>seg_3--label
null;;goto--jumper-270
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-279
s1push1
goto;>segment_single--label
null;;goto--jumper-279
#label
null;;seg_3--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@3
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--282
dataread1;;tabr--adrbuff--282
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-284
goto;>goto--jumper-284
setreg1;>goto--jumper-284;goto--branch-284
goto;>seg_4--label
null;;goto--jumper-284
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-293
s1push1
goto;>segment_single--label
null;;goto--jumper-293
#label
null;;seg_4--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@4
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--296
dataread1;;tabr--adrbuff--296
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-298
goto;>goto--jumper-298
setreg1;>goto--jumper-298;goto--branch-298
goto;>seg_5--label
null;;goto--jumper-298
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-307
s1push1
goto;>segment_single--label
null;;goto--jumper-307
#label
null;;seg_5--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@5
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--310
dataread1;;tabr--adrbuff--310
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-312
goto;>goto--jumper-312
setreg1;>goto--jumper-312;goto--branch-312
goto;>seg_6--label
null;;goto--jumper-312
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-321
s1push1
goto;>segment_single--label
null;;goto--jumper-321
#label
null;;seg_6--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@6
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--324
dataread1;;tabr--adrbuff--324
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-326
goto;>goto--jumper-326
setreg1;>goto--jumper-326;goto--branch-326
goto;>seg_7--label
null;;goto--jumper-326
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-335
s1push1
goto;>segment_single--label
null;;goto--jumper-335
#label
null;;seg_7--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@7
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--338
dataread1;;tabr--adrbuff--338
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-340
goto;>goto--jumper-340
setreg1;>goto--jumper-340;goto--branch-340
goto;>seg_8--label
null;;goto--jumper-340
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-349
s1push1
goto;>segment_single--label
null;;goto--jumper-349
#label
null;;seg_8--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@8
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--352
dataread1;;tabr--adrbuff--352
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-354
goto;>goto--jumper-354
setreg1;>goto--jumper-354;goto--branch-354
goto;>seg_9--label
null;;goto--jumper-354
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-363
s1push1
goto;>segment_single--label
null;;goto--jumper-363
#label
null;;seg_9--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@9
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--366
dataread1;;tabr--adrbuff--366
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-368
goto;>goto--jumper-368
setreg1;>goto--jumper-368;goto--branch-368
goto;>seg_10--label
null;;goto--jumper-368
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-377
s1push1
goto;>segment_single--label
null;;goto--jumper-377
#label
null;;seg_10--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@10
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--380
dataread1;;tabr--adrbuff--380
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-382
goto;>goto--jumper-382
setreg1;>goto--jumper-382;goto--branch-382
goto;>seg_11--label
null;;goto--jumper-382
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-391
s1push1
goto;>segment_single--label
null;;goto--jumper-391
#label
null;;seg_11--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@11
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--394
dataread1;;tabr--adrbuff--394
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-396
goto;>goto--jumper-396
setreg1;>goto--jumper-396;goto--branch-396
goto;>seg_12--label
null;;goto--jumper-396
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-405
s1push1
goto;>segment_single--label
null;;goto--jumper-405
#label
null;;seg_12--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@12
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--408
dataread1;;tabr--adrbuff--408
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-410
goto;>goto--jumper-410
setreg1;>goto--jumper-410;goto--branch-410
goto;>seg_13--label
null;;goto--jumper-410
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-419
s1push1
goto;>segment_single--label
null;;goto--jumper-419
#label
null;;seg_13--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@13
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--422
dataread1;;tabr--adrbuff--422
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-424
goto;>goto--jumper-424
setreg1;>goto--jumper-424;goto--branch-424
goto;>seg_14--label
null;;goto--jumper-424
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-433
s1push1
goto;>segment_single--label
null;;goto--jumper-433
#label
null;;seg_14--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@14
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--436
dataread1;;tabr--adrbuff--436
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-438
goto;>goto--jumper-438
setreg1;>goto--jumper-438;goto--branch-438
goto;>seg_15--label
null;;goto--jumper-438
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-447
s1push1
goto;>segment_single--label
null;;goto--jumper-447
#label
null;;seg_15--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@15
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--450
dataread1;;tabr--adrbuff--450
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional return
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-452
goto;>goto--jumper-452
s1pop1;;goto--branch-452
gotoreg1
null;;goto--jumper-452
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-461
s1push1
goto;>segment_single--label
null;;goto--jumper-461
#return from subroutine.
s1pop1
gotoreg1
#label
null;;segment_single--label
#get(1) (may be used with set, or asm code)
dataread1;>segx1
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #475
mul#SSTNPL Source Line: '475' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #477
add#SSTNPL Source Line: '477' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #478
iowrite1;>plot.x1#SSTNPL Source Line: '478' 
#get(1) (may be used with set, or asm code)
dataread1;>segy1
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #487
mul#SSTNPL Source Line: '487' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #489
add#SSTNPL Source Line: '489' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #490
iowrite1;>plot.y1#SSTNPL Source Line: '490' 
#get(1) (may be used with set, or asm code)
dataread1;>segx2
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #499
mul#SSTNPL Source Line: '499' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #501
add#SSTNPL Source Line: '501' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #502
iowrite1;>plot.x2#SSTNPL Source Line: '502' 
#get(1) (may be used with set, or asm code)
dataread1;>segy2
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #511
mul#SSTNPL Source Line: '511' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #513
add#SSTNPL Source Line: '513' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #514
iowrite1;>plot.y2#SSTNPL Source Line: '514' 
#plotter draw line
dataread1;>color_on
iowrite1;>plot.color
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
