#SSTNPL COMPILER v0.3.0
#header
head-rname=segment
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/segment.stnp
null;0;posx
null;0;posy
null;10x8;height
null;10x4;width
null;10x20;vert_space
null;10x10;hori_space
null;10x9841;color_on
null;10x0;color_off
null;0;current_x
null;0;offset
null;0;boolt
null;0;segx1
null;0;segy1
null;0;segx2
null;0;segy2
null;0;b_tmp
null;10x0;@0
null;10x1;@1
null;:\s;:\s
null;:9;:9
null;:Z;:Z
null;:?;:?
null;10x38;@38
null;:+;:+
null;10x39;@39
null;:-;:-
null;10x40;@40
null;:_;:_
null;10x41;@41
null;:<;:<
null;10x42;@42
null;:>;:>
null;10x43;@43
null;:";:"
null;10x44;@44
null;:';:'
null;10x45;@45
null;:$;:$
null;10x46;@46
null;:%;:%
null;10x47;@47
null;:\v;:\v
null;10x48;@48
null;:/;:/
null;10x49;@49
null;:\b;:\b
null;10x50;@50
null;:=;:=
null;10x51;@51
null;:.;:.
null;10x52;@52
null;:\m;:\m
null;10x53;@53
null;10x0;$false
null;10x2;@2
null;10x3;@3
null;10x4;@4
null;10x5;@5
null;10x6;@6
null;10x7;@7
null;10x8;@8
null;10x9;@9
null;10x10;@10
null;10x11;@11
null;10x12;@12
null;10x13;@13
null;10x14;@14
null;10x15;@15
#label
null;;init_pos--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#return from subroutine.
s1pop1
gotoreg1
#label
null;;output--label
#buffer 1 head read
ioread1;>buffer.1.read.head
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>b_tmp
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#conditional return
dataread1;>b_tmp
dataread2;>@0
gotoif;>goto--branch-47
goto;>goto--jumper-47
s1pop1;;goto--branch-47
gotoreg1
null;;goto--jumper-47
#conditional subroutine goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-48
goto;>goto--jumper-48
setreg1;>goto--jumper-48;goto--branch-48
s1push1
goto;>newline--label
null;;goto--jumper-48
#conditional goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-49
goto;>goto--jumper-49
setreg1;>goto--jumper-49;goto--branch-49
goto;>output--label
null;;goto--jumper-49
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoif;>goto--branch-51
goto;>goto--jumper-51
setreg1;>goto--jumper-51;goto--branch-51
goto;>skip_draw--label
null;;goto--jumper-51
#conditional goto
dataread1;>b_tmp
dataread2;>:9
gotoifmore;>goto--branch-53
goto;>goto--jumper-53
setreg1;>goto--jumper-53;goto--branch-53
goto;>skip_to_symbols--label
null;;goto--jumper-53
#conditional goto
dataread1;>b_tmp
dataread2;>:Z
gotoifmore;>goto--branch-54
goto;>goto--jumper-54
setreg1;>goto--jumper-54;goto--branch-54
goto;>skip_alpha--label
null;;goto--jumper-54
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoifmore;>goto--branch-59
goto;>goto--jumper-59
setreg1;>goto--jumper-59;goto--branch-59
goto;>skip_alpha_lower--label
null;;goto--jumper-59
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #70
setreg1;10x123#SSTNPL Source Line: '70' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #72
add#SSTNPL Source Line: '72' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
null;;skip_alpha_lower--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #86
setreg1;10x96#SSTNPL Source Line: '86' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #88
add#SSTNPL Source Line: '88' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
null;;skip_alpha--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #103
setreg1;10x95#SSTNPL Source Line: '103' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #105
add#SSTNPL Source Line: '105' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
null;;skip_to_symbols--label
#conditional set
dataread1;>b_tmp
dataread2;>:?
gotoif;>goto--branch-111
goto;>goto--jumper-111
dataread1;>@38;goto--branch-111
datawrite1;>offset
null;;goto--jumper-111
#conditional set
dataread1;>b_tmp
dataread2;>:+
gotoif;>goto--branch-112
goto;>goto--jumper-112
dataread1;>@39;goto--branch-112
datawrite1;>offset
null;;goto--jumper-112
#conditional set
dataread1;>b_tmp
dataread2;>:-
gotoif;>goto--branch-113
goto;>goto--jumper-113
dataread1;>@40;goto--branch-113
datawrite1;>offset
null;;goto--jumper-113
#conditional set
dataread1;>b_tmp
dataread2;>:_
gotoif;>goto--branch-114
goto;>goto--jumper-114
dataread1;>@41;goto--branch-114
datawrite1;>offset
null;;goto--jumper-114
#conditional set
dataread1;>b_tmp
dataread2;>:<
gotoif;>goto--branch-115
goto;>goto--jumper-115
dataread1;>@42;goto--branch-115
datawrite1;>offset
null;;goto--jumper-115
#conditional set
dataread1;>b_tmp
dataread2;>:>
gotoif;>goto--branch-116
goto;>goto--jumper-116
dataread1;>@43;goto--branch-116
datawrite1;>offset
null;;goto--jumper-116
#conditional set
dataread1;>b_tmp
dataread2;>:"
gotoif;>goto--branch-117
goto;>goto--jumper-117
dataread1;>@44;goto--branch-117
datawrite1;>offset
null;;goto--jumper-117
#conditional set
dataread1;>b_tmp
dataread2;>:'
gotoif;>goto--branch-118
goto;>goto--jumper-118
dataread1;>@45;goto--branch-118
datawrite1;>offset
null;;goto--jumper-118
#conditional set
dataread1;>b_tmp
dataread2;>:$
gotoif;>goto--branch-119
goto;>goto--jumper-119
dataread1;>@46;goto--branch-119
datawrite1;>offset
null;;goto--jumper-119
#conditional set
dataread1;>b_tmp
dataread2;>:%
gotoif;>goto--branch-120
goto;>goto--jumper-120
dataread1;>@47;goto--branch-120
datawrite1;>offset
null;;goto--jumper-120
#conditional set
dataread1;>b_tmp
dataread2;>:\v
gotoif;>goto--branch-121
goto;>goto--jumper-121
dataread1;>@48;goto--branch-121
datawrite1;>offset
null;;goto--jumper-121
#conditional set
dataread1;>b_tmp
dataread2;>:/
gotoif;>goto--branch-122
goto;>goto--jumper-122
dataread1;>@49;goto--branch-122
datawrite1;>offset
null;;goto--jumper-122
#conditional set
dataread1;>b_tmp
dataread2;>:\b
gotoif;>goto--branch-123
goto;>goto--jumper-123
dataread1;>@50;goto--branch-123
datawrite1;>offset
null;;goto--jumper-123
#conditional set
dataread1;>b_tmp
dataread2;>:=
gotoif;>goto--branch-124
goto;>goto--jumper-124
dataread1;>@51;goto--branch-124
datawrite1;>offset
null;;goto--jumper-124
#conditional set
dataread1;>b_tmp
dataread2;>:.
gotoif;>goto--branch-125
goto;>goto--jumper-125
dataread1;>@52;goto--branch-125
datawrite1;>offset
null;;goto--jumper-125
#conditional set
dataread1;>b_tmp
dataread2;>:\m
gotoif;>goto--branch-126
goto;>goto--jumper-126
dataread1;>@53;goto--branch-126
datawrite1;>offset
null;;goto--jumper-126
#label
null;;end--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-129
s1push1
goto;>segment_draw--label
null;;goto--jumper-129
#label
null;;skip_draw--label
#add (2op math)
dataread1;>current_x
dataread2;>hori_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#goto 
goto;>output--label
#table width=16, height=54
null;;seg_data--table
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;0
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#label
null;;newline--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#add (2op math)
dataread1;>posy
dataread2;>vert_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>posy
#return from subroutine.
s1pop1
gotoreg1
#label
null;;segment_draw--label
#plotter draw line
dataread1;>color_on
iowrite1;>plot.color
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@0
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--208
dataread1;;tabr--adrbuff--208
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-210
goto;>goto--jumper-210
setreg1;>goto--jumper-210;goto--branch-210
goto;>seg_1--label
null;;goto--jumper-210
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-219
s1push1
goto;>segment_single--label
null;;goto--jumper-219
#label
null;;seg_1--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@1
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--222
dataread1;;tabr--adrbuff--222
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-224
goto;>goto--jumper-224
setreg1;>goto--jumper-224;goto--branch-224
goto;>seg_2--label
null;;goto--jumper-224
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-233
s1push1
goto;>segment_single--label
null;;goto--jumper-233
#label
null;;seg_2--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@2
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--236
dataread1;;tabr--adrbuff--236
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-238
goto;>goto--jumper-238
setreg1;>goto--jumper-238;goto--branch-238
goto;>seg_3--label
null;;goto--jumper-238
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-247
s1push1
goto;>segment_single--label
null;;goto--jumper-247
#label
null;;seg_3--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@3
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--250
dataread1;;tabr--adrbuff--250
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-252
goto;>goto--jumper-252
setreg1;>goto--jumper-252;goto--branch-252
goto;>seg_4--label
null;;goto--jumper-252
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-261
s1push1
goto;>segment_single--label
null;;goto--jumper-261
#label
null;;seg_4--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@4
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--264
dataread1;;tabr--adrbuff--264
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-266
goto;>goto--jumper-266
setreg1;>goto--jumper-266;goto--branch-266
goto;>seg_5--label
null;;goto--jumper-266
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-275
s1push1
goto;>segment_single--label
null;;goto--jumper-275
#label
null;;seg_5--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@5
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--278
dataread1;;tabr--adrbuff--278
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-280
goto;>goto--jumper-280
setreg1;>goto--jumper-280;goto--branch-280
goto;>seg_6--label
null;;goto--jumper-280
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-289
s1push1
goto;>segment_single--label
null;;goto--jumper-289
#label
null;;seg_6--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@6
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--292
dataread1;;tabr--adrbuff--292
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-294
goto;>goto--jumper-294
setreg1;>goto--jumper-294;goto--branch-294
goto;>seg_7--label
null;;goto--jumper-294
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-303
s1push1
goto;>segment_single--label
null;;goto--jumper-303
#label
null;;seg_7--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@7
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--306
dataread1;;tabr--adrbuff--306
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-308
goto;>goto--jumper-308
setreg1;>goto--jumper-308;goto--branch-308
goto;>seg_8--label
null;;goto--jumper-308
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-317
s1push1
goto;>segment_single--label
null;;goto--jumper-317
#label
null;;seg_8--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@8
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--320
dataread1;;tabr--adrbuff--320
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-322
goto;>goto--jumper-322
setreg1;>goto--jumper-322;goto--branch-322
goto;>seg_9--label
null;;goto--jumper-322
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-331
s1push1
goto;>segment_single--label
null;;goto--jumper-331
#label
null;;seg_9--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@9
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--334
dataread1;;tabr--adrbuff--334
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-336
goto;>goto--jumper-336
setreg1;>goto--jumper-336;goto--branch-336
goto;>seg_10--label
null;;goto--jumper-336
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-345
s1push1
goto;>segment_single--label
null;;goto--jumper-345
#label
null;;seg_10--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@10
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--348
dataread1;;tabr--adrbuff--348
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-350
goto;>goto--jumper-350
setreg1;>goto--jumper-350;goto--branch-350
goto;>seg_11--label
null;;goto--jumper-350
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-359
s1push1
goto;>segment_single--label
null;;goto--jumper-359
#label
null;;seg_11--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@11
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--362
dataread1;;tabr--adrbuff--362
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-364
goto;>goto--jumper-364
setreg1;>goto--jumper-364;goto--branch-364
goto;>seg_12--label
null;;goto--jumper-364
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-373
s1push1
goto;>segment_single--label
null;;goto--jumper-373
#label
null;;seg_12--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@12
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--376
dataread1;;tabr--adrbuff--376
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-378
goto;>goto--jumper-378
setreg1;>goto--jumper-378;goto--branch-378
goto;>seg_13--label
null;;goto--jumper-378
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-387
s1push1
goto;>segment_single--label
null;;goto--jumper-387
#label
null;;seg_13--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@13
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--390
dataread1;;tabr--adrbuff--390
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-392
goto;>goto--jumper-392
setreg1;>goto--jumper-392;goto--branch-392
goto;>seg_14--label
null;;goto--jumper-392
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-401
s1push1
goto;>segment_single--label
null;;goto--jumper-401
#label
null;;seg_14--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@14
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--404
dataread1;;tabr--adrbuff--404
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-406
goto;>goto--jumper-406
setreg1;>goto--jumper-406;goto--branch-406
goto;>seg_15--label
null;;goto--jumper-406
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-415
s1push1
goto;>segment_single--label
null;;goto--jumper-415
#label
null;;seg_15--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@15
add
adddata1;10x1
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--418
dataread1;;tabr--adrbuff--418
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional return
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-420
goto;>goto--jumper-420
s1pop1;;goto--branch-420
gotoreg1
null;;goto--jumper-420
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-429
s1push1
goto;>segment_single--label
null;;goto--jumper-429
#return from subroutine.
s1pop1
gotoreg1
#label
null;;segment_single--label
#get(1) (may be used with set, or asm code)
dataread1;>segx1
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #439
mul#SSTNPL Source Line: '439' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #441
add#SSTNPL Source Line: '441' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #442
iowrite1;>plot.x1#SSTNPL Source Line: '442' 
#get(1) (may be used with set, or asm code)
dataread1;>segy1
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #447
mul#SSTNPL Source Line: '447' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #449
add#SSTNPL Source Line: '449' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #450
iowrite1;>plot.y1#SSTNPL Source Line: '450' 
#get(1) (may be used with set, or asm code)
dataread1;>segx2
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #455
mul#SSTNPL Source Line: '455' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #457
add#SSTNPL Source Line: '457' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #458
iowrite1;>plot.x2#SSTNPL Source Line: '458' 
#get(1) (may be used with set, or asm code)
dataread1;>segy2
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #463
mul#SSTNPL Source Line: '463' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #465
add#SSTNPL Source Line: '465' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #466
iowrite1;>plot.y2#SSTNPL Source Line: '466' 
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
