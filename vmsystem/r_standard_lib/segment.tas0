#SSTNPL COMPILER v0.3.0
#header
head-rname=segment
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/segment.stnp
null;0;posx
null;0;posy
null;10x8;height
null;10x4;width
null;10x20;vert_space
null;10x10;hori_space
null;10x9841;color_on
null;10x0;color_off
null;0;color
null;0;current_x
null;0;offset
null;0;boolt
null;0;segx1
null;0;segy1
null;0;segx2
null;0;segy2
null;0;b_tmp
null;10x0;@0
null;10x1;@1
null;:\s;:\s
null;:A;:A
null;10x2;@2
null;:a;:a
null;:B;:B
null;10x3;@3
null;:b;:b
null;:C;:C
null;10x4;@4
null;:c;:c
null;:D;:D
null;10x5;@5
null;:d;:d
null;:E;:E
null;10x6;@6
null;:e;:e
null;:F;:F
null;10x7;@7
null;:f;:f
null;:G;:G
null;10x8;@8
null;:g;:g
null;:H;:H
null;10x9;@9
null;:h;:h
null;:I;:I
null;10x10;@10
null;:i;:i
null;:J;:J
null;10x11;@11
null;:j;:j
null;:K;:K
null;10x12;@12
null;:k;:k
null;:L;:L
null;10x13;@13
null;:l;:l
null;:M;:M
null;10x14;@14
null;:m;:m
null;:N;:N
null;10x15;@15
null;:n;:n
null;:O;:O
null;10x16;@16
null;:o;:o
null;:P;:P
null;10x17;@17
null;:p;:p
null;:Q;:Q
null;10x18;@18
null;:q;:q
null;:R;:R
null;10x19;@19
null;:r;:r
null;:S;:S
null;10x20;@20
null;:s;:s
null;:T;:T
null;10x21;@21
null;:t;:t
null;:U;:U
null;10x22;@22
null;:u;:u
null;:V;:V
null;10x23;@23
null;:v;:v
null;:W;:W
null;10x24;@24
null;:w;:w
null;:X;:X
null;10x25;@25
null;:x;:x
null;:Y;:Y
null;10x26;@26
null;:y;:y
null;:Z;:Z
null;10x27;@27
null;:z;:z
null;:0;:0
null;10x28;@28
null;:1;:1
null;10x29;@29
null;:2;:2
null;10x30;@30
null;:3;:3
null;10x31;@31
null;:4;:4
null;10x32;@32
null;:5;:5
null;10x33;@33
null;:6;:6
null;10x34;@34
null;:7;:7
null;10x35;@35
null;:8;:8
null;10x36;@36
null;:9;:9
null;10x37;@37
null;:?;:?
null;10x38;@38
null;:+;:+
null;10x39;@39
null;:-;:-
null;10x40;@40
null;:_;:_
null;10x41;@41
null;:<;:<
null;10x42;@42
null;:>;:>
null;10x43;@43
null;:";:"
null;10x44;@44
null;:';:'
null;10x45;@45
null;:$;:$
null;10x46;@46
null;:%;:%
null;10x47;@47
null;:\v;:\v
null;10x48;@48
null;:/;:/
null;10x49;@49
null;:\b;:\b
null;10x50;@50
null;:=;:=
null;10x51;@51
null;:.;:.
null;10x52;@52
null;:\m;:\m
null;10x53;@53
null;10x1;$true
null;10x0;$false
#label
null;;init_pos--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#return from subroutine.
s1pop1
gotoreg1
#label
null;;output--label
#buffer 1 head read
ioread1;>buffer.1.read.head
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>b_tmp
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#conditional return
dataread1;>b_tmp
dataread2;>@0
gotoif;>goto--branch-44
goto;>goto--jumper-44
s1pop1;;goto--branch-44
gotoreg1
null;;goto--jumper-44
#conditional subroutine goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-45
goto;>goto--jumper-45
setreg1;>goto--jumper-45;goto--branch-45
s1push1
goto;>newline--label
null;;goto--jumper-45
#conditional goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-46
goto;>goto--jumper-46
setreg1;>goto--jumper-46;goto--branch-46
goto;>output--label
null;;goto--jumper-46
#conditional set
dataread1;>b_tmp
dataread2;>:\s
gotoif;>goto--branch-47
goto;>goto--jumper-47
dataread1;>@1;goto--branch-47
datawrite1;>offset
null;;goto--jumper-47
#conditional set
dataread1;>b_tmp
dataread2;>:A
gotoif;>goto--branch-48
goto;>goto--jumper-48
dataread1;>@2;goto--branch-48
datawrite1;>offset
null;;goto--jumper-48
#conditional set
dataread1;>b_tmp
dataread2;>:a
gotoif;>goto--branch-49
goto;>goto--jumper-49
dataread1;>@2;goto--branch-49
datawrite1;>offset
null;;goto--jumper-49
#conditional set
dataread1;>b_tmp
dataread2;>:B
gotoif;>goto--branch-50
goto;>goto--jumper-50
dataread1;>@3;goto--branch-50
datawrite1;>offset
null;;goto--jumper-50
#conditional set
dataread1;>b_tmp
dataread2;>:b
gotoif;>goto--branch-51
goto;>goto--jumper-51
dataread1;>@3;goto--branch-51
datawrite1;>offset
null;;goto--jumper-51
#conditional set
dataread1;>b_tmp
dataread2;>:C
gotoif;>goto--branch-52
goto;>goto--jumper-52
dataread1;>@4;goto--branch-52
datawrite1;>offset
null;;goto--jumper-52
#conditional set
dataread1;>b_tmp
dataread2;>:c
gotoif;>goto--branch-53
goto;>goto--jumper-53
dataread1;>@4;goto--branch-53
datawrite1;>offset
null;;goto--jumper-53
#conditional set
dataread1;>b_tmp
dataread2;>:D
gotoif;>goto--branch-54
goto;>goto--jumper-54
dataread1;>@5;goto--branch-54
datawrite1;>offset
null;;goto--jumper-54
#conditional set
dataread1;>b_tmp
dataread2;>:d
gotoif;>goto--branch-55
goto;>goto--jumper-55
dataread1;>@5;goto--branch-55
datawrite1;>offset
null;;goto--jumper-55
#conditional set
dataread1;>b_tmp
dataread2;>:E
gotoif;>goto--branch-56
goto;>goto--jumper-56
dataread1;>@6;goto--branch-56
datawrite1;>offset
null;;goto--jumper-56
#conditional set
dataread1;>b_tmp
dataread2;>:e
gotoif;>goto--branch-57
goto;>goto--jumper-57
dataread1;>@6;goto--branch-57
datawrite1;>offset
null;;goto--jumper-57
#conditional set
dataread1;>b_tmp
dataread2;>:F
gotoif;>goto--branch-58
goto;>goto--jumper-58
dataread1;>@7;goto--branch-58
datawrite1;>offset
null;;goto--jumper-58
#conditional set
dataread1;>b_tmp
dataread2;>:f
gotoif;>goto--branch-59
goto;>goto--jumper-59
dataread1;>@7;goto--branch-59
datawrite1;>offset
null;;goto--jumper-59
#conditional set
dataread1;>b_tmp
dataread2;>:G
gotoif;>goto--branch-60
goto;>goto--jumper-60
dataread1;>@8;goto--branch-60
datawrite1;>offset
null;;goto--jumper-60
#conditional set
dataread1;>b_tmp
dataread2;>:g
gotoif;>goto--branch-61
goto;>goto--jumper-61
dataread1;>@8;goto--branch-61
datawrite1;>offset
null;;goto--jumper-61
#conditional set
dataread1;>b_tmp
dataread2;>:H
gotoif;>goto--branch-62
goto;>goto--jumper-62
dataread1;>@9;goto--branch-62
datawrite1;>offset
null;;goto--jumper-62
#conditional set
dataread1;>b_tmp
dataread2;>:h
gotoif;>goto--branch-63
goto;>goto--jumper-63
dataread1;>@9;goto--branch-63
datawrite1;>offset
null;;goto--jumper-63
#conditional set
dataread1;>b_tmp
dataread2;>:I
gotoif;>goto--branch-64
goto;>goto--jumper-64
dataread1;>@10;goto--branch-64
datawrite1;>offset
null;;goto--jumper-64
#conditional set
dataread1;>b_tmp
dataread2;>:i
gotoif;>goto--branch-65
goto;>goto--jumper-65
dataread1;>@10;goto--branch-65
datawrite1;>offset
null;;goto--jumper-65
#conditional set
dataread1;>b_tmp
dataread2;>:J
gotoif;>goto--branch-66
goto;>goto--jumper-66
dataread1;>@11;goto--branch-66
datawrite1;>offset
null;;goto--jumper-66
#conditional set
dataread1;>b_tmp
dataread2;>:j
gotoif;>goto--branch-67
goto;>goto--jumper-67
dataread1;>@11;goto--branch-67
datawrite1;>offset
null;;goto--jumper-67
#conditional set
dataread1;>b_tmp
dataread2;>:K
gotoif;>goto--branch-68
goto;>goto--jumper-68
dataread1;>@12;goto--branch-68
datawrite1;>offset
null;;goto--jumper-68
#conditional set
dataread1;>b_tmp
dataread2;>:k
gotoif;>goto--branch-69
goto;>goto--jumper-69
dataread1;>@12;goto--branch-69
datawrite1;>offset
null;;goto--jumper-69
#conditional set
dataread1;>b_tmp
dataread2;>:L
gotoif;>goto--branch-70
goto;>goto--jumper-70
dataread1;>@13;goto--branch-70
datawrite1;>offset
null;;goto--jumper-70
#conditional set
dataread1;>b_tmp
dataread2;>:l
gotoif;>goto--branch-71
goto;>goto--jumper-71
dataread1;>@13;goto--branch-71
datawrite1;>offset
null;;goto--jumper-71
#conditional set
dataread1;>b_tmp
dataread2;>:M
gotoif;>goto--branch-72
goto;>goto--jumper-72
dataread1;>@14;goto--branch-72
datawrite1;>offset
null;;goto--jumper-72
#conditional set
dataread1;>b_tmp
dataread2;>:m
gotoif;>goto--branch-73
goto;>goto--jumper-73
dataread1;>@14;goto--branch-73
datawrite1;>offset
null;;goto--jumper-73
#conditional set
dataread1;>b_tmp
dataread2;>:N
gotoif;>goto--branch-74
goto;>goto--jumper-74
dataread1;>@15;goto--branch-74
datawrite1;>offset
null;;goto--jumper-74
#conditional set
dataread1;>b_tmp
dataread2;>:n
gotoif;>goto--branch-75
goto;>goto--jumper-75
dataread1;>@15;goto--branch-75
datawrite1;>offset
null;;goto--jumper-75
#conditional set
dataread1;>b_tmp
dataread2;>:O
gotoif;>goto--branch-76
goto;>goto--jumper-76
dataread1;>@16;goto--branch-76
datawrite1;>offset
null;;goto--jumper-76
#conditional set
dataread1;>b_tmp
dataread2;>:o
gotoif;>goto--branch-77
goto;>goto--jumper-77
dataread1;>@16;goto--branch-77
datawrite1;>offset
null;;goto--jumper-77
#conditional set
dataread1;>b_tmp
dataread2;>:P
gotoif;>goto--branch-78
goto;>goto--jumper-78
dataread1;>@17;goto--branch-78
datawrite1;>offset
null;;goto--jumper-78
#conditional set
dataread1;>b_tmp
dataread2;>:p
gotoif;>goto--branch-79
goto;>goto--jumper-79
dataread1;>@17;goto--branch-79
datawrite1;>offset
null;;goto--jumper-79
#conditional set
dataread1;>b_tmp
dataread2;>:Q
gotoif;>goto--branch-80
goto;>goto--jumper-80
dataread1;>@18;goto--branch-80
datawrite1;>offset
null;;goto--jumper-80
#conditional set
dataread1;>b_tmp
dataread2;>:q
gotoif;>goto--branch-81
goto;>goto--jumper-81
dataread1;>@18;goto--branch-81
datawrite1;>offset
null;;goto--jumper-81
#conditional set
dataread1;>b_tmp
dataread2;>:R
gotoif;>goto--branch-82
goto;>goto--jumper-82
dataread1;>@19;goto--branch-82
datawrite1;>offset
null;;goto--jumper-82
#conditional set
dataread1;>b_tmp
dataread2;>:r
gotoif;>goto--branch-83
goto;>goto--jumper-83
dataread1;>@19;goto--branch-83
datawrite1;>offset
null;;goto--jumper-83
#conditional set
dataread1;>b_tmp
dataread2;>:S
gotoif;>goto--branch-84
goto;>goto--jumper-84
dataread1;>@20;goto--branch-84
datawrite1;>offset
null;;goto--jumper-84
#conditional set
dataread1;>b_tmp
dataread2;>:s
gotoif;>goto--branch-85
goto;>goto--jumper-85
dataread1;>@20;goto--branch-85
datawrite1;>offset
null;;goto--jumper-85
#conditional set
dataread1;>b_tmp
dataread2;>:T
gotoif;>goto--branch-86
goto;>goto--jumper-86
dataread1;>@21;goto--branch-86
datawrite1;>offset
null;;goto--jumper-86
#conditional set
dataread1;>b_tmp
dataread2;>:t
gotoif;>goto--branch-87
goto;>goto--jumper-87
dataread1;>@21;goto--branch-87
datawrite1;>offset
null;;goto--jumper-87
#conditional set
dataread1;>b_tmp
dataread2;>:U
gotoif;>goto--branch-88
goto;>goto--jumper-88
dataread1;>@22;goto--branch-88
datawrite1;>offset
null;;goto--jumper-88
#conditional set
dataread1;>b_tmp
dataread2;>:u
gotoif;>goto--branch-89
goto;>goto--jumper-89
dataread1;>@22;goto--branch-89
datawrite1;>offset
null;;goto--jumper-89
#conditional set
dataread1;>b_tmp
dataread2;>:V
gotoif;>goto--branch-90
goto;>goto--jumper-90
dataread1;>@23;goto--branch-90
datawrite1;>offset
null;;goto--jumper-90
#conditional set
dataread1;>b_tmp
dataread2;>:v
gotoif;>goto--branch-91
goto;>goto--jumper-91
dataread1;>@23;goto--branch-91
datawrite1;>offset
null;;goto--jumper-91
#conditional set
dataread1;>b_tmp
dataread2;>:W
gotoif;>goto--branch-92
goto;>goto--jumper-92
dataread1;>@24;goto--branch-92
datawrite1;>offset
null;;goto--jumper-92
#conditional set
dataread1;>b_tmp
dataread2;>:w
gotoif;>goto--branch-93
goto;>goto--jumper-93
dataread1;>@24;goto--branch-93
datawrite1;>offset
null;;goto--jumper-93
#conditional set
dataread1;>b_tmp
dataread2;>:X
gotoif;>goto--branch-94
goto;>goto--jumper-94
dataread1;>@25;goto--branch-94
datawrite1;>offset
null;;goto--jumper-94
#conditional set
dataread1;>b_tmp
dataread2;>:x
gotoif;>goto--branch-95
goto;>goto--jumper-95
dataread1;>@25;goto--branch-95
datawrite1;>offset
null;;goto--jumper-95
#conditional set
dataread1;>b_tmp
dataread2;>:Y
gotoif;>goto--branch-96
goto;>goto--jumper-96
dataread1;>@26;goto--branch-96
datawrite1;>offset
null;;goto--jumper-96
#conditional set
dataread1;>b_tmp
dataread2;>:y
gotoif;>goto--branch-97
goto;>goto--jumper-97
dataread1;>@26;goto--branch-97
datawrite1;>offset
null;;goto--jumper-97
#conditional set
dataread1;>b_tmp
dataread2;>:Z
gotoif;>goto--branch-98
goto;>goto--jumper-98
dataread1;>@27;goto--branch-98
datawrite1;>offset
null;;goto--jumper-98
#conditional set
dataread1;>b_tmp
dataread2;>:z
gotoif;>goto--branch-99
goto;>goto--jumper-99
dataread1;>@27;goto--branch-99
datawrite1;>offset
null;;goto--jumper-99
#conditional set
dataread1;>b_tmp
dataread2;>:0
gotoif;>goto--branch-101
goto;>goto--jumper-101
dataread1;>@28;goto--branch-101
datawrite1;>offset
null;;goto--jumper-101
#conditional set
dataread1;>b_tmp
dataread2;>:1
gotoif;>goto--branch-102
goto;>goto--jumper-102
dataread1;>@29;goto--branch-102
datawrite1;>offset
null;;goto--jumper-102
#conditional set
dataread1;>b_tmp
dataread2;>:2
gotoif;>goto--branch-103
goto;>goto--jumper-103
dataread1;>@30;goto--branch-103
datawrite1;>offset
null;;goto--jumper-103
#conditional set
dataread1;>b_tmp
dataread2;>:3
gotoif;>goto--branch-104
goto;>goto--jumper-104
dataread1;>@31;goto--branch-104
datawrite1;>offset
null;;goto--jumper-104
#conditional set
dataread1;>b_tmp
dataread2;>:4
gotoif;>goto--branch-105
goto;>goto--jumper-105
dataread1;>@32;goto--branch-105
datawrite1;>offset
null;;goto--jumper-105
#conditional set
dataread1;>b_tmp
dataread2;>:5
gotoif;>goto--branch-106
goto;>goto--jumper-106
dataread1;>@33;goto--branch-106
datawrite1;>offset
null;;goto--jumper-106
#conditional set
dataread1;>b_tmp
dataread2;>:6
gotoif;>goto--branch-107
goto;>goto--jumper-107
dataread1;>@34;goto--branch-107
datawrite1;>offset
null;;goto--jumper-107
#conditional set
dataread1;>b_tmp
dataread2;>:7
gotoif;>goto--branch-108
goto;>goto--jumper-108
dataread1;>@35;goto--branch-108
datawrite1;>offset
null;;goto--jumper-108
#conditional set
dataread1;>b_tmp
dataread2;>:8
gotoif;>goto--branch-109
goto;>goto--jumper-109
dataread1;>@36;goto--branch-109
datawrite1;>offset
null;;goto--jumper-109
#conditional set
dataread1;>b_tmp
dataread2;>:9
gotoif;>goto--branch-110
goto;>goto--jumper-110
dataread1;>@37;goto--branch-110
datawrite1;>offset
null;;goto--jumper-110
#conditional set
dataread1;>b_tmp
dataread2;>:?
gotoif;>goto--branch-112
goto;>goto--jumper-112
dataread1;>@38;goto--branch-112
datawrite1;>offset
null;;goto--jumper-112
#conditional set
dataread1;>b_tmp
dataread2;>:+
gotoif;>goto--branch-113
goto;>goto--jumper-113
dataread1;>@39;goto--branch-113
datawrite1;>offset
null;;goto--jumper-113
#conditional set
dataread1;>b_tmp
dataread2;>:-
gotoif;>goto--branch-114
goto;>goto--jumper-114
dataread1;>@40;goto--branch-114
datawrite1;>offset
null;;goto--jumper-114
#conditional set
dataread1;>b_tmp
dataread2;>:_
gotoif;>goto--branch-115
goto;>goto--jumper-115
dataread1;>@41;goto--branch-115
datawrite1;>offset
null;;goto--jumper-115
#conditional set
dataread1;>b_tmp
dataread2;>:<
gotoif;>goto--branch-116
goto;>goto--jumper-116
dataread1;>@42;goto--branch-116
datawrite1;>offset
null;;goto--jumper-116
#conditional set
dataread1;>b_tmp
dataread2;>:>
gotoif;>goto--branch-117
goto;>goto--jumper-117
dataread1;>@43;goto--branch-117
datawrite1;>offset
null;;goto--jumper-117
#conditional set
dataread1;>b_tmp
dataread2;>:"
gotoif;>goto--branch-118
goto;>goto--jumper-118
dataread1;>@44;goto--branch-118
datawrite1;>offset
null;;goto--jumper-118
#conditional set
dataread1;>b_tmp
dataread2;>:'
gotoif;>goto--branch-119
goto;>goto--jumper-119
dataread1;>@45;goto--branch-119
datawrite1;>offset
null;;goto--jumper-119
#conditional set
dataread1;>b_tmp
dataread2;>:$
gotoif;>goto--branch-120
goto;>goto--jumper-120
dataread1;>@46;goto--branch-120
datawrite1;>offset
null;;goto--jumper-120
#conditional set
dataread1;>b_tmp
dataread2;>:%
gotoif;>goto--branch-121
goto;>goto--jumper-121
dataread1;>@47;goto--branch-121
datawrite1;>offset
null;;goto--jumper-121
#conditional set
dataread1;>b_tmp
dataread2;>:\v
gotoif;>goto--branch-122
goto;>goto--jumper-122
dataread1;>@48;goto--branch-122
datawrite1;>offset
null;;goto--jumper-122
#conditional set
dataread1;>b_tmp
dataread2;>:/
gotoif;>goto--branch-123
goto;>goto--jumper-123
dataread1;>@49;goto--branch-123
datawrite1;>offset
null;;goto--jumper-123
#conditional set
dataread1;>b_tmp
dataread2;>:\b
gotoif;>goto--branch-124
goto;>goto--jumper-124
dataread1;>@50;goto--branch-124
datawrite1;>offset
null;;goto--jumper-124
#conditional set
dataread1;>b_tmp
dataread2;>:=
gotoif;>goto--branch-125
goto;>goto--jumper-125
dataread1;>@51;goto--branch-125
datawrite1;>offset
null;;goto--jumper-125
#conditional set
dataread1;>b_tmp
dataread2;>:.
gotoif;>goto--branch-126
goto;>goto--jumper-126
dataread1;>@52;goto--branch-126
datawrite1;>offset
null;;goto--jumper-126
#conditional set
dataread1;>b_tmp
dataread2;>:\m
gotoif;>goto--branch-127
goto;>goto--jumper-127
dataread1;>@53;goto--branch-127
datawrite1;>offset
null;;goto--jumper-127
#goto (extra code stores away return address.)
setreg1;>goto--jumper-130
s1push1
goto;>segment_draw--label
null;;goto--jumper-130
#add (2op math)
dataread1;>current_x
dataread2;>hori_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#goto 
goto;>output--label
#table width=16, height=54
null;;seg_data--table
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;0
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#label
null;;newline--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#add (2op math)
dataread1;>posy
dataread2;>vert_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>posy
#return from subroutine.
s1pop1
gotoreg1
#label
null;;segment_draw--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@0
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--207
dataread1;;tabr--adrbuff--207
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-209
goto;>goto--jumper-209
dataread1;>color_on;goto--branch-209
datawrite1;>color
null;;goto--jumper-209
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-210
goto;>goto--jumper-210
dataread1;>color_off;goto--branch-210
datawrite1;>color
null;;goto--jumper-210
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-219
s1push1
goto;>segment_single--label
null;;goto--jumper-219
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@1
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--221
dataread1;;tabr--adrbuff--221
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-223
goto;>goto--jumper-223
dataread1;>color_on;goto--branch-223
datawrite1;>color
null;;goto--jumper-223
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-224
goto;>goto--jumper-224
dataread1;>color_off;goto--branch-224
datawrite1;>color
null;;goto--jumper-224
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-233
s1push1
goto;>segment_single--label
null;;goto--jumper-233
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@2
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--235
dataread1;;tabr--adrbuff--235
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-237
goto;>goto--jumper-237
dataread1;>color_on;goto--branch-237
datawrite1;>color
null;;goto--jumper-237
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-238
goto;>goto--jumper-238
dataread1;>color_off;goto--branch-238
datawrite1;>color
null;;goto--jumper-238
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-247
s1push1
goto;>segment_single--label
null;;goto--jumper-247
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@3
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--249
dataread1;;tabr--adrbuff--249
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-251
goto;>goto--jumper-251
dataread1;>color_on;goto--branch-251
datawrite1;>color
null;;goto--jumper-251
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-252
goto;>goto--jumper-252
dataread1;>color_off;goto--branch-252
datawrite1;>color
null;;goto--jumper-252
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-261
s1push1
goto;>segment_single--label
null;;goto--jumper-261
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@4
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--263
dataread1;;tabr--adrbuff--263
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-265
goto;>goto--jumper-265
dataread1;>color_on;goto--branch-265
datawrite1;>color
null;;goto--jumper-265
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-266
goto;>goto--jumper-266
dataread1;>color_off;goto--branch-266
datawrite1;>color
null;;goto--jumper-266
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-275
s1push1
goto;>segment_single--label
null;;goto--jumper-275
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@5
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--277
dataread1;;tabr--adrbuff--277
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-279
goto;>goto--jumper-279
dataread1;>color_on;goto--branch-279
datawrite1;>color
null;;goto--jumper-279
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-280
goto;>goto--jumper-280
dataread1;>color_off;goto--branch-280
datawrite1;>color
null;;goto--jumper-280
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-289
s1push1
goto;>segment_single--label
null;;goto--jumper-289
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@6
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--291
dataread1;;tabr--adrbuff--291
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-293
goto;>goto--jumper-293
dataread1;>color_on;goto--branch-293
datawrite1;>color
null;;goto--jumper-293
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-294
goto;>goto--jumper-294
dataread1;>color_off;goto--branch-294
datawrite1;>color
null;;goto--jumper-294
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-303
s1push1
goto;>segment_single--label
null;;goto--jumper-303
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@7
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--305
dataread1;;tabr--adrbuff--305
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-307
goto;>goto--jumper-307
dataread1;>color_on;goto--branch-307
datawrite1;>color
null;;goto--jumper-307
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-308
goto;>goto--jumper-308
dataread1;>color_off;goto--branch-308
datawrite1;>color
null;;goto--jumper-308
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-317
s1push1
goto;>segment_single--label
null;;goto--jumper-317
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@8
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--319
dataread1;;tabr--adrbuff--319
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-321
goto;>goto--jumper-321
dataread1;>color_on;goto--branch-321
datawrite1;>color
null;;goto--jumper-321
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-322
goto;>goto--jumper-322
dataread1;>color_off;goto--branch-322
datawrite1;>color
null;;goto--jumper-322
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-331
s1push1
goto;>segment_single--label
null;;goto--jumper-331
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@9
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--333
dataread1;;tabr--adrbuff--333
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-335
goto;>goto--jumper-335
dataread1;>color_on;goto--branch-335
datawrite1;>color
null;;goto--jumper-335
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-336
goto;>goto--jumper-336
dataread1;>color_off;goto--branch-336
datawrite1;>color
null;;goto--jumper-336
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-345
s1push1
goto;>segment_single--label
null;;goto--jumper-345
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@10
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--347
dataread1;;tabr--adrbuff--347
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-349
goto;>goto--jumper-349
dataread1;>color_on;goto--branch-349
datawrite1;>color
null;;goto--jumper-349
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-350
goto;>goto--jumper-350
dataread1;>color_off;goto--branch-350
datawrite1;>color
null;;goto--jumper-350
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-359
s1push1
goto;>segment_single--label
null;;goto--jumper-359
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@11
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--361
dataread1;;tabr--adrbuff--361
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-363
goto;>goto--jumper-363
dataread1;>color_on;goto--branch-363
datawrite1;>color
null;;goto--jumper-363
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-364
goto;>goto--jumper-364
dataread1;>color_off;goto--branch-364
datawrite1;>color
null;;goto--jumper-364
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-373
s1push1
goto;>segment_single--label
null;;goto--jumper-373
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@12
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--375
dataread1;;tabr--adrbuff--375
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-377
goto;>goto--jumper-377
dataread1;>color_on;goto--branch-377
datawrite1;>color
null;;goto--jumper-377
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-378
goto;>goto--jumper-378
dataread1;>color_off;goto--branch-378
datawrite1;>color
null;;goto--jumper-378
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-387
s1push1
goto;>segment_single--label
null;;goto--jumper-387
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@13
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--389
dataread1;;tabr--adrbuff--389
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-391
goto;>goto--jumper-391
dataread1;>color_on;goto--branch-391
datawrite1;>color
null;;goto--jumper-391
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-392
goto;>goto--jumper-392
dataread1;>color_off;goto--branch-392
datawrite1;>color
null;;goto--jumper-392
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-401
s1push1
goto;>segment_single--label
null;;goto--jumper-401
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@14
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--403
dataread1;;tabr--adrbuff--403
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-405
goto;>goto--jumper-405
dataread1;>color_on;goto--branch-405
datawrite1;>color
null;;goto--jumper-405
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-406
goto;>goto--jumper-406
dataread1;>color_off;goto--branch-406
datawrite1;>color
null;;goto--jumper-406
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-415
s1push1
goto;>segment_single--label
null;;goto--jumper-415
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@15
add
setreg2;10x1
add
setreg2;>seg_data--table
add
datawrite1;>tabr--adrbuff--417
dataread1;;tabr--adrbuff--417
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional set
dataread1;>boolt
dataread2;>$true
gotoif;>goto--branch-419
goto;>goto--jumper-419
dataread1;>color_on;goto--branch-419
datawrite1;>color
null;;goto--jumper-419
#conditional set
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-420
goto;>goto--jumper-420
dataread1;>color_off;goto--branch-420
datawrite1;>color
null;;goto--jumper-420
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-429
s1push1
goto;>segment_single--label
null;;goto--jumper-429
#return from subroutine.
s1pop1
gotoreg1
#label
null;;segment_single--label
#multiply (2op math)
dataread1;>segx1
dataread2;>width
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#add (2op math)
dataread1;>segx1
dataread2;>current_x
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#multiply (2op math)
dataread1;>segy1
dataread2;>height
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#add (2op math)
dataread1;>segy1
dataread2;>posy
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#multiply (2op math)
dataread1;>segx2
dataread2;>width
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#add (2op math)
dataread1;>segx2
dataread2;>current_x
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#multiply (2op math)
dataread1;>segy2
dataread2;>height
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#add (2op math)
dataread1;>segy2
dataread2;>posy
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#plotter x pos 1
dataread1;>segx1
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>segx2
iowrite1;>plot.x2
#plotter y pos 1
dataread1;>segy1
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>segy2
iowrite1;>plot.y2
#plotter draw line
dataread1;>color
iowrite1;>plot.color
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
