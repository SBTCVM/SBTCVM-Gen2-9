#SSTNPL COMPILER v0.4.0
#header
head-rname=segment
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/segment.stnp
null;0;posx
null;0;posy
null;10x8;height
null;10x4;width
null;10x20;vert_space
null;10x10;hori_space
null;10x9841;color_on
null;10x0;color_off
null;0;current_x
null;0;offset
null;0;boolt
null;0;segx1
null;0;segy1
null;0;segx2
null;0;segy2
null;0;segxBOTH
null;0;segyBOTH
null;0;b_tmp
null;0;width_x2
null;0;height_x2
null;10x0;@0
null;10x1;@1
null;:\s;:\s
null;:9;:9
null;:Z;:Z
null;:?;:?
null;10x38;@38
null;:+;:+
null;10x39;@39
null;:-;:-
null;10x40;@40
null;:_;:_
null;10x41;@41
null;:<;:<
null;10x42;@42
null;:>;:>
null;10x43;@43
null;:";:"
null;10x44;@44
null;:';:'
null;10x45;@45
null;:$;:$
null;10x46;@46
null;:%;:%
null;10x47;@47
null;:\v;:\v
null;10x48;@48
null;:/;:/
null;10x49;@49
null;:\b;:\b
null;10x50;@50
null;:=;:=
null;10x51;@51
null;:.;:.
null;10x52;@52
null;:\m;:\m
null;10x53;@53
null;:[;:[
null;10x54;@54
null;:];:]
null;10x55;@55
null;:{;:{
null;10x56;@56
null;:};:}
null;10x57;@57
null;:^;:^
null;10x58;@58
null;:`;:`
null;10x59;@59
null;:*;:*
null;10x60;@60
null;:!;:!
null;10x61;@61
null;:~;:~
null;10x62;@62
null;:&;:&
null;10x63;@63
null;10x1;$true
null;10x2;@2
null;10x3;@3
null;10x4;@4
null;10x5;@5
null;10x6;@6
null;10x7;@7
null;10x8;@8
null;10x9;@9
null;10x10;@10
null;10x11;@11
null;10x12;@12
null;10x13;@13
null;10x14;@14
null;10x15;@15
#label
zerosize;;init--label
#label
zerosize;;init_pos--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;output--label
#get(1) (may be used with set, or asm code)
dataread1;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #47-0
muldata1;10x2#SSTNPL Source Line: '47-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>width_x2
#get(1) (may be used with set, or asm code)
dataread1;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #50-0
muldata1;10x2#SSTNPL Source Line: '50-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>height_x2
#plotter draw line
dataread1;>color_on
iowrite1;>plot.color
#unconditional loop
zerosize;;flowloop--con-x-1--start
#buffer 1 head read
ioread1;>buffer.1.read.head
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>b_tmp
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#conditional return
dataread1;>b_tmp
dataread2;>@0
gotoif;>goto--branch-61-0
goto;>goto--jumper-61-0
s1pop1;;goto--branch-61-0
gotoreg1
zerosize;;goto--jumper-61-0
#conditional subroutine goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-62-0
goto;>goto--jumper-62-0
setreg1;>goto--jumper-62-0;goto--branch-62-0
s1push1
goto;>newline--label
zerosize;;goto--jumper-62-0
#conditional flow control to-top-of-block (top)
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-63-0
goto;>goto--jumper-63-0
goto;>flowloop--con-x-1--start;goto--branch-63-0

zerosize;;goto--jumper-63-0
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoif;>goto--branch-65-0
goto;>goto--jumper-65-0
setreg1;>goto--jumper-65-0;goto--branch-65-0
goto;>skip_draw--label
zerosize;;goto--jumper-65-0
#conditional goto
dataread1;>b_tmp
dataread2;>:9
gotoifmore;>goto--branch-67-0
goto;>goto--jumper-67-0
setreg1;>goto--jumper-67-0;goto--branch-67-0
goto;>skip_to_symbols--label
zerosize;;goto--jumper-67-0
#conditional goto
dataread1;>b_tmp
dataread2;>:Z
gotoifmore;>goto--branch-68-0
goto;>goto--jumper-68-0
setreg1;>goto--jumper-68-0;goto--branch-68-0
goto;>skip_alpha--label
zerosize;;goto--jumper-68-0
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoifmore;>goto--branch-69-0
goto;>goto--jumper-69-0
setreg1;>goto--jumper-69-0;goto--branch-69-0
goto;>skip_alpha_lower--label
zerosize;;goto--jumper-69-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #82-0
setreg1;10x123#SSTNPL Source Line: '82-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #84-0
add#SSTNPL Source Line: '84-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
zerosize;;skip_alpha_lower--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #98-0
setreg1;10x96#SSTNPL Source Line: '98-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #100-0
add#SSTNPL Source Line: '100-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
zerosize;;skip_alpha--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #115-0
setreg1;10x95#SSTNPL Source Line: '115-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #117-0
add#SSTNPL Source Line: '117-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
zerosize;;skip_to_symbols--label
#conditional set
dataread1;>b_tmp
dataread2;>:?
gotoif;>goto--branch-123-0
goto;>goto--jumper-123-0
dataread1;>@38;goto--branch-123-0
datawrite1;>offset
zerosize;;goto--jumper-123-0
#conditional set
dataread1;>b_tmp
dataread2;>:+
gotoif;>goto--branch-124-0
goto;>goto--jumper-124-0
dataread1;>@39;goto--branch-124-0
datawrite1;>offset
zerosize;;goto--jumper-124-0
#conditional set
dataread1;>b_tmp
dataread2;>:-
gotoif;>goto--branch-125-0
goto;>goto--jumper-125-0
dataread1;>@40;goto--branch-125-0
datawrite1;>offset
zerosize;;goto--jumper-125-0
#conditional set
dataread1;>b_tmp
dataread2;>:_
gotoif;>goto--branch-126-0
goto;>goto--jumper-126-0
dataread1;>@41;goto--branch-126-0
datawrite1;>offset
zerosize;;goto--jumper-126-0
#conditional set
dataread1;>b_tmp
dataread2;>:<
gotoif;>goto--branch-127-0
goto;>goto--jumper-127-0
dataread1;>@42;goto--branch-127-0
datawrite1;>offset
zerosize;;goto--jumper-127-0
#conditional set
dataread1;>b_tmp
dataread2;>:>
gotoif;>goto--branch-128-0
goto;>goto--jumper-128-0
dataread1;>@43;goto--branch-128-0
datawrite1;>offset
zerosize;;goto--jumper-128-0
#conditional set
dataread1;>b_tmp
dataread2;>:"
gotoif;>goto--branch-129-0
goto;>goto--jumper-129-0
dataread1;>@44;goto--branch-129-0
datawrite1;>offset
zerosize;;goto--jumper-129-0
#conditional set
dataread1;>b_tmp
dataread2;>:'
gotoif;>goto--branch-130-0
goto;>goto--jumper-130-0
dataread1;>@45;goto--branch-130-0
datawrite1;>offset
zerosize;;goto--jumper-130-0
#conditional set
dataread1;>b_tmp
dataread2;>:$
gotoif;>goto--branch-131-0
goto;>goto--jumper-131-0
dataread1;>@46;goto--branch-131-0
datawrite1;>offset
zerosize;;goto--jumper-131-0
#conditional set
dataread1;>b_tmp
dataread2;>:%
gotoif;>goto--branch-132-0
goto;>goto--jumper-132-0
dataread1;>@47;goto--branch-132-0
datawrite1;>offset
zerosize;;goto--jumper-132-0
#conditional set
dataread1;>b_tmp
dataread2;>:\v
gotoif;>goto--branch-133-0
goto;>goto--jumper-133-0
dataread1;>@48;goto--branch-133-0
datawrite1;>offset
zerosize;;goto--jumper-133-0
#conditional set
dataread1;>b_tmp
dataread2;>:/
gotoif;>goto--branch-134-0
goto;>goto--jumper-134-0
dataread1;>@49;goto--branch-134-0
datawrite1;>offset
zerosize;;goto--jumper-134-0
#conditional set
dataread1;>b_tmp
dataread2;>:\b
gotoif;>goto--branch-135-0
goto;>goto--jumper-135-0
dataread1;>@50;goto--branch-135-0
datawrite1;>offset
zerosize;;goto--jumper-135-0
#conditional set
dataread1;>b_tmp
dataread2;>:=
gotoif;>goto--branch-136-0
goto;>goto--jumper-136-0
dataread1;>@51;goto--branch-136-0
datawrite1;>offset
zerosize;;goto--jumper-136-0
#conditional set
dataread1;>b_tmp
dataread2;>:.
gotoif;>goto--branch-137-0
goto;>goto--jumper-137-0
dataread1;>@52;goto--branch-137-0
datawrite1;>offset
zerosize;;goto--jumper-137-0
#conditional set
dataread1;>b_tmp
dataread2;>:\m
gotoif;>goto--branch-138-0
goto;>goto--jumper-138-0
dataread1;>@53;goto--branch-138-0
datawrite1;>offset
zerosize;;goto--jumper-138-0
#conditional set
dataread1;>b_tmp
dataread2;>:[
gotoif;>goto--branch-139-0
goto;>goto--jumper-139-0
dataread1;>@54;goto--branch-139-0
datawrite1;>offset
zerosize;;goto--jumper-139-0
#conditional set
dataread1;>b_tmp
dataread2;>:]
gotoif;>goto--branch-140-0
goto;>goto--jumper-140-0
dataread1;>@55;goto--branch-140-0
datawrite1;>offset
zerosize;;goto--jumper-140-0
#conditional set
dataread1;>b_tmp
dataread2;>:{
gotoif;>goto--branch-141-0
goto;>goto--jumper-141-0
dataread1;>@56;goto--branch-141-0
datawrite1;>offset
zerosize;;goto--jumper-141-0
#conditional set
dataread1;>b_tmp
dataread2;>:}
gotoif;>goto--branch-142-0
goto;>goto--jumper-142-0
dataread1;>@57;goto--branch-142-0
datawrite1;>offset
zerosize;;goto--jumper-142-0
#conditional set
dataread1;>b_tmp
dataread2;>:^
gotoif;>goto--branch-143-0
goto;>goto--jumper-143-0
dataread1;>@58;goto--branch-143-0
datawrite1;>offset
zerosize;;goto--jumper-143-0
#conditional set
dataread1;>b_tmp
dataread2;>:`
gotoif;>goto--branch-144-0
goto;>goto--jumper-144-0
dataread1;>@59;goto--branch-144-0
datawrite1;>offset
zerosize;;goto--jumper-144-0
#conditional set
dataread1;>b_tmp
dataread2;>:*
gotoif;>goto--branch-145-0
goto;>goto--jumper-145-0
dataread1;>@60;goto--branch-145-0
datawrite1;>offset
zerosize;;goto--jumper-145-0
#conditional set
dataread1;>b_tmp
dataread2;>:!
gotoif;>goto--branch-146-0
goto;>goto--jumper-146-0
dataread1;>@61;goto--branch-146-0
datawrite1;>offset
zerosize;;goto--jumper-146-0
#conditional set
dataread1;>b_tmp
dataread2;>:~
gotoif;>goto--branch-147-0
goto;>goto--jumper-147-0
dataread1;>@62;goto--branch-147-0
datawrite1;>offset
zerosize;;goto--jumper-147-0
#conditional set
dataread1;>b_tmp
dataread2;>:&
gotoif;>goto--branch-148-0
goto;>goto--jumper-148-0
dataread1;>@63;goto--branch-148-0
datawrite1;>offset
zerosize;;goto--jumper-148-0
#label
zerosize;;end--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-151-0
s1push1
goto;>segment_draw--label
zerosize;;goto--jumper-151-0
#label
zerosize;;skip_draw--label
#add (2op math)
dataread1;>current_x
dataread2;>hori_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
goto;>flowloop--con-x-1--start
zerosize;;flowloop--con-x-1
#table width=16, height=62
zerosize;;seg_data--table
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;0
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;+
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
#tdat
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;+
#tdat
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;+
null;+
null;+
null;+
null;+
null;0
null;+
#label
zerosize;;newline--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#add (2op math)
dataread1;>posy
dataread2;>vert_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>posy
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;segment_draw--label
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@0
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--266-0
dataread1;;tabr--adrbuff--266-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-268-0
goto;>goto--branch-268-0
goto;>flow--con-x-2;goto--branch-268-0

zerosize;;goto--jumper-268-0
zerosize;;flow--con-x-2--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #269-2
iowrite1;>plot.x1#SSTNPL Source Line: '269-2' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #269-3
iowrite1;>plot.x2#SSTNPL Source Line: '269-3' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #270-3
add#SSTNPL Source Line: '270-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #270-4
iowrite1;>plot.y2#SSTNPL Source Line: '270-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #271-3
add#SSTNPL Source Line: '271-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #271-4
iowrite1;>plot.y1#SSTNPL Source Line: '271-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-2
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@1
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--275-0
dataread1;;tabr--adrbuff--275-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-277-0
goto;>goto--branch-277-0
goto;>flow--con-x-3;goto--branch-277-0

zerosize;;goto--jumper-277-0
zerosize;;flow--con-x-3--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #278-2
iowrite1;>plot.x1#SSTNPL Source Line: '278-2' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #278-3
iowrite1;>plot.x2#SSTNPL Source Line: '278-3' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #279-2
iowrite1;>plot.y1#SSTNPL Source Line: '279-2' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #280-3
add#SSTNPL Source Line: '280-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #280-4
iowrite1;>plot.y2#SSTNPL Source Line: '280-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-3
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@2
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--285-0
dataread1;;tabr--adrbuff--285-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-287-0
goto;>goto--branch-287-0
goto;>flow--con-x-4;goto--branch-287-0

zerosize;;goto--jumper-287-0
zerosize;;flow--con-x-4--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #288-2
iowrite1;>plot.x1#SSTNPL Source Line: '288-2' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #289-2
iowrite1;>plot.y1#SSTNPL Source Line: '289-2' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #289-3
iowrite1;>plot.y2#SSTNPL Source Line: '289-3' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #290-3
add#SSTNPL Source Line: '290-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #290-4
iowrite1;>plot.x2#SSTNPL Source Line: '290-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-4
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@3
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--295-0
dataread1;;tabr--adrbuff--295-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-297-0
goto;>goto--branch-297-0
goto;>flow--con-x-5;goto--branch-297-0

zerosize;;goto--jumper-297-0
zerosize;;flow--con-x-5--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #298-3
add#SSTNPL Source Line: '298-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #298-4
iowrite1;>plot.x1#SSTNPL Source Line: '298-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #299-2
iowrite1;>plot.y1#SSTNPL Source Line: '299-2' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #299-3
iowrite1;>plot.y2#SSTNPL Source Line: '299-3' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #300-3
add#SSTNPL Source Line: '300-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #300-4
iowrite1;>plot.x2#SSTNPL Source Line: '300-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-5
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@4
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--305-0
dataread1;;tabr--adrbuff--305-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-307-0
goto;>goto--branch-307-0
goto;>flow--con-x-6;goto--branch-307-0

zerosize;;goto--jumper-307-0
zerosize;;flow--con-x-6--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #308-3
add#SSTNPL Source Line: '308-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #308-4
iowrite1;>plot.x1#SSTNPL Source Line: '308-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #308-5
iowrite1;>plot.x2#SSTNPL Source Line: '308-5' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #309-2
iowrite1;>plot.y1#SSTNPL Source Line: '309-2' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #310-3
add#SSTNPL Source Line: '310-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #310-4
iowrite1;>plot.y2#SSTNPL Source Line: '310-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-6
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@5
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--315-0
dataread1;;tabr--adrbuff--315-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-317-0
goto;>goto--branch-317-0
goto;>flow--con-x-7;goto--branch-317-0

zerosize;;goto--jumper-317-0
zerosize;;flow--con-x-7--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #318-3
add#SSTNPL Source Line: '318-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #318-4
iowrite1;>plot.x1#SSTNPL Source Line: '318-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #318-5
iowrite1;>plot.x2#SSTNPL Source Line: '318-5' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #319-3
add#SSTNPL Source Line: '319-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #319-4
iowrite1;>plot.y2#SSTNPL Source Line: '319-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #320-3
add#SSTNPL Source Line: '320-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #320-4
iowrite1;>plot.y1#SSTNPL Source Line: '320-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-7
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@6
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--325-0
dataread1;;tabr--adrbuff--325-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-327-0
goto;>goto--branch-327-0
goto;>flow--con-x-8;goto--branch-327-0

zerosize;;goto--jumper-327-0
zerosize;;flow--con-x-8--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #328-3
add#SSTNPL Source Line: '328-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #328-4
iowrite1;>plot.x1#SSTNPL Source Line: '328-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #329-3
add#SSTNPL Source Line: '329-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #329-4
iowrite1;>plot.y1#SSTNPL Source Line: '329-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #329-5
iowrite1;>plot.y2#SSTNPL Source Line: '329-5' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #330-3
add#SSTNPL Source Line: '330-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #330-4
iowrite1;>plot.x2#SSTNPL Source Line: '330-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-8
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@7
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--335-0
dataread1;;tabr--adrbuff--335-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-337-0
goto;>goto--branch-337-0
goto;>flow--con-x-9;goto--branch-337-0

zerosize;;goto--jumper-337-0
zerosize;;flow--con-x-9--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #338-3
add#SSTNPL Source Line: '338-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #338-4
iowrite1;>plot.x1#SSTNPL Source Line: '338-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #339-3
add#SSTNPL Source Line: '339-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #339-4
iowrite1;>plot.y1#SSTNPL Source Line: '339-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #339-5
iowrite1;>plot.y2#SSTNPL Source Line: '339-5' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #340-2
iowrite1;>plot.x2#SSTNPL Source Line: '340-2' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-9
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@8
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--345-0
dataread1;;tabr--adrbuff--345-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-347-0
goto;>goto--branch-347-0
goto;>flow--con-x-10;goto--branch-347-0

zerosize;;goto--jumper-347-0
zerosize;;flow--con-x-10--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #348-2
iowrite1;>plot.x1#SSTNPL Source Line: '348-2' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #349-2
iowrite1;>plot.y1#SSTNPL Source Line: '349-2' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #350-3
add#SSTNPL Source Line: '350-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #350-4
iowrite1;>plot.x2#SSTNPL Source Line: '350-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #351-3
add#SSTNPL Source Line: '351-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #351-4
iowrite1;>plot.y2#SSTNPL Source Line: '351-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-10
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@9
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--356-0
dataread1;;tabr--adrbuff--356-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-358-0
goto;>goto--branch-358-0
goto;>flow--con-x-11;goto--branch-358-0

zerosize;;goto--jumper-358-0
zerosize;;flow--con-x-11--start
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #359-2
iowrite1;>plot.y1#SSTNPL Source Line: '359-2' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #360-3
add#SSTNPL Source Line: '360-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #360-4
iowrite1;>plot.x1#SSTNPL Source Line: '360-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #360-5
iowrite1;>plot.x2#SSTNPL Source Line: '360-5' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #361-3
add#SSTNPL Source Line: '361-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #361-4
iowrite1;>plot.y2#SSTNPL Source Line: '361-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-11
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@10
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--366-0
dataread1;;tabr--adrbuff--366-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-368-0
goto;>goto--branch-368-0
goto;>flow--con-x-12;goto--branch-368-0

zerosize;;goto--jumper-368-0
zerosize;;flow--con-x-12--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #369-3
add#SSTNPL Source Line: '369-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #369-4
iowrite1;>plot.x1#SSTNPL Source Line: '369-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #370-2
iowrite1;>plot.y1#SSTNPL Source Line: '370-2' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #371-3
add#SSTNPL Source Line: '371-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #371-4
iowrite1;>plot.x2#SSTNPL Source Line: '371-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #372-3
add#SSTNPL Source Line: '372-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #372-4
iowrite1;>plot.y2#SSTNPL Source Line: '372-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-12
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@11
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--377-0
dataread1;;tabr--adrbuff--377-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-379-0
goto;>goto--branch-379-0
goto;>flow--con-x-13;goto--branch-379-0

zerosize;;goto--jumper-379-0
zerosize;;flow--con-x-13--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #380-3
add#SSTNPL Source Line: '380-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #380-4
iowrite1;>plot.x1#SSTNPL Source Line: '380-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #381-3
add#SSTNPL Source Line: '381-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #381-4
iowrite1;>plot.y1#SSTNPL Source Line: '381-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #381-5
iowrite1;>plot.y2#SSTNPL Source Line: '381-5' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #382-3
add#SSTNPL Source Line: '382-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #382-4
iowrite1;>plot.x2#SSTNPL Source Line: '382-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-13
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@12
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--387-0
dataread1;;tabr--adrbuff--387-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-389-0
goto;>goto--branch-389-0
goto;>flow--con-x-14;goto--branch-389-0

zerosize;;goto--jumper-389-0
zerosize;;flow--con-x-14--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #390-3
add#SSTNPL Source Line: '390-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #390-4
iowrite1;>plot.x1#SSTNPL Source Line: '390-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #391-3
add#SSTNPL Source Line: '391-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #391-4
iowrite1;>plot.y1#SSTNPL Source Line: '391-4' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #392-3
add#SSTNPL Source Line: '392-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #392-4
iowrite1;>plot.x2#SSTNPL Source Line: '392-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #393-3
add#SSTNPL Source Line: '393-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #393-4
iowrite1;>plot.y2#SSTNPL Source Line: '393-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-14
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@13
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--398-0
dataread1;;tabr--adrbuff--398-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-400-0
goto;>goto--branch-400-0
goto;>flow--con-x-15;goto--branch-400-0

zerosize;;goto--jumper-400-0
zerosize;;flow--con-x-15--start
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #401-3
add#SSTNPL Source Line: '401-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #401-4
iowrite1;>plot.y1#SSTNPL Source Line: '401-4' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #402-3
add#SSTNPL Source Line: '402-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #402-4
iowrite1;>plot.x1#SSTNPL Source Line: '402-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #402-5
iowrite1;>plot.x2#SSTNPL Source Line: '402-5' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #403-3
add#SSTNPL Source Line: '403-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #403-4
iowrite1;>plot.y2#SSTNPL Source Line: '403-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-15
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@14
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--408-0
dataread1;;tabr--adrbuff--408-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-410-0
goto;>goto--branch-410-0
goto;>flow--con-x-16;goto--branch-410-0

zerosize;;goto--jumper-410-0
zerosize;;flow--con-x-16--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #411-2
iowrite1;>plot.x1#SSTNPL Source Line: '411-2' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height_x2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #412-3
add#SSTNPL Source Line: '412-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #412-4
iowrite1;>plot.y1#SSTNPL Source Line: '412-4' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #413-3
add#SSTNPL Source Line: '413-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #413-4
iowrite1;>plot.x2#SSTNPL Source Line: '413-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #414-3
add#SSTNPL Source Line: '414-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #414-4
iowrite1;>plot.y2#SSTNPL Source Line: '414-4' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-16
#SSTNPL table read instruction.
dataread1;>offset
muldata1;10x16
dataread2;>@15
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--419-0
dataread1;;tabr--adrbuff--419-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional flow control begin
dataread1;>boolt
dataread2;>$true
gotoif;>goto--jumper-421-0
goto;>goto--branch-421-0
goto;>flow--con-x-17;goto--branch-421-0

zerosize;;goto--jumper-421-0
zerosize;;flow--con-x-17--start
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #422-2
iowrite1;>plot.x1#SSTNPL Source Line: '422-2' 
#get(1) (may be used with set, or asm code)
dataread1;>current_x
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #423-3
add#SSTNPL Source Line: '423-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #423-4
iowrite1;>plot.x2#SSTNPL Source Line: '423-4' 
#get(1) (may be used with set, or asm code)
dataread1;>posy
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #424-3
add#SSTNPL Source Line: '424-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #424-4
iowrite1;>plot.y1#SSTNPL Source Line: '424-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #424-5
iowrite1;>plot.y2#SSTNPL Source Line: '424-5' 
#plotter draw line
iowrite1;>plot.line
zerosize;;flow--con-x-17
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
