#SSTNPL COMPILER v0.4.0
#header
head-rname=segment
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/segment.stnp
null;0;posx
null;0;posy
null;10x8;height
null;10x4;width
null;10x20;vert_space
null;10x10;hori_space
null;10x9841;color_on
null;10x0;color_off
null;0;current_x
null;0;offset
null;0;boolt
null;0;segx1
null;0;segy1
null;0;segx2
null;0;segy2
null;0;segxBOTH
null;0;segyBOTH
null;0;b_tmp
null;10x0;@0
null;10x1;@1
null;:\s;:\s
null;:9;:9
null;:Z;:Z
null;:?;:?
null;10x38;@38
null;:+;:+
null;10x39;@39
null;:-;:-
null;10x40;@40
null;:_;:_
null;10x41;@41
null;:<;:<
null;10x42;@42
null;:>;:>
null;10x43;@43
null;:";:"
null;10x44;@44
null;:';:'
null;10x45;@45
null;:$;:$
null;10x46;@46
null;:%;:%
null;10x47;@47
null;:\v;:\v
null;10x48;@48
null;:/;:/
null;10x49;@49
null;:\b;:\b
null;10x50;@50
null;:=;:=
null;10x51;@51
null;:.;:.
null;10x52;@52
null;:\m;:\m
null;10x53;@53
null;10x0;$false
null;10x2;@2
null;10x3;@3
null;10x4;@4
null;10x5;@5
null;10x6;@6
null;10x7;@7
null;10x8;@8
null;10x9;@9
null;10x10;@10
null;10x11;@11
null;10x12;@12
null;10x13;@13
null;10x14;@14
null;10x15;@15
#label
zerosize;;init_pos--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;output--label
#buffer 1 head read
ioread1;>buffer.1.read.head
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>b_tmp
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#conditional return
dataread1;>b_tmp
dataread2;>@0
gotoif;>goto--branch-49-0
goto;>goto--jumper-49-0
s1pop1;;goto--branch-49-0
gotoreg1
zerosize;;goto--jumper-49-0
#conditional subroutine goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-50-0
goto;>goto--jumper-50-0
setreg1;>goto--jumper-50-0;goto--branch-50-0
s1push1
goto;>newline--label
zerosize;;goto--jumper-50-0
#conditional goto
dataread1;>b_tmp
dataread2;>@1
gotoif;>goto--branch-51-0
goto;>goto--jumper-51-0
setreg1;>goto--jumper-51-0;goto--branch-51-0
goto;>output--label
zerosize;;goto--jumper-51-0
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoif;>goto--branch-53-0
goto;>goto--jumper-53-0
setreg1;>goto--jumper-53-0;goto--branch-53-0
goto;>skip_draw--label
zerosize;;goto--jumper-53-0
#conditional goto
dataread1;>b_tmp
dataread2;>:9
gotoifmore;>goto--branch-55-0
goto;>goto--jumper-55-0
setreg1;>goto--jumper-55-0;goto--branch-55-0
goto;>skip_to_symbols--label
zerosize;;goto--jumper-55-0
#conditional goto
dataread1;>b_tmp
dataread2;>:Z
gotoifmore;>goto--branch-56-0
goto;>goto--jumper-56-0
setreg1;>goto--jumper-56-0;goto--branch-56-0
goto;>skip_alpha--label
zerosize;;goto--jumper-56-0
#conditional goto
dataread1;>b_tmp
dataread2;>:\s
gotoifmore;>goto--branch-61-0
goto;>goto--jumper-61-0
setreg1;>goto--jumper-61-0;goto--branch-61-0
goto;>skip_alpha_lower--label
zerosize;;goto--jumper-61-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #72-0
setreg1;10x123#SSTNPL Source Line: '72-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #74-0
add#SSTNPL Source Line: '74-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
zerosize;;skip_alpha_lower--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #88-0
setreg1;10x96#SSTNPL Source Line: '88-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #90-0
add#SSTNPL Source Line: '90-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
zerosize;;skip_alpha--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #105-0
setreg1;10x95#SSTNPL Source Line: '105-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>b_tmp
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #107-0
add#SSTNPL Source Line: '107-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>offset
#goto 
goto;>end--label
#label
zerosize;;skip_to_symbols--label
#conditional set
dataread1;>b_tmp
dataread2;>:?
gotoif;>goto--branch-113-0
goto;>goto--jumper-113-0
dataread1;>@38;goto--branch-113-0
datawrite1;>offset
zerosize;;goto--jumper-113-0
#conditional set
dataread1;>b_tmp
dataread2;>:+
gotoif;>goto--branch-114-0
goto;>goto--jumper-114-0
dataread1;>@39;goto--branch-114-0
datawrite1;>offset
zerosize;;goto--jumper-114-0
#conditional set
dataread1;>b_tmp
dataread2;>:-
gotoif;>goto--branch-115-0
goto;>goto--jumper-115-0
dataread1;>@40;goto--branch-115-0
datawrite1;>offset
zerosize;;goto--jumper-115-0
#conditional set
dataread1;>b_tmp
dataread2;>:_
gotoif;>goto--branch-116-0
goto;>goto--jumper-116-0
dataread1;>@41;goto--branch-116-0
datawrite1;>offset
zerosize;;goto--jumper-116-0
#conditional set
dataread1;>b_tmp
dataread2;>:<
gotoif;>goto--branch-117-0
goto;>goto--jumper-117-0
dataread1;>@42;goto--branch-117-0
datawrite1;>offset
zerosize;;goto--jumper-117-0
#conditional set
dataread1;>b_tmp
dataread2;>:>
gotoif;>goto--branch-118-0
goto;>goto--jumper-118-0
dataread1;>@43;goto--branch-118-0
datawrite1;>offset
zerosize;;goto--jumper-118-0
#conditional set
dataread1;>b_tmp
dataread2;>:"
gotoif;>goto--branch-119-0
goto;>goto--jumper-119-0
dataread1;>@44;goto--branch-119-0
datawrite1;>offset
zerosize;;goto--jumper-119-0
#conditional set
dataread1;>b_tmp
dataread2;>:'
gotoif;>goto--branch-120-0
goto;>goto--jumper-120-0
dataread1;>@45;goto--branch-120-0
datawrite1;>offset
zerosize;;goto--jumper-120-0
#conditional set
dataread1;>b_tmp
dataread2;>:$
gotoif;>goto--branch-121-0
goto;>goto--jumper-121-0
dataread1;>@46;goto--branch-121-0
datawrite1;>offset
zerosize;;goto--jumper-121-0
#conditional set
dataread1;>b_tmp
dataread2;>:%
gotoif;>goto--branch-122-0
goto;>goto--jumper-122-0
dataread1;>@47;goto--branch-122-0
datawrite1;>offset
zerosize;;goto--jumper-122-0
#conditional set
dataread1;>b_tmp
dataread2;>:\v
gotoif;>goto--branch-123-0
goto;>goto--jumper-123-0
dataread1;>@48;goto--branch-123-0
datawrite1;>offset
zerosize;;goto--jumper-123-0
#conditional set
dataread1;>b_tmp
dataread2;>:/
gotoif;>goto--branch-124-0
goto;>goto--jumper-124-0
dataread1;>@49;goto--branch-124-0
datawrite1;>offset
zerosize;;goto--jumper-124-0
#conditional set
dataread1;>b_tmp
dataread2;>:\b
gotoif;>goto--branch-125-0
goto;>goto--jumper-125-0
dataread1;>@50;goto--branch-125-0
datawrite1;>offset
zerosize;;goto--jumper-125-0
#conditional set
dataread1;>b_tmp
dataread2;>:=
gotoif;>goto--branch-126-0
goto;>goto--jumper-126-0
dataread1;>@51;goto--branch-126-0
datawrite1;>offset
zerosize;;goto--jumper-126-0
#conditional set
dataread1;>b_tmp
dataread2;>:.
gotoif;>goto--branch-127-0
goto;>goto--jumper-127-0
dataread1;>@52;goto--branch-127-0
datawrite1;>offset
zerosize;;goto--jumper-127-0
#conditional set
dataread1;>b_tmp
dataread2;>:\m
gotoif;>goto--branch-128-0
goto;>goto--jumper-128-0
dataread1;>@53;goto--branch-128-0
datawrite1;>offset
zerosize;;goto--jumper-128-0
#label
zerosize;;end--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-131-0
s1push1
goto;>segment_draw--label
zerosize;;goto--jumper-131-0
#label
zerosize;;skip_draw--label
#add (2op math)
dataread1;>current_x
dataread2;>hori_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#goto 
goto;>output--label
#table width=16, height=54
zerosize;;seg_data--table
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;0
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;+
null;+
null;+
null;+
null;0
null;0
null;+
null;0
null;0
null;0
null;0
#tdat
null;+
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;+
null;+
null;+
null;+
null;+
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;+
null;0
null;+
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#tdat
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
null;0
null;+
null;0
null;+
null;0
null;+
null;0
null;+
#tdat
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;0
null;0
null;+
null;+
null;+
null;0
null;+
null;+
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;+
null;0
null;0
null;0
null;+
null;0
null;0
null;0
null;+
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
null;0
#tdat
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;+
null;0
#label
zerosize;;newline--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>current_x
#add (2op math)
dataread1;>posy
dataread2;>vert_space
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>posy
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;segment_draw--label
#plotter draw line
dataread1;>color_on
iowrite1;>plot.color
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@0
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--216-0
dataread1;;tabr--adrbuff--216-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-218-0
goto;>goto--jumper-218-0
setreg1;>goto--jumper-218-0;goto--branch-218-0
goto;>seg_1--label
zerosize;;goto--jumper-218-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segxBOTH
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-225-0
s1push1
goto;>segment_single_x_twin--label
zerosize;;goto--jumper-225-0
#label
zerosize;;seg_1--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@1
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--228-0
dataread1;;tabr--adrbuff--228-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-230-0
goto;>goto--jumper-230-0
setreg1;>goto--jumper-230-0;goto--branch-230-0
goto;>seg_2--label
zerosize;;goto--jumper-230-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segxBOTH
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-236-0
s1push1
goto;>segment_single_x_twin--label
zerosize;;goto--jumper-236-0
#label
zerosize;;seg_2--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@2
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--239-0
dataread1;;tabr--adrbuff--239-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-241-0
goto;>goto--jumper-241-0
setreg1;>goto--jumper-241-0;goto--branch-241-0
goto;>seg_3--label
zerosize;;goto--jumper-241-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segyBOTH
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-248-0
s1push1
goto;>segment_single_y_twin--label
zerosize;;goto--jumper-248-0
#label
zerosize;;seg_3--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@3
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--251-0
dataread1;;tabr--adrbuff--251-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-253-0
goto;>goto--jumper-253-0
setreg1;>goto--jumper-253-0;goto--branch-253-0
goto;>seg_4--label
zerosize;;goto--jumper-253-0
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segyBOTH
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-261-0
s1push1
goto;>segment_single_y_twin--label
zerosize;;goto--jumper-261-0
#label
zerosize;;seg_4--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@4
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--264-0
dataread1;;tabr--adrbuff--264-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-266-0
goto;>goto--jumper-266-0
setreg1;>goto--jumper-266-0;goto--branch-266-0
goto;>seg_5--label
zerosize;;goto--jumper-266-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segxBOTH
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-273-0
s1push1
goto;>segment_single_x_twin--label
zerosize;;goto--jumper-273-0
#label
zerosize;;seg_5--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@5
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--276-0
dataread1;;tabr--adrbuff--276-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-278-0
goto;>goto--jumper-278-0
setreg1;>goto--jumper-278-0;goto--branch-278-0
goto;>seg_6--label
zerosize;;goto--jumper-278-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segxBOTH
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-285-0
s1push1
goto;>segment_single_x_twin--label
zerosize;;goto--jumper-285-0
#label
zerosize;;seg_6--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@6
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--288-0
dataread1;;tabr--adrbuff--288-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-290-0
goto;>goto--jumper-290-0
setreg1;>goto--jumper-290-0;goto--branch-290-0
goto;>seg_7--label
zerosize;;goto--jumper-290-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-299-0
s1push1
goto;>segment_single--label
zerosize;;goto--jumper-299-0
#label
zerosize;;seg_7--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@7
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--302-0
dataread1;;tabr--adrbuff--302-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-304-0
goto;>goto--jumper-304-0
setreg1;>goto--jumper-304-0;goto--branch-304-0
goto;>seg_8--label
zerosize;;goto--jumper-304-0
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-313-0
s1push1
goto;>segment_single--label
zerosize;;goto--jumper-313-0
#label
zerosize;;seg_8--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@8
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--316-0
dataread1;;tabr--adrbuff--316-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-318-0
goto;>goto--jumper-318-0
setreg1;>goto--jumper-318-0;goto--branch-318-0
goto;>seg_9--label
zerosize;;goto--jumper-318-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-325-0
s1push1
goto;>segment_single--label
zerosize;;goto--jumper-325-0
#label
zerosize;;seg_9--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@9
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--328-0
dataread1;;tabr--adrbuff--328-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-330-0
goto;>goto--jumper-330-0
setreg1;>goto--jumper-330-0;goto--branch-330-0
goto;>seg_10--label
zerosize;;goto--jumper-330-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segxBOTH
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-336-0
s1push1
goto;>segment_single_x_twin--label
zerosize;;goto--jumper-336-0
#label
zerosize;;seg_10--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@10
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--339-0
dataread1;;tabr--adrbuff--339-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-341-0
goto;>goto--jumper-341-0
setreg1;>goto--jumper-341-0;goto--branch-341-0
goto;>seg_11--label
zerosize;;goto--jumper-341-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-349-0
s1push1
goto;>segment_single--label
zerosize;;goto--jumper-349-0
#label
zerosize;;seg_11--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@11
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--352-0
dataread1;;tabr--adrbuff--352-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-354-0
goto;>goto--jumper-354-0
setreg1;>goto--jumper-354-0;goto--branch-354-0
goto;>seg_12--label
zerosize;;goto--jumper-354-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segyBOTH
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-360-0
s1push1
goto;>segment_single_y_twin--label
zerosize;;goto--jumper-360-0
#label
zerosize;;seg_12--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@12
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--363-0
dataread1;;tabr--adrbuff--363-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-365-0
goto;>goto--jumper-365-0
setreg1;>goto--jumper-365-0;goto--branch-365-0
goto;>seg_13--label
zerosize;;goto--jumper-365-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-372-0
s1push1
goto;>segment_single--label
zerosize;;goto--jumper-372-0
#label
zerosize;;seg_13--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@13
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--375-0
dataread1;;tabr--adrbuff--375-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-377-0
goto;>goto--jumper-377-0
setreg1;>goto--jumper-377-0;goto--branch-377-0
goto;>seg_14--label
zerosize;;goto--jumper-377-0
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segxBOTH
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-383-0
s1push1
goto;>segment_single_x_twin--label
zerosize;;goto--jumper-383-0
#label
zerosize;;seg_14--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@14
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--386-0
dataread1;;tabr--adrbuff--386-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional goto
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-388-0
goto;>goto--jumper-388-0
setreg1;>goto--jumper-388-0;goto--branch-388-0
goto;>seg_15--label
zerosize;;goto--jumper-388-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segy2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-396-0
s1push1
goto;>segment_single--label
zerosize;;goto--jumper-396-0
#label
zerosize;;seg_15--label
#SSTNPL table read instruction.
setreg1;10x16
dataread2;>offset
mul
dataread2;>@15
add
adddata1;>seg_data--table
datawrite1;>tabr--adrbuff--399-0
dataread1;;tabr--adrbuff--399-0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>boolt
#conditional return
dataread1;>boolt
dataread2;>$false
gotoif;>goto--branch-401-0
goto;>goto--jumper-401-0
s1pop1;;goto--branch-401-0
gotoreg1
zerosize;;goto--jumper-401-0
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx1
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segx2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>segyBOTH
#goto (extra code stores away return address.)
setreg1;>goto--jumper-408-0
s1push1
goto;>segment_single_y_twin--label
zerosize;;goto--jumper-408-0
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;segment_single--label
#get(1) (may be used with set, or asm code)
dataread1;>segx1
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #418-0
mul#SSTNPL Source Line: '418-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #420-0
add#SSTNPL Source Line: '420-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #421-0
iowrite1;>plot.x1#SSTNPL Source Line: '421-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segy1
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #426-0
mul#SSTNPL Source Line: '426-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #428-0
add#SSTNPL Source Line: '428-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #429-0
iowrite1;>plot.y1#SSTNPL Source Line: '429-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segx2
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #434-0
mul#SSTNPL Source Line: '434-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #436-0
add#SSTNPL Source Line: '436-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #437-0
iowrite1;>plot.x2#SSTNPL Source Line: '437-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segy2
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #442-0
mul#SSTNPL Source Line: '442-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #444-0
add#SSTNPL Source Line: '444-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #445-0
iowrite1;>plot.y2#SSTNPL Source Line: '445-0' 
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;segment_single_x_twin--label
#get(1) (may be used with set, or asm code)
dataread1;>segxBOTH
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #454-0
mul#SSTNPL Source Line: '454-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #456-0
add#SSTNPL Source Line: '456-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #457-0
iowrite1;>plot.x1#SSTNPL Source Line: '457-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #458-0
iowrite1;>plot.x2#SSTNPL Source Line: '458-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segy1
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #463-0
mul#SSTNPL Source Line: '463-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #465-0
add#SSTNPL Source Line: '465-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #466-0
iowrite1;>plot.y1#SSTNPL Source Line: '466-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segy2
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #471-0
mul#SSTNPL Source Line: '471-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #473-0
add#SSTNPL Source Line: '473-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #474-0
iowrite1;>plot.y2#SSTNPL Source Line: '474-0' 
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;segment_single_y_twin--label
#get(1) (may be used with set, or asm code)
dataread1;>segx1
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #483-0
mul#SSTNPL Source Line: '483-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #485-0
add#SSTNPL Source Line: '485-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #486-0
iowrite1;>plot.x1#SSTNPL Source Line: '486-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segyBOTH
#get2 (may be used with set2, and asm code.)
dataread2;>height
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #491-0
mul#SSTNPL Source Line: '491-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>posy
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #493-0
add#SSTNPL Source Line: '493-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #494-0
iowrite1;>plot.y1#SSTNPL Source Line: '494-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #495-0
iowrite1;>plot.y2#SSTNPL Source Line: '495-0' 
#get(1) (may be used with set, or asm code)
dataread1;>segx2
#get2 (may be used with set2, and asm code.)
dataread2;>width
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #499-0
mul#SSTNPL Source Line: '499-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>current_x
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #501-0
add#SSTNPL Source Line: '501-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #502-0
iowrite1;>plot.x2#SSTNPL Source Line: '502-0' 
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
