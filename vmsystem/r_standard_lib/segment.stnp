#################################
#RENDERING PARAMS
#initial Coordinates
var posx=0
var posy=0

#character size
#THESE ARE DOUBLED
var height=@8
var width=@4

#should be more than double height
var vert_space=@20
#should be more than double width
var hori_space=@10

var color_on=@9841


#NO LONGER USED
var color_off=@0

#################################

var current_x=0
var offset=0
var boolt=0
var segx1=0
var segy1=0
var segx2=0
var segy2=0
var segxBOTH=0
var segyBOTH=0
var b_tmp=0

label init
label init_pos
	get posx
	set current_x
return

var width_x2=0
var height_x2=0

label output
	get1 width
	asm muldata1;10x2
	set width_x2
	get1 height
	asm muldata1;10x2
	set height_x2
	drawcolor color_on
loop
	brdhead1
	set b_tmp
	
	val 0
	set offset
	
	
	if b_tmp,@0 return
	if b_tmp,@1 gsub newline
	if b_tmp,@1 top
	
	if b_tmp,:\s goto skip_draw
	
	ifmore b_tmp,:9 goto skip_to_symbols
	ifmore b_tmp,:Z goto skip_alpha
	ifmore b_tmp,:\s goto skip_alpha_lower
	
	#a-z
		
		
		#this code calculates constant. (can be replaced with constant once calculated)
		#asm setreg1;:a
		#asm setreg2;10x-2
		#asm add
		#asm abs1
		#asm iowrite1;>io.decdump
		
		#constant is 123
		asm setreg1;10x123
		get2 b_tmp
		asm add
		set offset
		
		
		goto end
	label skip_alpha_lower
	#A-Z
		#this code calculates constant. (can be replaced with constant once calculated)
		#asm setreg1;:A
		#asm setreg2;10x-2
		#asm add
		#asm abs1
		#asm iowrite1;>io.decdump
		
		asm setreg1;10x96
		get2 b_tmp
		asm add
		set offset
		
		
		goto end
	label skip_alpha
	#0-9
		
		#this code calculates constant. (can be replaced with constant once calculated)
		#asm setreg1;:0
		#asm setreg2;10x-28
		#asm add
		#asm abs1
		#asm iowrite1;>io.decdump
		
		asm setreg1;10x95
		get2 b_tmp
		asm add
		set offset
		goto end
		
	#SYMBOLS
	label skip_to_symbols
		if b_tmp,:? =offset @38
		if b_tmp,:+ =offset @39
		if b_tmp,:- =offset @40
		if b_tmp,:_ =offset @41
		if b_tmp,:< =offset @42
		if b_tmp,:> =offset @43
		if b_tmp,:" =offset @44
		if b_tmp,:' =offset @45
		if b_tmp,:$ =offset @46
		if b_tmp,:% =offset @47
		if b_tmp,:\v =offset @48#vertical bar
		if b_tmp,:/ =offset @49
		if b_tmp,:\b =offset @50#backslash
		if b_tmp,:= =offset @51
		if b_tmp,:. =offset @52
		if b_tmp,:\m =offset @53#comma
		if b_tmp,:[ =offset @54
		if b_tmp,:] =offset @55
		if b_tmp,:{ =offset @56
		if b_tmp,:} =offset @57
		if b_tmp,:^ =offset @58
		if b_tmp,:` =offset @59
		if b_tmp,:* =offset @60
		if b_tmp,:! =offset @61
		if b_tmp,:~ =offset @62
		if b_tmp,:& =offset @63
	
	label end
	gsub segment_draw
	label skip_draw
	add current_x,hori_space
	set current_x
end

table seg_data,16,62
#key 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
tdat +;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+#TEST
tdat 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0#space
tdat +;+;+;+;+;+;0;0;0;0;0;+;0;0;0;+#A
tdat +;+;+;+;0;+;+;+;0;0;+;+;0;0;0;+#B
tdat +;+;+;+;0;0;+;+;0;0;0;0;0;0;0;0#C
tdat +;0;0;0;+;+;+;+;0;0;0;+;0;0;0;+#D
tdat +;+;+;+;0;0;+;+;0;0;0;0;0;0;0;+#E
tdat +;+;+;+;0;0;0;0;0;0;0;0;0;0;0;+#F
tdat +;+;+;+;0;+;+;+;0;0;0;+;0;0;0;0#G
tdat +;+;0;0;+;+;0;0;0;0;0;+;0;0;0;+#H
tdat 0;0;+;+;0;0;+;+;0;+;0;0;0;+;0;0#I
tdat 0;0;+;+;0;0;0;0;0;+;0;0;0;0;+;0#J
tdat +;+;0;0;0;0;0;0;0;0;+;0;+;0;0;+#K
tdat +;+;0;0;0;0;+;+;0;0;0;0;0;0;0;0#L
tdat +;+;0;0;+;+;0;0;+;0;+;0;0;0;0;0#M
tdat +;+;0;0;+;+;0;0;+;0;0;0;+;0;0;0#N
tdat +;+;+;+;+;+;+;+;0;0;0;0;0;0;0;0#O
tdat +;+;+;+;+;0;0;0;0;0;0;+;0;0;0;+#P
tdat +;+;+;+;+;+;+;+;0;0;0;0;+;0;0;0#Q
tdat +;+;+;+;+;0;0;0;0;0;0;+;+;0;0;+#R
tdat 0;+;+;+;0;+;+;+;0;0;0;+;0;0;0;+#S
tdat 0;0;+;+;0;0;0;0;0;+;0;0;0;+;0;0#T
tdat +;+;0;0;+;+;+;+;0;0;0;0;0;0;0;0#U
tdat +;+;0;0;0;0;0;0;0;0;+;0;0;0;+;0#V
tdat +;+;0;0;+;+;0;0;0;0;0;0;+;0;+;0#W
tdat 0;0;0;0;0;0;0;0;+;0;+;0;+;0;+;0#X
tdat 0;0;0;0;0;0;0;0;+;0;+;0;0;+;0;0#Y
tdat 0;0;+;+;0;0;+;+;0;0;+;0;0;0;+;0#Z
tdat +;+;+;+;+;+;+;+;0;0;+;0;0;0;+;0#0
tdat 0;0;+;0;0;0;0;0;0;+;0;0;0;+;0;0#1
tdat 0;0;+;+;+;0;+;+;0;0;0;+;0;0;+;0#2
tdat 0;0;+;+;+;+;+;+;0;0;0;+;0;0;0;0#3
tdat 0;+;0;0;+;+;0;0;0;0;0;+;0;0;0;+#4
tdat 0;0;+;+;0;+;+;+;+;0;0;+;0;0;0;0#5
tdat +;+;+;+;0;+;+;+;0;0;0;+;0;0;0;+#6
tdat 0;0;+;+;0;0;0;0;0;0;+;0;0;0;+;0#7
tdat +;+;+;+;+;+;+;+;0;0;0;+;0;0;0;+#8
tdat 0;+;+;+;+;+;+;+;0;0;0;+;0;0;0;+#9
tdat +;0;+;+;+;0;0;0;0;0;0;+;0;0;0;+#?
tdat 0;0;0;0;0;0;0;0;0;+;0;+;0;+;0;+#+
tdat 0;0;0;0;0;0;0;0;0;0;0;+;0;0;0;+#-
tdat 0;0;0;0;0;0;+;+;0;0;0;0;0;0;0;0#_
tdat 0;0;0;0;0;0;0;0;0;0;+;0;+;0;0;0#<
tdat 0;0;0;0;0;0;0;0;+;0;0;0;0;0;+;0#>
tdat 0;0;0;0;+;0;0;0;0;+;0;0;0;0;0;0#"
tdat 0;0;0;0;+;0;0;0;0;0;0;0;0;0;0;0#'
tdat 0;+;+;+;0;+;+;+;0;+;0;+;0;+;0;+#$
tdat 0;+;+;0;0;+;+;0;0;+;+;+;0;+;+;+#%
tdat 0;0;0;0;0;0;0;0;0;+;0;0;0;+;0;0#|
tdat 0;0;0;0;0;0;0;0;0;0;+;0;0;0;+;0#/
tdat 0;0;0;0;0;0;0;0;+;0;0;0;+;0;0;0#\
tdat 0;0;0;0;0;0;+;+;0;0;0;+;0;0;0;+#=
tdat 0;0;0;0;0;0;0;0;0;0;0;0;0;+;0;0#.
tdat 0;0;0;0;0;0;0;0;0;0;0;0;0;0;+;0#,
tdat 0;0;0;+;0;0;+;0;0;+;0;0;0;+;0;0#[
tdat 0;0;+;0;0;0;0;+;0;+;0;0;0;+;0;0#]
tdat 0;0;0;+;0;0;+;0;0;+;0;0;0;+;0;+#{
tdat 0;0;+;0;0;0;0;+;0;+;0;+;0;+;0;0#}
tdat 0;0;0;0;0;0;0;0;0;0;0;0;+;0;+;0#^
tdat 0;0;+;0;0;0;0;0;+;+;0;0;0;0;0;0#`
tdat 0;0;0;0;0;0;0;0;+;+;+;+;+;+;+;+#*
tdat 0;+;+;0;0;0;0;+;0;+;0;0;0;0;0;+#!
tdat +;0;0;0;0;+;0;0;0;0;0;0;+;0;0;+#~
tdat +;0;0;+;0;0;0;+;0;+;+;+;+;+;0;+#&

#key 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F




label newline
	get posx
	set current_x
	add posy,vert_space
	set posy
return

######### EXPLANATION 
#abc -> a=coordinate index (0, 1, 2), b=axis (x or y), c=registers affected (1, 2, or b for 1 & 2)
#

def 0xb {get1 current_x / asm iowrite1;>plot.x1 / asm iowrite1;>plot.x2}
def 0x1 {get1 current_x / asm iowrite1;>plot.x1}
def 0x2 {get1 current_x / asm iowrite1;>plot.x2}

def 0yb {get1 posy / asm iowrite1;>plot.y1 / asm iowrite1;>plot.y2}
def 0y1 {get1 posy / asm iowrite1;>plot.y1}
def 0y2 {get1 posy / asm iowrite1;>plot.y2}

def 1xb {get1 current_x / get2 width / asm add / asm iowrite1;>plot.x1 / asm iowrite1;>plot.x2}
def 1x1 {get1 current_x / get2 width / asm add / asm iowrite1;>plot.x1}
def 1x2 {get1 current_x / get2 width / asm add / asm iowrite1;>plot.x2}

def 1yb {get1 posy / get2 height / asm add / asm iowrite1;>plot.y1 / asm iowrite1;>plot.y2}
def 1y1 {get1 posy / get2 height / asm add / asm iowrite1;>plot.y1}
def 1y2 {get1 posy / get2 height / asm add / asm iowrite1;>plot.y2}

def 2xb {get1 current_x / get2 width_x2 / asm add / asm iowrite1;>plot.x1 / asm iowrite1;>plot.x2}
def 2x1 {get1 current_x / get2 width_x2 / asm add / asm iowrite1;>plot.x1}
def 2x2 {get1 current_x / get2 width_x2 / asm add / asm iowrite1;>plot.x2}

def 2yb {get1 posy / get2 height_x2 / asm add / asm iowrite1;>plot.y1 / asm iowrite1;>plot.y2}
def 2y1 {get1 posy / get2 height_x2 / asm add / asm iowrite1;>plot.y1}
def 2y2 {get1 posy / get2 height_x2 / asm add / asm iowrite1;>plot.y2}

label segment_draw
##0
	tabr seg_data,@0,offset
	set boolt
	if boolt,$true begin
		!0xb()
		!2y2()
		!1y1()
		drawline
	end
##1
	tabr seg_data,@1,offset
	set boolt
	if boolt,$true begin
		!0xb()
		!0y1()
		!1y2()
		drawline
	end

##2
	tabr seg_data,@2,offset
	set boolt
	if boolt,$true begin
		!0x1()
		!0yb()
		!1x2()
		drawline
	end

##3
	tabr seg_data,@3,offset
	set boolt
	if boolt,$true begin
		!1x1()
		!0yb()
		!2x2()
		drawline
	end

##4
	tabr seg_data,@4,offset
	set boolt
	if boolt,$true begin
		!2xb()
		!0y1()
		!1y2()
		drawline
	end

##5
	tabr seg_data,@5,offset
	set boolt
	if boolt,$true begin
		!2xb()
		!2y2()
		!1y1()
		drawline
	end

##6
	tabr seg_data,@6,offset
	set boolt
	if boolt,$true begin
		!2x1()
		!2yb()
		!1x2()
		drawline
	end

##7
	tabr seg_data,@7,offset
	set boolt
	if boolt,$true begin
		!1x1()
		!2yb()
		!0x2()
		drawline
	end

##8
	tabr seg_data,@8,offset
	set boolt
	if boolt,$true begin
		!0x1()
		!0y1()
		!1x2()
		!1y2()
		drawline
	end

##9
	tabr seg_data,@9,offset
	set boolt
	if boolt,$true begin
		!0y1()
		!1xb()
		!1y2()
		drawline
	end

##10
	tabr seg_data,@10,offset
	set boolt
	if boolt,$true begin
		!2x1()
		!0y1()
		!1x2()
		!1y2()
		drawline
	end

##11
	tabr seg_data,@11,offset
	set boolt
	if boolt,$true begin
		!2x1()
		!1yb()
		!1x2()
		drawline
	end

##12
	tabr seg_data,@12,offset
	set boolt
	if boolt,$true begin
		!2x1()
		!2y1()
		!1x2()
		!1y2()
		drawline
	end

##13
	tabr seg_data,@13,offset
	set boolt
	if boolt,$true begin
		!2y1()
		!1xb()
		!1y2()
		drawline
	end

##14
	tabr seg_data,@14,offset
	set boolt
	if boolt,$true begin
		!0x1()
		!2y1()
		!1x2()
		!1y2()
		drawline
	end

##15
	tabr seg_data,@15,offset
	set boolt
	if boolt,$true begin
		!0x1()
		!1x2()
		!1yb()
		drawline
	end

return