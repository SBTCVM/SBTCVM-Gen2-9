#################################
#RENDERING PARAMS
#initial Coordinates
var posx=0
var posy=0

#character size
#THESE ARE DOUBLED
var height=@8
var width=@4

#should be more than double height
var vert_space=@20
#should be more than double width
var hori_space=@10

var color_on=@9841


#NO LONGER USED
var color_off=@0

#################################

var current_x=0
var offset=0
var boolt=0
var segx1=0
var segy1=0
var segx2=0
var segy2=0
var b_tmp=0

label init_pos
	get posx
	set current_x
return

label output
	brdhead1
	set b_tmp
	
	val 0
	set offset
	#A-Z
	
	if b_tmp,@0 return
	if b_tmp,@1 gsub newline
	if b_tmp,@1 goto output
	#if b_tmp,:\s =offset @1
	if b_tmp,:\s goto skip_draw
	
	ifmore b_tmp,:9 goto skip_to_symbols
	ifmore b_tmp,:Z goto skip_alpha
	#ifmore b_tmp,:T goto skip_alpha_upper_thirdquar
	#ifmore b_tmp,:M goto skip_alpha_upper_firsthalf
	#ifmore b_tmp,:G goto skip_alpha_upper_firstquar
	
	ifmore b_tmp,:\s goto skip_alpha_lower
	
	
	#this code calculates constant. (can be replaced with constant once calculated)
	#asm setreg1;:a
	#asm setreg2;10x-2
	#asm add
	#asm abs1
	#asm iowrite1;>io.decdump
	
	#constant is 123
	asm setreg1;10x123
	get2 b_tmp
	asm add
	set offset
	
	
	goto end
	label skip_alpha_lower
	
	#this code calculates constant. (can be replaced with constant once calculated)
	#asm setreg1;:A
	#asm setreg2;10x-2
	#asm add
	#asm abs1
	#asm iowrite1;>io.decdump
	
	asm setreg1;10x96
	get2 b_tmp
	asm add
	set offset
	
	
	goto end
	label skip_alpha
	#0-9
	
	#this code calculates constant. (can be replaced with constant once calculated)
	#asm setreg1;:0
	#asm setreg2;10x-28
	#asm add
	#asm abs1
	#asm iowrite1;>io.decdump
	
	asm setreg1;10x95
	get2 b_tmp
	asm add
	set offset
	goto end
	
	#SYMBOLS
	label skip_to_symbols
	if b_tmp,:? =offset @38
	if b_tmp,:+ =offset @39
	if b_tmp,:- =offset @40
	if b_tmp,:_ =offset @41
	if b_tmp,:< =offset @42
	if b_tmp,:> =offset @43
	if b_tmp,:" =offset @44
	if b_tmp,:' =offset @45
	if b_tmp,:$ =offset @46
	if b_tmp,:% =offset @47
	if b_tmp,:\v =offset @48#vertical bar
	if b_tmp,:/ =offset @49
	if b_tmp,:\b =offset @50#backslash
	if b_tmp,:= =offset @51
	if b_tmp,:. =offset @52
	if b_tmp,:\m =offset @53#comma
	
	label end
	gsub segment_draw
	label skip_draw
	add current_x,hori_space
	set current_x
goto output

table seg_data,16,54
#key 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
tdat +;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+#TEST
tdat 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0#space
tdat +;+;+;+;+;+;0;0;0;0;0;+;0;0;0;+#A
tdat +;+;+;+;0;+;+;+;0;0;+;+;0;0;0;+#B
tdat +;+;+;+;0;0;+;+;0;0;0;0;0;0;0;0#C
tdat +;0;0;0;+;+;+;+;0;0;0;+;0;0;0;+#D
tdat +;+;+;+;0;0;+;+;0;0;0;0;0;0;0;+#E
tdat +;+;+;+;0;0;0;0;0;0;0;0;0;0;0;+#F
tdat +;+;+;+;0;+;+;+;0;0;0;+;0;0;0;0#G
tdat +;+;0;0;+;+;0;0;0;0;0;+;0;0;0;+#H
tdat 0;0;+;+;0;0;+;+;0;+;0;0;0;+;0;0#I
tdat 0;0;+;+;0;0;0;0;0;+;0;0;0;0;+;0#J
tdat +;+;0;0;0;0;0;0;0;0;+;0;+;0;0;+#K
tdat +;+;0;0;0;0;+;+;0;0;0;0;0;0;0;0#L
tdat +;+;0;0;+;+;0;0;+;0;+;0;0;0;0;0#M
tdat +;+;0;0;+;+;0;0;+;0;0;0;+;0;0;0#N
tdat +;+;+;+;+;+;+;+;0;0;0;0;0;0;0;0#O
tdat +;+;+;+;+;0;0;0;0;0;0;+;0;0;0;+#P
tdat +;+;+;+;+;+;+;+;0;0;0;0;+;0;0;0#Q
tdat +;+;+;+;+;0;0;0;0;0;0;+;+;0;0;+#R
tdat 0;+;+;+;0;+;+;+;0;0;0;+;0;0;0;+#S
tdat 0;0;+;+;0;0;0;0;0;+;0;0;0;+;0;0#T
tdat +;+;0;0;+;+;+;+;0;0;0;0;0;0;0;0#U
tdat +;+;0;0;0;0;0;0;0;0;+;0;0;0;+;0#V
tdat +;+;0;0;+;+;0;0;0;0;0;0;+;0;+;0#W
tdat 0;0;0;0;0;0;0;0;+;0;+;0;+;0;+;0#X
tdat 0;0;0;0;0;0;0;0;+;0;+;0;0;+;0;0#Y
tdat 0;0;+;+;0;0;+;+;0;0;+;0;0;0;+;0#Z
tdat +;+;+;+;+;+;+;+;0;0;+;0;0;0;+;0#0
tdat 0;0;+;0;0;0;0;0;0;+;0;0;0;+;0;0#1
tdat 0;0;+;+;+;0;+;+;0;0;0;+;0;0;+;0#2
tdat 0;0;+;+;+;+;+;+;0;0;0;+;0;0;0;0#3
tdat 0;+;0;0;+;+;0;0;0;0;0;+;0;0;0;+#4
tdat 0;0;+;+;0;+;+;+;+;0;0;+;0;0;0;0#5
tdat +;+;+;+;0;+;+;+;0;0;0;+;0;0;0;+#6
tdat 0;0;+;+;0;0;0;0;0;0;+;0;0;0;+;0#7
tdat +;+;+;+;+;+;+;+;0;0;0;+;0;0;0;+#8
tdat 0;+;+;+;+;+;+;+;0;0;0;+;0;0;0;+#9
tdat +;0;+;+;+;0;0;0;0;0;0;+;0;0;0;+#?
tdat 0;0;0;0;0;0;0;0;0;+;0;+;0;+;0;+#+
tdat 0;0;0;0;0;0;0;0;0;0;0;+;0;0;0;+#-
tdat 0;0;0;0;0;0;+;+;0;0;0;0;0;0;0;0#_
tdat 0;0;0;0;0;0;0;0;0;0;+;0;+;0;0;0#<
tdat 0;0;0;0;0;0;0;0;+;0;0;0;0;0;+;0#>
tdat 0;0;0;0;+;0;0;0;0;+;0;0;0;0;0;0#"
tdat 0;0;0;0;+;0;0;0;0;0;0;0;0;0;0;0#'
tdat 0;+;+;+;0;+;+;+;0;+;0;+;0;+;0;+#$
tdat 0;+;+;0;0;+;+;0;0;+;+;+;0;+;+;+#%
tdat 0;0;0;0;0;0;0;0;0;+;0;0;0;+;0;0#|
tdat 0;0;0;0;0;0;0;0;0;0;+;0;0;0;+;0#/
tdat 0;0;0;0;0;0;0;0;+;0;0;0;+;0;0;0#\
tdat 0;0;0;0;0;0;+;+;0;0;0;+;0;0;0;+#=
tdat 0;0;0;0;0;0;0;0;0;0;0;0;0;+;0;0#.
tdat 0;0;0;0;0;0;0;0;0;0;0;0;0;0;+;0#,

#key 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F




label newline
	get posx
	set current_x
	add posy,vert_space
	set posy
return


label segment_draw
drawcolor color_on
##0
	tabr seg_data,@0,offset
	set boolt
	if boolt,$false goto seg_1
	val @0
	set segx1
	val @1
	set segy1
	val @0
	set segx2
	val @2
	set segy2
	gsub segment_single
label seg_1
##1
	tabr seg_data,@1,offset
	set boolt
	if boolt,$false goto seg_2
	val @0
	set segx1
	val @0
	set segy1
	val @0
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_2
##2
	tabr seg_data,@2,offset
	set boolt
	if boolt,$false goto seg_3
	val @0
	set segx1
	val @0
	set segy1
	val @1
	set segx2
	val @0
	set segy2
	gsub segment_single
label seg_3
##3
	tabr seg_data,@3,offset
	set boolt
	if boolt,$false goto seg_4
	val @1
	set segx1
	val @0
	set segy1
	val @2
	set segx2
	val @0
	set segy2
	gsub segment_single
label seg_4
##4
	tabr seg_data,@4,offset
	set boolt
	if boolt,$false goto seg_5
	val @2
	set segx1
	val @0
	set segy1
	val @2
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_5
##5
	tabr seg_data,@5,offset
	set boolt
	if boolt,$false goto seg_6
	val @2
	set segx1
	val @1
	set segy1
	val @2
	set segx2
	val @2
	set segy2
	gsub segment_single
label seg_6
##6
	tabr seg_data,@6,offset
	set boolt
	if boolt,$false goto seg_7
	val @2
	set segx1
	val @2
	set segy1
	val @1
	set segx2
	val @2
	set segy2
	gsub segment_single
label seg_7
##7
	tabr seg_data,@7,offset
	set boolt
	if boolt,$false goto seg_8
	val @1
	set segx1
	val @2
	set segy1
	val @0
	set segx2
	val @2
	set segy2
	gsub segment_single
label seg_8
##8
	tabr seg_data,@8,offset
	set boolt
	if boolt,$false goto seg_9
	val @0
	set segx1
	val @0
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_9
##9
	tabr seg_data,@9,offset
	set boolt
	if boolt,$false goto seg_10
	val @1
	set segx1
	val @0
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_10
##10
	tabr seg_data,@10,offset
	set boolt
	if boolt,$false goto seg_11
	val @2
	set segx1
	val @0
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_11
##11
	tabr seg_data,@11,offset
	set boolt
	if boolt,$false goto seg_12
	val @2
	set segx1
	val @1
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_12
##12
	tabr seg_data,@12,offset
	set boolt
	if boolt,$false goto seg_13
	val @2
	set segx1
	val @2
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_13
##13
	tabr seg_data,@13,offset
	set boolt
	if boolt,$false goto seg_14
	val @1
	set segx1
	val @2
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_14
##14
	tabr seg_data,@14,offset
	set boolt
	if boolt,$false goto seg_15
	val @0
	set segx1
	val @2
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single
label seg_15
##15
	tabr seg_data,@15,offset
	set boolt
	if boolt,$false return
	val @0
	set segx1
	val @1
	set segy1
	val @1
	set segx2
	val @1
	set segy2
	gsub segment_single



return

label segment_single
	
	get1 segx1
	get2 width
	asm mul
	get2 current_x
	asm add
	asm iowrite1;>plot.x1
	
	
	get1 segy1
	get2 height
	asm mul
	get2 posy
	asm add
	asm iowrite1;>plot.y1
	
	
	get1 segx2
	get2 width
	asm mul
	get2 current_x
	asm add
	asm iowrite1;>plot.x2
	
	
	get1 segy2
	get2 height
	asm mul
	get2 posy
	asm add
	asm iowrite1;>plot.y2
	
	drawline
return

