#SSTNPL COMPILER v0.4.0
#header
head-rname=dosargs
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/dosargs.stnp
null;0;size
null;0;itersize
null;0;shell_entry_zeroit
null;0;shell_entry_buff
null;0;shell_entry_chbuff
null;10x0;clearbuffer
null;10x80;max
null;10x0;@0
null;10x1;@1
null;10x0;getentry_tobuff_iter
null;10x0;getentry_pad_iter
#table width=85, height=1
zerosize;;buffer--table
#tpad
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
null;0
#label
zerosize;;getentry--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>size
#label
zerosize;;getentry_loop--label
#buffer 2 tail read
ioread1;>buffer.2.read.tail
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_chbuff
#conditional subroutine goto
dataread1;>shell_entry_chbuff
dataread2;>@0
gotoif;>goto--branch-37-0
goto;>goto--jumper-37-0
setreg1;>goto--jumper-37-0;goto--branch-37-0
s1push1
goto;>getentry_tobuff--label
zerosize;;goto--jumper-37-0
#conditional return
dataread1;>shell_entry_chbuff
dataread2;>@0
gotoif;>goto--branch-38-0
goto;>goto--jumper-38-0
s1pop1;;goto--branch-38-0
gotoreg1
zerosize;;goto--jumper-38-0
#conditional goto
dataread1;>size
dataread2;>max
gotoif;>goto--branch-41-0
goto;>goto--jumper-41-0
setreg1;>goto--jumper-41-0;goto--branch-41-0
goto;>getentry_loop--label
zerosize;;goto--jumper-41-0
#add (2op math)
dataread1;>size
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>size
#get(1) (may be used with set, or asm code)
dataread1;>shell_entry_chbuff
#stack push (uses stack 2)
s2push1
#goto 
goto;>getentry_loop--label
#label
zerosize;;getentry_tobuff--label
#conditional return
dataread1;>size
dataread2;>@0
gotoif;>goto--branch-53-0
goto;>goto--jumper-53-0
s1pop1;;goto--branch-53-0
gotoreg1
zerosize;;goto--jumper-53-0
#stack reverse (uses stack 2)
s2reverse
#subtract (2op math)
dataread1;>size
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>itersize
#add (2op math)
dataread1;>size
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_zeroit
#Upward range iterator
dataread1;>@0
datawrite1;>getentry_tobuff_iter
setreg1;>uiter-retpos-59-0;uiter-loopback-59-0
s1push1
goto;>getentry_tobuff_loop--label
dataread1;>getentry_tobuff_iter;uiter-retpos-59-0
setreg2;10x1
add
datawrite1;>getentry_tobuff_iter
dataread2;>itersize
gotoifless;>uiter-loopback-59-0
gotoif;>uiter-loopback-59-0

#Upward range iterator
dataread1;>size
datawrite1;>getentry_pad_iter
setreg1;>uiter-retpos-60-0;uiter-loopback-60-0
s1push1
goto;>getentry_pad--label
dataread1;>getentry_pad_iter;uiter-retpos-60-0
setreg2;10x1
add
datawrite1;>getentry_pad_iter
dataread2;>shell_entry_zeroit
gotoifless;>uiter-loopback-60-0
gotoif;>uiter-loopback-60-0

#conditional return
dataread1;>clearbuffer
dataread2;>@0
gotoif;>goto--branch-61-0
goto;>goto--jumper-61-0
s1pop1;;goto--branch-61-0
gotoreg1
zerosize;;goto--jumper-61-0
#Upward range iterator
dataread1;>shell_entry_zeroit
datawrite1;>getentry_pad_iter
setreg1;>uiter-retpos-62-0;uiter-loopback-62-0
s1push1
goto;>getentry_pad--label
dataread1;>getentry_pad_iter;uiter-retpos-62-0
setreg2;10x1
add
datawrite1;>getentry_pad_iter
dataread2;>max
gotoifless;>uiter-loopback-62-0
gotoif;>uiter-loopback-62-0

#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getentry_tobuff_loop--label
#stack pop (uses stack 2)
s2pop1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>shell_entry_buff
#SSTNPL table write instruction.
setreg1;10x85
dataread2;>@0
mul
dataread2;>getentry_tobuff_iter
add
adddata1;>buffer--table
datawrite1;>tabw--adrbuff--69-0
dataread1;>shell_entry_buff
datawrite1;;tabw--adrbuff--69-0
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;getentry_pad--label
#SSTNPL table write instruction.
setreg1;10x85
dataread2;>@0
mul
dataread2;>getentry_pad_iter
add
adddata1;>buffer--table
datawrite1;>tabw--adrbuff--74-0
dataread1;>@0
datawrite1;;tabw--adrbuff--74-0
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
