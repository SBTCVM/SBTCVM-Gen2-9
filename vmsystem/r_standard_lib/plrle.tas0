#SSTNPL COMPILER v0.4.0
#header
head-rname=plrle
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/plrle.stnp
null;0;offset
null;10x1;pixx
null;10x1;pixy
null;10x-121;posx
null;10x-121;posy
null;10x0;do_trans
null;10x0;transkey
null;0;RL_pointer
null;0;RL_SIZE
null;0;RL_loopcount
null;0;RL_data
null;0;draw_pixx
null;0;draw_pixy
null;0;px
null;0;py
null;10x1;@1
null;10x0;rl_iter
null;10x-1;@-1
null;0;RL_BARWIDE
null;0;RL_BARWIDEDRAW
null;0;RL_loopcount_add1
null;10x0;@0
#label
zerosize;;decode--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#get(1) (may be used with set, or asm code)
dataread1;>posy
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>py
#plotter y pos 1
dataread1;>posy
iowrite1;>plot.y1
#plotter x pos 1
dataread1;>posx
iowrite1;>plot.x1
#add (2op math)
dataread1;>pixx
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>draw_pixx
#add (2op math)
dataread1;>pixy
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>draw_pixy
#plotter width
dataread1;>draw_pixx
iowrite1;>plot.width
#plotter height
dataread1;>draw_pixy
iowrite1;>plot.height
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#copy variables 
dataread1;>offset
datawrite1;>RL_pointer
#get(1) (may be used with set, or asm code)
dataread1;>RL_pointer
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #51-0
datawrite1;>RL_GET_SIZE#SSTNPL Source Line: '51-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #52-0
dataread1;;RL_GET_SIZE#SSTNPL Source Line: '52-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#subtract (2op math)
dataread1;>RL_SIZE
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#add (2op math)
dataread1;>RL_pointer
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_pointer
#Upward range iterator
dataread1;>RL_pointer
datawrite1;>rl_iter
setreg1;>uiter-retpos-61-0;uiter-loopback-61-0
s1push1
goto;>RL_decode_mainloop--label
dataread1;>rl_iter;uiter-retpos-61-0
setreg2;10x1
add
datawrite1;>rl_iter
dataread2;>RL_SIZE
gotoifless;>uiter-loopback-61-0
gotoif;>uiter-loopback-61-0

#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;RL_decode_mainloop--label
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #71-0
datawrite1;>RL_GET_DATA#SSTNPL Source Line: '71-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #72-0
datawrite1;>RL_GET_LEN#SSTNPL Source Line: '72-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #75-0
instread1;;RL_GET_LEN#SSTNPL Source Line: '75-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #79-0
dataread1;;RL_GET_DATA#SSTNPL Source Line: '79-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_data
#conditional goto
dataread1;>RL_loopcount
dataread2;>@-1
gotoif;>goto--branch-83-0
goto;>goto--jumper-83-0
setreg1;>goto--jumper-83-0;goto--branch-83-0
goto;>RL_newline--label
zerosize;;goto--jumper-83-0
#plotter draw line
dataread1;>RL_data
iowrite1;>plot.color
#goto (extra code stores away return address.)
setreg1;>goto--jumper-88-0
s1push1
goto;>RL_printBAR--label
zerosize;;goto--jumper-88-0
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;RL_newline--label
#add (2op math)
dataread1;>py
dataread2;>pixy
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>py
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #95-0
iowrite1;>plot.y1#SSTNPL Source Line: '95-0' 
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #99-0
iowrite1;>plot.x1#SSTNPL Source Line: '99-0' 
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;RL_printBAR--label
#get(1) (may be used with set, or asm code)
dataread1;>RL_loopcount
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #111-0
adddata1;10x1#SSTNPL Source Line: '111-0' 
#get2 (may be used with set2, and asm code.)
dataread2;>pixx
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #113-0
mul#SSTNPL Source Line: '113-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_BARWIDE
#conditional goto
dataread1;>do_trans
dataread2;>@0
gotoif;>goto--branch-118-0
goto;>goto--jumper-118-0
setreg1;>goto--jumper-118-0;goto--branch-118-0
goto;>no_trans--label
zerosize;;goto--jumper-118-0
#conditional goto
dataread1;>RL_data
dataread2;>transkey
gotoif;>goto--branch-119-0
goto;>goto--jumper-119-0
setreg1;>goto--jumper-119-0;goto--branch-119-0
goto;>yes_trans--label
zerosize;;goto--jumper-119-0
#label
zerosize;;no_trans--label
#get(1) (may be used with set, or asm code)
dataread1;>RL_BARWIDE
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #124-0
adddata1;10x1#SSTNPL Source Line: '124-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #126-0
iowrite1;>plot.width#SSTNPL Source Line: '126-0' 
#plotter draw rect
iowrite1;>plot.rect
#label
zerosize;;yes_trans--label
#add (2op math)
dataread1;>RL_BARWIDE
dataread2;>px
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #134-0
iowrite1;>plot.x1#SSTNPL Source Line: '134-0' 
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
