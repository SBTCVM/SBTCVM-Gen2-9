#SSTNPL COMPILER v0.3.0
#header
head-rname=plrle
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/plrle.stnp
null;0;offset
null;10x1;pixx
null;10x1;pixy
null;10x-121;posx
null;10x-121;posy
null;0;RL_pointer
null;0;RL_SIZE
null;0;RL_loopcount
null;0;RL_data
null;0;draw_pixx
null;0;draw_pixy
null;0;px
null;0;py
null;10x1;@1
null;10x0;rl_iter
null;10x-1;@-1
null;0;RL_BARWIDE
null;0;RL_BARWIDEDRAW
null;0;RL_loopcount_add1
#label
null;;decode--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#get(1) (may be used with set, or asm code)
dataread1;>posy
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>py
#plotter y pos 1
dataread1;>posy
iowrite1;>plot.y1
#plotter x pos 1
dataread1;>posx
iowrite1;>plot.x1
#add (2op math)
dataread1;>pixx
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>draw_pixx
#add (2op math)
dataread1;>pixy
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>draw_pixy
#plotter width
dataread1;>draw_pixx
iowrite1;>plot.width
#plotter height
dataread1;>draw_pixy
iowrite1;>plot.height
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#copy variables 
dataread1;>offset
datawrite1;>RL_pointer
#get(1) (may be used with set, or asm code)
dataread1;>RL_pointer
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #48
datawrite1;>RL_GET_SIZE#SSTNPL Source Line: '48' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #49
dataread1;;RL_GET_SIZE#SSTNPL Source Line: '49' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#subtract (2op math)
dataread1;>RL_SIZE
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#add (2op math)
dataread1;>RL_pointer
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_pointer
#Upward range iterator
dataread1;>RL_pointer
datawrite1;>rl_iter
setreg1;>uiter-retpos-58;uiter-loopback-58
s1push1
goto;>RL_decode_mainloop--label
dataread1;>rl_iter;uiter-retpos-58
setreg2;10x1
add
datawrite1;>rl_iter
dataread2;>RL_SIZE
gotoifless;>uiter-loopback-58
gotoif;>uiter-loopback-58

#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_decode_mainloop--label
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #69
datawrite1;>RL_GET_DATA#SSTNPL Source Line: '69' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #70
dataread1;;RL_GET_DATA#SSTNPL Source Line: '70' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_data
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #76
datawrite1;>RL_GET_LEN#SSTNPL Source Line: '76' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #77
instread1;;RL_GET_LEN#SSTNPL Source Line: '77' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#conditional goto
dataread1;>RL_loopcount
dataread2;>@-1
gotoif;>goto--branch-81
goto;>goto--jumper-81
setreg1;>goto--jumper-81;goto--branch-81
goto;>RL_newline--label
null;;goto--jumper-81
#plotter draw line
dataread1;>RL_data
iowrite1;>plot.color
#goto (extra code stores away return address.)
setreg1;>goto--jumper-86
s1push1
goto;>RL_printBAR--label
null;;goto--jumper-86
#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_newline--label
#add (2op math)
dataread1;>py
dataread2;>pixy
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>py
#plotter y pos 1
dataread1;>py
iowrite1;>plot.y1
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#plotter x pos 1
dataread1;>px
iowrite1;>plot.x1
#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_printBAR--label
#add (2op math)
dataread1;>RL_loopcount
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount_add1
#multiply (2op math)
dataread1;>RL_loopcount_add1
dataread2;>pixx
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_BARWIDE
#add (2op math)
dataread1;>RL_BARWIDE
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_BARWIDEDRAW
#plotter width
dataread1;>RL_BARWIDEDRAW
iowrite1;>plot.width
#plotter draw rect
iowrite1;>plot.rect
#add (2op math)
dataread1;>RL_BARWIDE
dataread2;>px
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#plotter x pos 1
dataread1;>px
iowrite1;>plot.x1
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
