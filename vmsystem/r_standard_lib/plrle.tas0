#SSTNPL COMPILER v0.3.0
#header
head-rname=plrle
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/r_standard_lib/plrle.stnp
null;0;offset
null;10x1;pixx
null;10x1;pixy
null;10x-121;posx
null;10x-121;posy
null;10x0;do_trans
null;10x0;transkey
null;0;RL_pointer
null;0;RL_SIZE
null;0;RL_loopcount
null;0;RL_data
null;0;draw_pixx
null;0;draw_pixy
null;0;px
null;0;py
null;10x1;@1
null;10x0;rl_iter
null;10x-1;@-1
null;0;RL_BARWIDE
null;0;RL_BARWIDEDRAW
null;0;RL_loopcount_add1
null;10x0;@0
#label
null;;decode--label
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#get(1) (may be used with set, or asm code)
dataread1;>posy
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>py
#plotter y pos 1
dataread1;>posy
iowrite1;>plot.y1
#plotter x pos 1
dataread1;>posx
iowrite1;>plot.x1
#add (2op math)
dataread1;>pixx
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>draw_pixx
#add (2op math)
dataread1;>pixy
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>draw_pixy
#plotter width
dataread1;>draw_pixx
iowrite1;>plot.width
#plotter height
dataread1;>draw_pixy
iowrite1;>plot.height
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#copy variables 
dataread1;>offset
datawrite1;>RL_pointer
#get(1) (may be used with set, or asm code)
dataread1;>RL_pointer
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #51
datawrite1;>RL_GET_SIZE#SSTNPL Source Line: '51' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #52
dataread1;;RL_GET_SIZE#SSTNPL Source Line: '52' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#subtract (2op math)
dataread1;>RL_SIZE
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#add (2op math)
dataread1;>RL_pointer
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_pointer
#Upward range iterator
dataread1;>RL_pointer
datawrite1;>rl_iter
setreg1;>uiter-retpos-61;uiter-loopback-61
s1push1
goto;>RL_decode_mainloop--label
dataread1;>rl_iter;uiter-retpos-61
setreg2;10x1
add
datawrite1;>rl_iter
dataread2;>RL_SIZE
gotoifless;>uiter-loopback-61
gotoif;>uiter-loopback-61

#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_decode_mainloop--label
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #72
datawrite1;>RL_GET_DATA#SSTNPL Source Line: '72' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #73
dataread1;;RL_GET_DATA#SSTNPL Source Line: '73' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_data
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #79
datawrite1;>RL_GET_LEN#SSTNPL Source Line: '79' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #80
instread1;;RL_GET_LEN#SSTNPL Source Line: '80' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#conditional goto
dataread1;>RL_loopcount
dataread2;>@-1
gotoif;>goto--branch-84
goto;>goto--jumper-84
setreg1;>goto--jumper-84;goto--branch-84
goto;>RL_newline--label
null;;goto--jumper-84
#plotter draw line
dataread1;>RL_data
iowrite1;>plot.color
#goto (extra code stores away return address.)
setreg1;>goto--jumper-89
s1push1
goto;>RL_printBAR--label
null;;goto--jumper-89
#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_newline--label
#add (2op math)
dataread1;>py
dataread2;>pixy
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>py
#plotter y pos 1
dataread1;>py
iowrite1;>plot.y1
#get(1) (may be used with set, or asm code)
dataread1;>posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#plotter x pos 1
dataread1;>px
iowrite1;>plot.x1
#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_printBAR--label
#get(1) (may be used with set, or asm code)
dataread1;>RL_loopcount
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #113
setreg2;10x1#SSTNPL Source Line: '113' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #114
add#SSTNPL Source Line: '114' 
#get2 (may be used with set2, and asm code.)
dataread2;>pixx
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #116
mul#SSTNPL Source Line: '116' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_BARWIDE
#conditional goto
dataread1;>do_trans
dataread2;>@0
gotoif;>goto--branch-121
goto;>goto--jumper-121
setreg1;>goto--jumper-121;goto--branch-121
goto;>no_trans--label
null;;goto--jumper-121
#conditional goto
dataread1;>RL_data
dataread2;>transkey
gotoif;>goto--branch-122
goto;>goto--jumper-122
setreg1;>goto--jumper-122;goto--branch-122
goto;>yes_trans--label
null;;goto--jumper-122
#label
null;;no_trans--label
#add (2op math)
dataread1;>RL_BARWIDE
dataread2;>@1
add
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #127
iowrite1;>plot.width#SSTNPL Source Line: '127' 
#plotter draw rect
iowrite1;>plot.rect
#label
null;;yes_trans--label
#add (2op math)
dataread1;>RL_BARWIDE
dataread2;>px
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>px
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #136
iowrite1;>plot.x1#SSTNPL Source Line: '136' 
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
