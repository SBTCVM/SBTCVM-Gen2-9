#####IMPORTANT######
##SEE 'shelldemo' in 'demos' for usage of this module!


############################################
##Entry Code Variables
###READ THIS FOR SIZE OF INPUT
var shell_entry_size=0
#one less than shell_entry_size, for indexing
var shell_entry_itersize=0


var shell_entry_zeroit=0
var shell_entry_buff=0
var shell_entry_chbuff=0
########CONFIGURATION OF INPUT CODE#########

#####set this to @1 to enable 'purging of the input buffer'
var clearbuffer=@0

#####MAXIMUM INPUT SIZE IN CHARACTERS
var max=@80

############################################


#entry buffer
#Table is purposely 5 entries longer than max size.
table buffer,85,1
tpad 85


label getentry
	val 0
	set shell_entry_size
	label getentry_loop
		keyprompt
		set shell_entry_chbuff
		if shell_entry_size,@0 goto shell_entry_skipnewline
		if shell_entry_chbuff,:\n gsub getentry_tobuff
		if shell_entry_chbuff,:\n return
		
		label shell_entry_skipnewline
		if shell_entry_chbuff,:\n goto getentry_loop
		
		if shell_entry_chbuff,:\x gsub getentry_backone
		if shell_entry_chbuff,:\x goto getentry_loop
		
		
		if shell_entry_size,max goto getentry_loop
		chardump shell_entry_chbuff
		add shell_entry_size,@1
		set shell_entry_size
		
		get shell_entry_chbuff
		push
	goto getentry_loop


label getentry_backone
	if shell_entry_size,@0 return
	chardump :\x
	pop
	sub shell_entry_size,@1
	set shell_entry_size
return


label getentry_tobuff
	stackrev
	sub shell_entry_size,@1
	set shell_entry_itersize
	add shell_entry_size,@1
	set shell_entry_zeroit
	uiter getentry_tobuff_iter,getentry_tobuff_loop,@0,shell_entry_itersize
	uiter getentry_pad_iter,getentry_pad,shell_entry_size,shell_entry_zeroit
	if clearbuffer,@0 return
	uiter getentry_pad_iter,getentry_pad,shell_entry_zeroit,max
	return


label getentry_tobuff_loop
	pop
	set shell_entry_buff
	tabw buffer,getentry_tobuff_iter,@0,shell_entry_buff
return

label getentry_pad
	
	tabw buffer,getentry_pad_iter,@0,@0
	
	return
