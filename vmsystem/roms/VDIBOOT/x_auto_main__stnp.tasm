#SSTNPL COMPILER v0.3.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/roms/VDIBOOT/auto_main.stnp
null;0;kb
null;000000;*000000
null;+++---;*+++---
null;:1;:1
null;:2;:2
null;:q;:q
null;:Q;:Q
null;:b;:b
null;:B;:B
null;10x1;@1
null;+0----;*+0----
null;++0---;*++0---
null;0++--0;*0++--0
null;0;exitcode
null;10x2;@2
#goto (extra code stores away return address.)
setreg1;>goto--jumper-5
s1push1
goto;>BootUp--label
null;;goto--jumper-5
#label
null;;MAIN--label
#prline
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:a
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:o
fopwri1;:o
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:o
fopwri1;:p
fopwri1;:t
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;::
fopwri1;:\n
#Set text colors
dataread1;>*000000
iowrite1;>io.textcolor
#print
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:_
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:[
fopwri1;:b
fopwri1;:]
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:T
fopwri1;:r
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:u
fopwri1;:p
fopwri1;:\s
fopwri1;:a
fopwri1;:g
fopwri1;:a
fopwri1;:i
fopwri1;:n
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:[
fopwri1;:1
fopwri1;:]
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:S
fopwri1;:E
fopwri1;:R
fopwri1;:I
fopwri1;:A
fopwri1;:L
fopwri1;:\s
fopwri1;:W
fopwri1;:r
fopwri1;:a
fopwri1;:p
fopwri1;:p
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:[
fopwri1;:2
fopwri1;:]
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:Q
fopwri1;:u
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:u
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:\s
fopwri1;:\s
fopwri1;:[
fopwri1;:q
fopwri1;:]
fopwri1;:\s
fopwri1;:-
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:u
fopwri1;:t
fopwri1;:d
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:/
fopwri1;:Q
fopwri1;:U
fopwri1;:I
fopwri1;:T
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:S
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\n
#print
fopwri1;:>
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-20
gotoif;>keyprompt--loop-20
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>kb
#print newline
fopwri1;:\n
#conditional subroutine goto
dataread1;>kb
dataread2;>:1
gotoif;>goto--branch-23
goto;>goto--jumper-23
setreg1;>goto--jumper-23;goto--branch-23
s1push1
goto;>vdi_serial--label
null;;goto--jumper-23
#conditional subroutine goto
dataread1;>kb
dataread2;>:2
gotoif;>goto--branch-24
goto;>goto--jumper-24
setreg1;>goto--jumper-24;goto--branch-24
s1push1
goto;>qtest.MAIN--label
null;;goto--jumper-24
#conditional stop
dataread1;>kb
dataread2;>:q
gotoif;>goto--branch-25
goto;>goto--jumper-25
stop;;goto--branch-25

null;;goto--jumper-25
#conditional stop
dataread1;>kb
dataread2;>:Q
gotoif;>goto--branch-26
goto;>goto--jumper-26
stop;;goto--branch-26

null;;goto--jumper-26
#conditional subroutine goto
dataread1;>kb
dataread2;>:b
gotoif;>goto--branch-27
goto;>goto--jumper-27
setreg1;>goto--jumper-27;goto--branch-27
s1push1
goto;>BootUp--label
null;;goto--jumper-27
#conditional subroutine goto
dataread1;>kb
dataread2;>:B
gotoif;>goto--branch-28
goto;>goto--jumper-28
setreg1;>goto--jumper-28;goto--branch-28
s1push1
goto;>BootUp--label
null;;goto--jumper-28
#goto 
goto;>MAIN--label
#label
null;;BootUp--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-32
s1push1
goto;>splash--label
null;;goto--jumper-32
#vdi mode set
dataread1;>@1
iowrite1;>vdi.cli.status
#print
fopwri1;:0
fopwri1;:.
fopwri1;:.
fopwri1;:.
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:0
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#print
fopwri1;:1
fopwri1;:.
fopwri1;:.
fopwri1;:.
#vdi
fopset1;>vdi.cli.in
fopwri1;:r
fopwri1;:s
fopwri1;:t
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:1
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:.
fopwri1;:t
fopwri1;:x
fopwri1;:e
fopwri1;:\n
fopset1;>io.ttywr
#print newline
fopwri1;:\n
#Set text colors
dataread1;>*+0----
iowrite1;>io.textcolor
#print
fopwri1;:u
fopwri1;:n
fopwri1;:s
fopwri1;:u
fopwri1;:c
fopwri1;:c
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:f
fopwri1;:u
fopwri1;:l
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\s
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#label
null;;splash--label
#Set text colors
dataread1;>*++0---
iowrite1;>io.textcolor
#prline
fopwri1;:\s
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:^
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:+
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:+
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:x
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:\s
fopwri1;:.
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:/
fopwri1;:0
fopwri1;:\b
fopwri1;:_
fopwri1;:_
fopwri1;:_
fopwri1;:.
fopwri1;:\s
fopwri1;:\v
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:\s
fopwri1;:G
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:9
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:+
fopwri1;:/
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\b
fopwri1;:-
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:/
fopwri1;:\s
fopwri1;:\s
fopwri1;:<
fopwri1;:\v
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:\b
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:C
fopwri1;:V
fopwri1;:M
fopwri1;:-
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:B
fopwri1;:I
fopwri1;:O
fopwri1;:S
fopwri1;:\s
fopwri1;:v
fopwri1;:0
fopwri1;:.
fopwri1;:4
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:<
fopwri1;:\v
fopwri1;:>
fopwri1;:\s
fopwri1;:_
fopwri1;:\s
fopwri1;:<
fopwri1;:\v
fopwri1;:>
fopwri1;:\v
fopwri1;:\s
fopwri1;:\v
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:\s
fopwri1;:\b
fopwri1;:\s
fopwri1;:\s
fopwri1;:.
fopwri1;:_
fopwri1;:\v
fopwri1;:_
fopwri1;:.
fopwri1;:\s
fopwri1;:\s
fopwri1;:/
fopwri1;:\s
fopwri1;:\v
fopwri1;:>
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:\v
fopwri1;:_
fopwri1;:_
fopwri1;:\v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
fopwri1;:\v
fopwri1;:_
fopwri1;:_
fopwri1;:\v
fopwri1;:>
fopwri1;:\s
fopwri1;:\s
fopwri1;:B
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:u
fopwri1;:p
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:<
fopwri1;:+
fopwri1;:M
fopwri1;:n
fopwri1;:i
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:-
fopwri1;:i
fopwri1;:n
fopwri1;:M
fopwri1;:+
fopwri1;:>
fopwri1;:\n
#print
fopwri1;:\s
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:v
fopwri1;:\s
fopwri1;:\s
fopwri1;:\s
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#return from subroutine.
s1pop1
gotoreg1
#label
null;;vdi_serial--label
#Set text colors
dataread1;>*0++--0
iowrite1;>io.textcolor
#prline
fopwri1;:b
fopwri1;:o
fopwri1;:o
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #75
include;vdishell.tas0#SSTNPL Source Line: '75' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #76
dataread1;>vdiexitcode#SSTNPL Source Line: '76' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>exitcode
#prline
fopwri1;:S
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:h
fopwri1;:a
fopwri1;:s
fopwri1;:\s
fopwri1;:r
fopwri1;:e
fopwri1;:t
fopwri1;:u
fopwri1;:r
fopwri1;:n
fopwri1;:e
fopwri1;:d
fopwri1;:.
fopwri1;:.
fopwri1;:.
fopwri1;:\n
#Dump (decimal)
dataread1;>exitcode
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#conditional return
dataread1;>exitcode
dataread2;>@1
gotoif;>goto--branch-83
goto;>goto--jumper-83
s1pop1;;goto--branch-83
gotoreg1
null;;goto--jumper-83
#conditional stop
dataread1;>exitcode
dataread2;>@2
gotoif;>goto--branch-84
goto;>goto--jumper-84
stop;;goto--branch-84

null;;goto--jumper-84
#return from subroutine.
s1pop1
gotoreg1
#module include: line 87: VDIBOOT/quicktest as qtest
includeas;VDIBOOT/quicktest,qtest
#END OF FILE
