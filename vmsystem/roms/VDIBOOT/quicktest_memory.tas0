#SSTNPL COMPILER v0.3.0
#header
head-rname=quicktest_memory
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "vmsystem/roms/VDIBOOT/quicktest_memory.stnp
null;0;memcnt
null;0;mtotal
null;10x9841;mptotal
null;0;fastmode
null;10x1000;@1000
null;10x6;@6
null;0;mtestaddr
null;0;mtesttmp
null;10x1;@1
null;10x1;$true
null;10x9841;@9841
null;10x2;@2
null;0;notfasttty
null;10x0;$false
null;:a;:a
null;:?;:?
null;:\s;:\s
#label
null;;memtest_fast--label
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>fastmode
#goto (extra code stores away return address.)
setreg1;>goto--jumper-11
s1push1
goto;>memtest--label
null;;goto--jumper-11
#return from subroutine.
s1pop1
gotoreg1
#label
null;;memtest_slow--label
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>fastmode
#goto (extra code stores away return address.)
setreg1;>goto--jumper-18
s1push1
goto;>memtest--label
null;;goto--jumper-18
#return from subroutine.
s1pop1
gotoreg1
#label
null;;memtest--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>memcnt
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtotal
#val (used with set to change variable value during runtime.)
setreg1;10x9841
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mptotal
#val (used with set to change variable value during runtime.)
setreg1;10x-9841
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtestaddr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-32
s1push1
goto;>_memtest_loop--label
null;;goto--jumper-32
#divide (2op math)
dataread1;>memcnt
dataread2;>@1000
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtotal
#multiply (2op math)
dataread1;>mtotal
dataread2;>@6
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtotal
#Dump (decimal)
dataread1;>mtotal
iowrite1;>io.decdump
#prline
fopwri1;:K
fopwri1;:i
fopwri1;:l
fopwri1;:o
fopwri1;:N
fopwri1;:o
fopwri1;:n
fopwri1;:e
fopwri1;:t
fopwri1;:s
fopwri1;:\s
fopwri1;:O
fopwri1;:K
fopwri1;:.
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;_memtest_loop--label
#add (2op math)
dataread1;>memcnt
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>memcnt
#divide (2op math)
dataread1;>memcnt
dataread2;>@1000
div
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtotal
#multiply (2op math)
dataread1;>mtotal
dataread2;>@6
mul
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtotal
#conditional goto
dataread1;>fastmode
dataread2;>$true
gotoif;>goto--branch-52
goto;>goto--jumper-52
setreg1;>goto--jumper-52;goto--branch-52
goto;>fasthack--label
null;;goto--jumper-52
#get(1) (may be used with set, or asm code)
dataread1;>mtestaddr
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #55
datawrite1;>MTEST1#SSTNPL Source Line: '55' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #56
dataread1;;MTEST1#SSTNPL Source Line: '56' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtesttmp
#goto (extra code stores away return address.)
setreg1;>goto--jumper-58
s1push1
goto;>_mtest_formatter--label
null;;goto--jumper-58
#add (2op math)
dataread1;>mtestaddr
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtestaddr
#get(1) (may be used with set, or asm code)
dataread1;>mtestaddr
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #64
datawrite1;>MTEST2#SSTNPL Source Line: '64' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #65
dataread1;;MTEST2#SSTNPL Source Line: '65' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtesttmp
#goto (extra code stores away return address.)
setreg1;>goto--jumper-67
s1push1
goto;>_mtest_formatter--label
null;;goto--jumper-67
#add (2op math)
dataread1;>mtestaddr
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtestaddr
#get(1) (may be used with set, or asm code)
dataread1;>mtestaddr
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #73
datawrite1;>MTEST3#SSTNPL Source Line: '73' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #74
dataread1;;MTEST3#SSTNPL Source Line: '74' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtesttmp
#goto (extra code stores away return address.)
setreg1;>goto--jumper-76
s1push1
goto;>_mtest_formatter--label
null;;goto--jumper-76
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-80
s1push1
goto;>_mtest_slowmode--label
null;;goto--jumper-80
#label
null;;skip3--label
#conditional return
dataread1;>mtestaddr
dataread2;>@9841
gotoif;>goto--branch-83
goto;>goto--jumper-83
s1pop1;;goto--branch-83
gotoreg1
null;;goto--jumper-83
#add (2op math)
dataread1;>mtestaddr
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtestaddr
#conditional subroutine goto
dataread1;>mtotal
dataread2;>mptotal
gotoif;>goto--jumper-88
goto;>goto--branch-88
setreg1;>goto--jumper-88;goto--branch-88
s1push1
goto;>_memtest_memdmp--label
null;;goto--jumper-88
#goto 
goto;>_memtest_loop--label
#label
null;;fasthack--label
#add (2op math)
dataread1;>mtestaddr
dataread2;>@2
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtestaddr
#goto 
goto;>skip3--label
#label
null;;_memtest_memdmp--label
#print newline
fopwri1;:\n
#copy variables 
dataread1;>mtotal
datawrite1;>mptotal
#Dump (decimal)
dataread1;>mtotal
iowrite1;>io.decdump
#prline
fopwri1;:K
fopwri1;:N
fopwri1;:\n
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;_mtest_slowmode--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #114
ioread1;>io.ttycolor#SSTNPL Source Line: '114' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>notfasttty
#conditional return
dataread1;>notfasttty
dataread2;>$false
gotoif;>goto--branch-116
goto;>goto--jumper-116
s1pop1;;goto--branch-116
gotoreg1
null;;goto--jumper-116
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-117
setreg1;0;waitcy-loopback-117
setreg2;10x1
add
datawrite1;>waitcy-loopback-117
setreg2;10x41
gotoifless;>waitcy-loopback-117

#return from subroutine.
s1pop1
gotoreg1
#label
null;;_mtest_formatter--label
#Dump (decimal)
dataread1;>mtestaddr
iowrite1;>io.decdump
#print
fopwri1;:=
#Dump (decimal)
dataread1;>mtesttmp
iowrite1;>io.decdump
#print
fopwri1;:=
#conditional goto
dataread1;>mtesttmp
dataread2;>:a
gotoifmore;>goto--halfstep-126
gotoif;>goto--halfstep-126
goto;>goto--branch-126
dataread1;>mtesttmp;goto--halfstep-126
dataread2;>:?
gotoifless;>goto--jumper-126
gotoif;>goto--jumper-126
goto;>goto--branch-126
setreg1;>goto--jumper-126;goto--branch-126
goto;>_mtest_formatter_blank--label
null;;goto--jumper-126
#Dump (character)
dataread1;>mtesttmp
iowrite1;>io.ttywr
#goto 
goto;>_mtest_formatter_end--label
#label
null;;_mtest_formatter_blank--label
#Dump (character)
dataread1;>:\s
iowrite1;>io.ttywr
#label
null;;_mtest_formatter_end--label
#print
fopwri1;:\v
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
