#THIS DEMO USES THE 'comprompt' module.
#(include statement at end of this file)


prline This is a basic multi-character-command shell demo.
prline type 'help' for commands


#Uses SSTNPLs tabstrc instruction, and the comprompt module
#	to create a command shell, complete with multi-character commands,
#	with no restrictions on command names, other than an 80-character limit,
#	and no cases as such:
#			load
#			load2
#		this is invalid. instead, when a command has a suffixed variant, do this:
#			load1
#			load2

#helpful comprompt variables:

#size: i.e. cp.size: the length of the input buffer.
#itersize: i.e. cp.itersize: one less than 'size' (for indexing)


#set comprompt max input size to 70
val @70
set cp.max

#set comprompt buffer-full-purge to off. (set to @1 to enable)
val @0
set cp.clearbuffer

####about 'purging of the input buffer'
#	this should ONLY be turned on, if remaining characters from past commands, 
#	are causing issues, and the 'size' variable isn't enough to 
#	prevent said issues, as THIS OPTION WILL SLOW DOWN THINGS NOTICEABLY.
#	regardless of this setting, the next character following the last string
#	will be zeroed.

var cmdflg=0
var validcom=0

label main
	textcolor *0++---
	print >
	#read value via comprompt's specialized input read function
	gsub cp.getentry
	
	textcolor *+++---
	newline
	#use specialized SSTNPL table-string matcher to check for command.
	#arguments: [table],[xoffset],[ypos],[string_to_match]
	#xoffset can be used to start at arbitrary locations in table row 
	#   (x position). i.e. for parsing arguments.
	#ypos (table y position) is only useful if you are using a table to store
	#   code for an interpreter.
	
	val 0
	set validcom
	
	tabstrc cp.buffer,@0,@0,help
		set cmdflg
		if cmdflg,@1 =validcom @1
		if cmdflg,@1 gsub help
	
	tabstrc cp.buffer,@0,@0,hello
		set cmdflg
		if cmdflg,@1 =validcom @1
		if cmdflg,@1 gsub hello
	
	tabstrc cp.buffer,@0,@0,quit
		set cmdflg
		if cmdflg,@1 =validcom @1
		if cmdflg,@1 stop
	
	if validcom,@0 gsub invalid
	
goto main

label invalid
	prline Unknown command
return

#hello command
label hello
	prline And a good day to you, user. :D
return

#help command
label help
	textcolor *+++--0
	prline command Help:
	prline help: this text
	prline hello: print a greeting message.
	prline quit: quit.
	textcolor *+++---
	newline
return

#place comprompt include statement at END of file, OUTSIDE of normal code.
include comprompt as cp

