#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/shelldemo_macros/auto_main.stnp
null;0;cmdflg
null;0;validcom
null;0++---;*0++---
null;10x0;@0
null;10x1;@1
null;+++--0;*+++--0
null;+++---;*+++---
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:s
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:m
fopwri1;:u
fopwri1;:l
fopwri1;:t
fopwri1;:i
fopwri1;:-
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:r
fopwri1;:a
fopwri1;:c
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:-
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:f
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:v
fopwri1;:a
fopwri1;:r
fopwri1;:i
fopwri1;:a
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:t
fopwri1;:'
fopwri1;:s
fopwri1;:\s
fopwri1;:c
fopwri1;:m
fopwri1;:d
fopwri1;:*
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:c
fopwri1;:r
fopwri1;:o
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:t
fopwri1;:y
fopwri1;:p
fopwri1;:e
fopwri1;:\s
fopwri1;:'
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;:'
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:s
fopwri1;:\n
#val (used with set to change variable value during runtime.)
setreg1;10x70
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.max
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.clearbuffer
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.DOSEXIT
#label
zerosize;;main--label
#Set text colors
dataread1;>*0++---
iowrite1;>io.textcolor
#print
fopwri1;:>
#val (used with set to change variable value during runtime.)
setreg1;10x0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.validflg
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.cmdflg
#goto (extra code stores away return address.)
setreg1;>goto--jumper-35-4
s1push1
goto;>cp.getentry--label
zerosize;;goto--jumper-35-4
#print newline
fopwri1;:\n
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;>cp.buffer--table
datawrite1;>tabstrc--adrbuff--38-1
null;;tabstrc--adrbuff--38-1
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--38-1
null;;tabstrc--outbuff--38-1
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--38-1

datawrite1;>tabstrc--recurs-tabbuff--38-1_1
dataread1;;tabstrc--recurs-tabbuff--38-1_1
datawrite1;>tabstrc--recurs-tabbuff_read--38-1_1
dataread1;;tabstrc--recurs-tabbuff_read--38-1_1

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--38-1_1
goto;>tabstrc--recurs-checkno--38-1_1
zerosize;;tabstrc--recurs-checkyes--38-1_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--38-1
adddata1;+
datawrite1;>tabstrc--adrbuff--38-1

setreg1;>tabstrc--adrbuff--38-1

datawrite1;>tabstrc--recurs-tabbuff--38-1_2
dataread1;;tabstrc--recurs-tabbuff--38-1_2
datawrite1;>tabstrc--recurs-tabbuff_read--38-1_2
dataread1;;tabstrc--recurs-tabbuff_read--38-1_2

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--38-1_2
goto;>tabstrc--recurs-checkno--38-1_2
zerosize;;tabstrc--recurs-checkyes--38-1_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--38-1
adddata1;+
datawrite1;>tabstrc--adrbuff--38-1

setreg1;>tabstrc--adrbuff--38-1

datawrite1;>tabstrc--recurs-tabbuff--38-1_3
dataread1;;tabstrc--recurs-tabbuff--38-1_3
datawrite1;>tabstrc--recurs-tabbuff_read--38-1_3
dataread1;;tabstrc--recurs-tabbuff_read--38-1_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--38-1_3
goto;>tabstrc--recurs-checkno--38-1_3
zerosize;;tabstrc--recurs-checkyes--38-1_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--38-1
adddata1;+
datawrite1;>tabstrc--adrbuff--38-1

setreg1;>tabstrc--adrbuff--38-1

datawrite1;>tabstrc--recurs-tabbuff--38-1_4
dataread1;;tabstrc--recurs-tabbuff--38-1_4
datawrite1;>tabstrc--recurs-tabbuff_read--38-1_4
dataread1;;tabstrc--recurs-tabbuff_read--38-1_4

setreg2;:p


gotoif;>tabstrc--recurs-checkyes--38-1_4
goto;>tabstrc--recurs-checkno--38-1_4
zerosize;;tabstrc--recurs-checkyes--38-1_4
##set flag########
setreg1;>tabstrc--outbuff--38-1
datawrite1;>tabstrc--recurs-flag--38-1_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--38-1_4
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--38-1_4
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--38-1_3
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--38-1_2
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--38-1_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--38-1
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.cmdflg
#conditional subroutine goto
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-38-3
goto;>goto--jumper-38-3
setreg1;>goto--jumper-38-3;goto--branch-38-3
s1push1
goto;>help_routine--label
zerosize;;goto--jumper-38-3
#conditional set
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-38-4
goto;>goto--jumper-38-4
dataread1;>@1;goto--branch-38-4
datawrite1;>cp.validflg
zerosize;;goto--jumper-38-4
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;>cp.buffer--table
datawrite1;>tabstrc--adrbuff--39-1
null;;tabstrc--adrbuff--39-1
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--39-1
null;;tabstrc--outbuff--39-1
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--39-1

datawrite1;>tabstrc--recurs-tabbuff--39-1_1
dataread1;;tabstrc--recurs-tabbuff--39-1_1
datawrite1;>tabstrc--recurs-tabbuff_read--39-1_1
dataread1;;tabstrc--recurs-tabbuff_read--39-1_1

setreg2;:h


gotoif;>tabstrc--recurs-checkyes--39-1_1
goto;>tabstrc--recurs-checkno--39-1_1
zerosize;;tabstrc--recurs-checkyes--39-1_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--39-1
adddata1;+
datawrite1;>tabstrc--adrbuff--39-1

setreg1;>tabstrc--adrbuff--39-1

datawrite1;>tabstrc--recurs-tabbuff--39-1_2
dataread1;;tabstrc--recurs-tabbuff--39-1_2
datawrite1;>tabstrc--recurs-tabbuff_read--39-1_2
dataread1;;tabstrc--recurs-tabbuff_read--39-1_2

setreg2;:e


gotoif;>tabstrc--recurs-checkyes--39-1_2
goto;>tabstrc--recurs-checkno--39-1_2
zerosize;;tabstrc--recurs-checkyes--39-1_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--39-1
adddata1;+
datawrite1;>tabstrc--adrbuff--39-1

setreg1;>tabstrc--adrbuff--39-1

datawrite1;>tabstrc--recurs-tabbuff--39-1_3
dataread1;;tabstrc--recurs-tabbuff--39-1_3
datawrite1;>tabstrc--recurs-tabbuff_read--39-1_3
dataread1;;tabstrc--recurs-tabbuff_read--39-1_3

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--39-1_3
goto;>tabstrc--recurs-checkno--39-1_3
zerosize;;tabstrc--recurs-checkyes--39-1_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--39-1
adddata1;+
datawrite1;>tabstrc--adrbuff--39-1

setreg1;>tabstrc--adrbuff--39-1

datawrite1;>tabstrc--recurs-tabbuff--39-1_4
dataread1;;tabstrc--recurs-tabbuff--39-1_4
datawrite1;>tabstrc--recurs-tabbuff_read--39-1_4
dataread1;;tabstrc--recurs-tabbuff_read--39-1_4

setreg2;:l


gotoif;>tabstrc--recurs-checkyes--39-1_4
goto;>tabstrc--recurs-checkno--39-1_4
zerosize;;tabstrc--recurs-checkyes--39-1_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--39-1
adddata1;+
datawrite1;>tabstrc--adrbuff--39-1

setreg1;>tabstrc--adrbuff--39-1

datawrite1;>tabstrc--recurs-tabbuff--39-1_5
dataread1;;tabstrc--recurs-tabbuff--39-1_5
datawrite1;>tabstrc--recurs-tabbuff_read--39-1_5
dataread1;;tabstrc--recurs-tabbuff_read--39-1_5

setreg2;:o


gotoif;>tabstrc--recurs-checkyes--39-1_5
goto;>tabstrc--recurs-checkno--39-1_5
zerosize;;tabstrc--recurs-checkyes--39-1_5
##set flag########
setreg1;>tabstrc--outbuff--39-1
datawrite1;>tabstrc--recurs-flag--39-1_5
setreg1;+
datawrite1;;tabstrc--recurs-flag--39-1_5
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--39-1_5
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--39-1_4
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--39-1_3
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--39-1_2
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--39-1_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--39-1
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.cmdflg
#conditional subroutine goto
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-39-3
goto;>goto--jumper-39-3
setreg1;>goto--jumper-39-3;goto--branch-39-3
s1push1
goto;>hello_routine--label
zerosize;;goto--jumper-39-3
#conditional set
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-39-4
goto;>goto--jumper-39-4
dataread1;>@1;goto--branch-39-4
datawrite1;>cp.validflg
zerosize;;goto--jumper-39-4
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;>cp.buffer--table
datawrite1;>tabstrc--adrbuff--42-1
null;;tabstrc--adrbuff--42-1
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--42-1
null;;tabstrc--outbuff--42-1
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--42-1

datawrite1;>tabstrc--recurs-tabbuff--42-1_1
dataread1;;tabstrc--recurs-tabbuff--42-1_1
datawrite1;>tabstrc--recurs-tabbuff_read--42-1_1
dataread1;;tabstrc--recurs-tabbuff_read--42-1_1

setreg2;:q


gotoif;>tabstrc--recurs-checkyes--42-1_1
goto;>tabstrc--recurs-checkno--42-1_1
zerosize;;tabstrc--recurs-checkyes--42-1_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--42-1
adddata1;+
datawrite1;>tabstrc--adrbuff--42-1

setreg1;>tabstrc--adrbuff--42-1

datawrite1;>tabstrc--recurs-tabbuff--42-1_2
dataread1;;tabstrc--recurs-tabbuff--42-1_2
datawrite1;>tabstrc--recurs-tabbuff_read--42-1_2
dataread1;;tabstrc--recurs-tabbuff_read--42-1_2

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--42-1_2
goto;>tabstrc--recurs-checkno--42-1_2
zerosize;;tabstrc--recurs-checkyes--42-1_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--42-1
adddata1;+
datawrite1;>tabstrc--adrbuff--42-1

setreg1;>tabstrc--adrbuff--42-1

datawrite1;>tabstrc--recurs-tabbuff--42-1_3
dataread1;;tabstrc--recurs-tabbuff--42-1_3
datawrite1;>tabstrc--recurs-tabbuff_read--42-1_3
dataread1;;tabstrc--recurs-tabbuff_read--42-1_3

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--42-1_3
goto;>tabstrc--recurs-checkno--42-1_3
zerosize;;tabstrc--recurs-checkyes--42-1_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--42-1
adddata1;+
datawrite1;>tabstrc--adrbuff--42-1

setreg1;>tabstrc--adrbuff--42-1

datawrite1;>tabstrc--recurs-tabbuff--42-1_4
dataread1;;tabstrc--recurs-tabbuff--42-1_4
datawrite1;>tabstrc--recurs-tabbuff_read--42-1_4
dataread1;;tabstrc--recurs-tabbuff_read--42-1_4

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--42-1_4
goto;>tabstrc--recurs-checkno--42-1_4
zerosize;;tabstrc--recurs-checkyes--42-1_4
##set flag########
setreg1;>tabstrc--outbuff--42-1
datawrite1;>tabstrc--recurs-flag--42-1_4
setreg1;+
datawrite1;;tabstrc--recurs-flag--42-1_4
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--42-1_4
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--42-1_3
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--42-1_2
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--42-1_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--42-1
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.cmdflg
#conditional goto
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-42-3
goto;>goto--jumper-42-3
setreg1;>goto--jumper-42-3;goto--branch-42-3
goto;>cp.exitcode--label
zerosize;;goto--jumper-42-3
#######tabstrc
#init
setreg1;10x85
dataread2;>@0
mul
dataread2;>@0
add
adddata1;>cp.buffer--table
datawrite1;>tabstrc--adrbuff--43-1
null;;tabstrc--adrbuff--43-1
#reset output buffer to 0
setreg1;0
datawrite1;>tabstrc--outbuff--43-1
null;;tabstrc--outbuff--43-1
#recursive_parser
#recursion

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_1
dataread1;;tabstrc--recurs-tabbuff--43-1_1
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_1
dataread1;;tabstrc--recurs-tabbuff_read--43-1_1

setreg2;:a


gotoif;>tabstrc--recurs-checkyes--43-1_1
goto;>tabstrc--recurs-checkno--43-1_1
zerosize;;tabstrc--recurs-checkyes--43-1_1
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--43-1
adddata1;+
datawrite1;>tabstrc--adrbuff--43-1

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_2
dataread1;;tabstrc--recurs-tabbuff--43-1_2
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_2
dataread1;;tabstrc--recurs-tabbuff_read--43-1_2

setreg2;:s


gotoif;>tabstrc--recurs-checkyes--43-1_2
goto;>tabstrc--recurs-checkno--43-1_2
zerosize;;tabstrc--recurs-checkyes--43-1_2
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--43-1
adddata1;+
datawrite1;>tabstrc--adrbuff--43-1

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_3
dataread1;;tabstrc--recurs-tabbuff--43-1_3
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_3
dataread1;;tabstrc--recurs-tabbuff_read--43-1_3

setreg2;:k


gotoif;>tabstrc--recurs-checkyes--43-1_3
goto;>tabstrc--recurs-checkno--43-1_3
zerosize;;tabstrc--recurs-checkyes--43-1_3
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--43-1
adddata1;+
datawrite1;>tabstrc--adrbuff--43-1

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_4
dataread1;;tabstrc--recurs-tabbuff--43-1_4
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_4
dataread1;;tabstrc--recurs-tabbuff_read--43-1_4

setreg2;:q


gotoif;>tabstrc--recurs-checkyes--43-1_4
goto;>tabstrc--recurs-checkno--43-1_4
zerosize;;tabstrc--recurs-checkyes--43-1_4
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--43-1
adddata1;+
datawrite1;>tabstrc--adrbuff--43-1

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_5
dataread1;;tabstrc--recurs-tabbuff--43-1_5
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_5
dataread1;;tabstrc--recurs-tabbuff_read--43-1_5

setreg2;:u


gotoif;>tabstrc--recurs-checkyes--43-1_5
goto;>tabstrc--recurs-checkno--43-1_5
zerosize;;tabstrc--recurs-checkyes--43-1_5
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--43-1
adddata1;+
datawrite1;>tabstrc--adrbuff--43-1

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_6
dataread1;;tabstrc--recurs-tabbuff--43-1_6
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_6
dataread1;;tabstrc--recurs-tabbuff_read--43-1_6

setreg2;:i


gotoif;>tabstrc--recurs-checkyes--43-1_6
goto;>tabstrc--recurs-checkno--43-1_6
zerosize;;tabstrc--recurs-checkyes--43-1_6
#recursion
#increment pointer
dataread1;>tabstrc--adrbuff--43-1
adddata1;+
datawrite1;>tabstrc--adrbuff--43-1

setreg1;>tabstrc--adrbuff--43-1

datawrite1;>tabstrc--recurs-tabbuff--43-1_7
dataread1;;tabstrc--recurs-tabbuff--43-1_7
datawrite1;>tabstrc--recurs-tabbuff_read--43-1_7
dataread1;;tabstrc--recurs-tabbuff_read--43-1_7

setreg2;:t


gotoif;>tabstrc--recurs-checkyes--43-1_7
goto;>tabstrc--recurs-checkno--43-1_7
zerosize;;tabstrc--recurs-checkyes--43-1_7
##set flag########
setreg1;>tabstrc--outbuff--43-1
datawrite1;>tabstrc--recurs-flag--43-1_7
setreg1;+
datawrite1;;tabstrc--recurs-flag--43-1_7
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_7
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_6
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_5
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_4
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_3
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_2
#recursionskip endpoint
zerosize;;tabstrc--recurs-checkno--43-1_1
#read output to register 1 for 'set' to use.
dataread1;>tabstrc--outbuff--43-1
#######tabstrc END
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cp.cmdflg
#conditional subroutine goto
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-43-3
goto;>goto--jumper-43-3
setreg1;>goto--jumper-43-3;goto--branch-43-3
s1push1
goto;>cp.stopYN--label
zerosize;;goto--jumper-43-3
#conditional set
dataread1;>cp.cmdflg
dataread2;>@1
gotoif;>goto--branch-43-4
goto;>goto--jumper-43-4
dataread1;>@1;goto--branch-43-4
datawrite1;>cp.validflg
zerosize;;goto--jumper-43-4
#conditional subroutine goto
dataread1;>cp.validflg
dataread2;>@1
gotoif;>goto--jumper-47-1
goto;>goto--branch-47-1
setreg1;>goto--jumper-47-1;goto--branch-47-1
s1push1
goto;>invalid--label
zerosize;;goto--jumper-47-1
#goto 
goto;>main--label
#label
zerosize;;invalid--label
#prline
fopwri1;:U
fopwri1;:n
fopwri1;:k
fopwri1;:n
fopwri1;:o
fopwri1;:w
fopwri1;:n
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;hello_routine--label
#prline
fopwri1;:A
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:g
fopwri1;:o
fopwri1;:o
fopwri1;:d
fopwri1;:\s
fopwri1;:d
fopwri1;:a
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\m
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:r
fopwri1;:.
fopwri1;:\s
fopwri1;::
fopwri1;:D
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;help_routine--label
#Set text colors
dataread1;>*+++--0
iowrite1;>io.textcolor
#prline
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:m
fopwri1;:a
fopwri1;:n
fopwri1;:d
fopwri1;:\s
fopwri1;:H
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;::
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
fopwri1;::
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:x
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;::
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:i
fopwri1;:n
fopwri1;:t
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:g
fopwri1;:r
fopwri1;:e
fopwri1;:e
fopwri1;:t
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:m
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:a
fopwri1;:g
fopwri1;:e
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;::
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:a
fopwri1;:s
fopwri1;:k
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:s
fopwri1;:k
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:q
fopwri1;:u
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#Set text colors
dataread1;>*+++---
iowrite1;>io.textcolor
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#module include: line 75-0: comprompt as cp
includeas;comprompt,cp
#END OF FILE
