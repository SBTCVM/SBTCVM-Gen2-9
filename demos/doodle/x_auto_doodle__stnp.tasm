#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_doodle
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/doodle/auto_doodle.stnp
null;0;lastx
null;0;lasty
null;0;cury
null;0;curx
null;0;btnbuff
null;0;xbuff
null;0;ybuff
null;0;drawflg
null;10x30;@30
null;-0+-000++;*-0+-000++
null;+++++++++;*+++++++++
null;10x1;@1
null;10x0;@0
null;10x3;@3
#prline
fopwri1;:s
fopwri1;:i
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:a
fopwri1;:c
fopwri1;:t
fopwri1;:i
fopwri1;:v
fopwri1;:e
fopwri1;:\s
fopwri1;:p
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:+
fopwri1;:m
fopwri1;:o
fopwri1;:u
fopwri1;:s
fopwri1;:e
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:a
fopwri1;:w
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:\n
#prline
fopwri1;:r
fopwri1;:i
fopwri1;:g
fopwri1;:h
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#prline
fopwri1;:l
fopwri1;:e
fopwri1;:f
fopwri1;:t
fopwri1;:\s
fopwri1;:c
fopwri1;:l
fopwri1;:i
fopwri1;:c
fopwri1;:k
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:h
fopwri1;:o
fopwri1;:l
fopwri1;:d
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:d
fopwri1;:r
fopwri1;:a
fopwri1;:w
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-20
gotoif;>keyprompt--loop-20
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#plotter fill
dataread1;>*-0+-000++
iowrite1;>plot.fill
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#label
zerosize;;main--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #28
ioread1;>mouse.button#SSTNPL Source Line: '28' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>btnbuff
#conditional subroutine goto
dataread1;>drawflg
dataread2;>@1
gotoif;>goto--branch-31
goto;>goto--jumper-31
setreg1;>goto--jumper-31;goto--branch-31
s1push1
goto;>linedraw--label
zerosize;;goto--jumper-31
#conditional goto
dataread1;>btnbuff
dataread2;>@0
gotoif;>goto--branch-32
goto;>goto--jumper-32
setreg1;>goto--jumper-32;goto--branch-32
goto;>main--label
zerosize;;goto--jumper-32
#conditional stop
dataread1;>btnbuff
dataread2;>@3
gotoif;>goto--branch-33
goto;>goto--jumper-33
stop;;goto--branch-33

zerosize;;goto--jumper-33
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #35
ioread1;>mouse.realx#SSTNPL Source Line: '35' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>curx
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #37
ioread1;>mouse.realy#SSTNPL Source Line: '37' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cury
#copy variables 
dataread1;>curx
datawrite1;>lastx
#copy variables 
dataread1;>cury
datawrite1;>lasty
#conditional set
dataread1;>btnbuff
dataread2;>@0
gotoifmore;>goto--branch-42
goto;>goto--jumper-42
dataread1;>@1;goto--branch-42
datawrite1;>drawflg
zerosize;;goto--jumper-42
#conditional set
dataread1;>btnbuff
dataread2;>@0
gotoifless;>goto--branch-43
goto;>goto--jumper-43
dataread1;>@0;goto--branch-43
datawrite1;>drawflg
zerosize;;goto--jumper-43
#goto 
goto;>main--label
#label
zerosize;;linedraw--label
#copy variables 
dataread1;>curx
datawrite1;>lastx
#copy variables 
dataread1;>cury
datawrite1;>lasty
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #51
ioread1;>mouse.realx#SSTNPL Source Line: '51' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>curx
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #53
ioread1;>mouse.realy#SSTNPL Source Line: '53' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>cury
#plotter x pos 1
dataread1;>lastx
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>lasty
iowrite1;>plot.y1
#plotter x pos 2
dataread1;>curx
iowrite1;>plot.x2
#plotter y pos 2
dataread1;>cury
iowrite1;>plot.y2
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
