#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_grad
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/plotter_gradient/auto_grad.stnp
null;10x31;@31
null;10x6;bandheight
null;10x575;@575
null;10x-287;@-287
null;0;colortemp
null;10x0;@0
null;10x1;@1
null;+;*+
null;+-;*+-
null;-;*-
null;---;*---
null;10x287;@287
null;10x0;y
#Set SBTGA mode
dataread1;>@31
iowrite1;>ga.mode
#plotter width
dataread1;>@575
iowrite1;>plot.width
#plotter height
dataread1;>bandheight
iowrite1;>plot.height
#plotter x pos 1
dataread1;>@-287
iowrite1;>plot.x1
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.r_half
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.g_half
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.b_half
#prline
fopwri1;:T
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:1
fopwri1;:-
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:a
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:e
fopwri1;:l
fopwri1;:\s
fopwri1;:r
fopwri1;:o
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:\n
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_r
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_g
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_b
#goto (extra code stores away return address.)
setreg1;>goto--jumper-19-0
s1push1
goto;>test1--label
zerosize;;goto--jumper-19-0
#prline
fopwri1;:D
fopwri1;:O
fopwri1;:N
fopwri1;:E
fopwri1;:\m
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-21-0
gotoif;>keyprompt--loop-21-0
#prline
fopwri1;:T
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:1
fopwri1;:-
fopwri1;:2
fopwri1;::
fopwri1;:\s
fopwri1;:G
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:B
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:e
fopwri1;:l
fopwri1;:\s
fopwri1;:r
fopwri1;:o
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:\m
fopwri1;:\s
fopwri1;:R
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:e
fopwri1;:l
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:x
fopwri1;:/
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:\n
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_r
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_g
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_b
#goto (extra code stores away return address.)
setreg1;>goto--jumper-25-0
s1push1
goto;>test1--label
zerosize;;goto--jumper-25-0
#prline
fopwri1;:D
fopwri1;:O
fopwri1;:N
fopwri1;:E
fopwri1;:\m
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-28-0
gotoif;>keyprompt--loop-28-0
#prline
fopwri1;:T
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:1
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:e
fopwri1;:l
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:x
fopwri1;:/
fopwri1;:M
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:(
fopwri1;:m
fopwri1;:o
fopwri1;:n
fopwri1;:o
fopwri1;:c
fopwri1;:h
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_r
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_g
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_b
#goto (extra code stores away return address.)
setreg1;>goto--jumper-32-0
s1push1
goto;>test2--label
zerosize;;goto--jumper-32-0
#prline
fopwri1;:D
fopwri1;:O
fopwri1;:N
fopwri1;:E
fopwri1;:\m
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-35-0
gotoif;>keyprompt--loop-35-0
#prline
fopwri1;:T
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:2
fopwri1;::
fopwri1;:\s
fopwri1;:R
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:G
fopwri1;:\s
fopwri1;:r
fopwri1;:o
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:\m
fopwri1;:\s
fopwri1;:B
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:x
fopwri1;:/
fopwri1;:m
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:(
fopwri1;:m
fopwri1;:o
fopwri1;:n
fopwri1;:o
fopwri1;:c
fopwri1;:h
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_r
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_g
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_b
#goto (extra code stores away return address.)
setreg1;>goto--jumper-39-0
s1push1
goto;>test2--label
zerosize;;goto--jumper-39-0
#prline
fopwri1;:D
fopwri1;:O
fopwri1;:N
fopwri1;:E
fopwri1;:\m
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-42-0
gotoif;>keyprompt--loop-42-0
#prline
fopwri1;:T
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:3
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:e
fopwri1;:l
fopwri1;:\s
fopwri1;:M
fopwri1;:a
fopwri1;:x
fopwri1;:/
fopwri1;:M
fopwri1;:i
fopwri1;:n
fopwri1;:\m
fopwri1;:\s
fopwri1;:z
fopwri1;:o
fopwri1;:o
fopwri1;:m
fopwri1;:e
fopwri1;:d
fopwri1;:\n
#val (used with set to change variable value during runtime.)
setreg1;10x21
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>bandheight
#plotter height
dataread1;>bandheight
iowrite1;>plot.height
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_r
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_g
#get(1) (may be used with set, or asm code)
dataread1;>@0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_b
#goto (extra code stores away return address.)
setreg1;>goto--jumper-49-0
s1push1
goto;>test2--label
zerosize;;goto--jumper-49-0
#val (used with set to change variable value during runtime.)
setreg1;10x6
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>bandheight
#plotter height
dataread1;>bandheight
iowrite1;>plot.height
#prline
fopwri1;:D
fopwri1;:O
fopwri1;:N
fopwri1;:E
fopwri1;:\m
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-55-0
gotoif;>keyprompt--loop-55-0
#prline
fopwri1;:T
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:2
fopwri1;:-
fopwri1;:4
fopwri1;::
fopwri1;:\s
fopwri1;:A
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:c
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:n
fopwri1;:e
fopwri1;:l
fopwri1;:\s
fopwri1;:r
fopwri1;:o
fopwri1;:l
fopwri1;:l
fopwri1;:o
fopwri1;:v
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:(
fopwri1;:m
fopwri1;:o
fopwri1;:n
fopwri1;:o
fopwri1;:c
fopwri1;:h
fopwri1;:r
fopwri1;:o
fopwri1;:m
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:)
fopwri1;:\n
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_r
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_g
#get(1) (may be used with set, or asm code)
dataread1;>@1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.rollover_b
#goto (extra code stores away return address.)
setreg1;>goto--jumper-59-0
s1push1
goto;>test2--label
zerosize;;goto--jumper-59-0
#prline
fopwri1;:D
fopwri1;:O
fopwri1;:N
fopwri1;:E
fopwri1;:\m
fopwri1;:\s
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-62-0
gotoif;>keyprompt--loop-62-0
#stop (shutdown vm)
stop
#label
zerosize;;test1--label
#get(1) (may be used with set, or asm code)
dataread1;>*+
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.r_add
#get(1) (may be used with set, or asm code)
dataread1;>*+-
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.g_add
#get(1) (may be used with set, or asm code)
dataread1;>*-
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.b_add
#get(1) (may be used with set, or asm code)
dataread1;>*---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.r
#get(1) (may be used with set, or asm code)
dataread1;>*---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.g
#get(1) (may be used with set, or asm code)
dataread1;>*---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.b
#For Loop: Upward range iterator
dataread1;>@-287
datawrite1;>y
zerosize;;for-drange-loopback-71-0
goto;>for-drange-subpos-71-0
zerosize;;flowloop--con-x-1--start
dataread1;>y
dataread2;>bandheight
add
datawrite1;>y
dataread2;>@287
gotoifless;>for-drange-loopback-71-0
gotoif;>for-drange-loopback-71-0
goto;>flowloop--con-x-1
zerosize;;for-drange-subpos-71-0
#plotter y pos 1
dataread1;>y
iowrite1;>plot.y1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-74-0
s1push1
goto;>rgbadd.color_add--label
zerosize;;goto--jumper-74-0
#get(1) (may be used with set, or asm code)
dataread1;>rgbadd.r
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtri.tri3
#get(1) (may be used with set, or asm code)
dataread1;>rgbadd.g
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtri.tri2
#get(1) (may be used with set, or asm code)
dataread1;>rgbadd.b
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtri.tri1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-75-7
s1push1
goto;>mtri.mergetris--label
zerosize;;goto--jumper-75-7
#get(1) (may be used with set, or asm code)
dataread1;>mtri.output
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>colortemp
#plotter draw line
dataread1;>colortemp
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
goto;>flowloop--con-x-1--start
zerosize;;flowloop--con-x-1
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;test2--label
#get(1) (may be used with set, or asm code)
dataread1;>*+
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.r_add
#get(1) (may be used with set, or asm code)
dataread1;>*+
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.g_add
#get(1) (may be used with set, or asm code)
dataread1;>*+
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.b_add
#get(1) (may be used with set, or asm code)
dataread1;>*---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.r
#get(1) (may be used with set, or asm code)
dataread1;>*---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.g
#get(1) (may be used with set, or asm code)
dataread1;>*---
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>rgbadd.b
#For Loop: Upward range iterator
dataread1;>@-287
datawrite1;>y
zerosize;;for-drange-loopback-88-0
goto;>for-drange-subpos-88-0
zerosize;;flowloop--con-x-2--start
dataread1;>y
dataread2;>bandheight
add
datawrite1;>y
dataread2;>@287
gotoifless;>for-drange-loopback-88-0
gotoif;>for-drange-loopback-88-0
goto;>flowloop--con-x-2
zerosize;;for-drange-subpos-88-0
#plotter y pos 1
dataread1;>y
iowrite1;>plot.y1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-91-0
s1push1
goto;>rgbadd.color_add--label
zerosize;;goto--jumper-91-0
#get(1) (may be used with set, or asm code)
dataread1;>rgbadd.r
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtri.tri3
#get(1) (may be used with set, or asm code)
dataread1;>rgbadd.g
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtri.tri2
#get(1) (may be used with set, or asm code)
dataread1;>rgbadd.b
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>mtri.tri1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-92-7
s1push1
goto;>mtri.mergetris--label
zerosize;;goto--jumper-92-7
#get(1) (may be used with set, or asm code)
dataread1;>mtri.output
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>colortemp
#plotter draw line
dataread1;>colortemp
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
goto;>flowloop--con-x-2--start
zerosize;;flowloop--con-x-2
#return from subroutine.
s1pop1
gotoreg1
#module include: line 104-0: mergetriads as mtri
includeas;mergetriads,mtri
#module include: line 105-0: rgbadd as rgbadd
includeas;rgbadd,rgbadd
#END OF FILE
