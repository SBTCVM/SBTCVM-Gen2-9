#SSTNPL COMPILER v0.2.0
#header
head-rname=auto_main
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/comppack/auto_main.stnp
null;0;image_offset
null;0;RL_pointer
null;0;RL_SIZE
null;0;RL_loopcount
null;0;RL_data
null;10x1;@1
null;10x0;rl_iter
null;10x-1;@-1
null;10x0;RL_ilvar
null;10x0;@0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #8
setreg1;>image_offset_asm#SSTNPL Source Line: '8' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>image_offset
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:\s
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:\s
fopwri1;:o
fopwri1;:f
fopwri1;:\s
fopwri1;:3
fopwri1;:-
fopwri1;:t
fopwri1;:r
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:R
fopwri1;:G
fopwri1;:B
fopwri1;:\s
fopwri1;:c
fopwri1;:o
fopwri1;:l
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:p
fopwri1;:a
fopwri1;:c
fopwri1;:k
fopwri1;:a
fopwri1;:r
fopwri1;:t
fopwri1;:\s
fopwri1;:u
fopwri1;:s
fopwri1;:i
fopwri1;:n
fopwri1;:g
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:s
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:\n
#prline
fopwri1;:c
fopwri1;:o
fopwri1;:m
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:i
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:m
fopwri1;:a
fopwri1;:t
fopwri1;:.
fopwri1;:\s
fopwri1;:(
fopwri1;:C
fopwri1;:P
fopwri1;:R
fopwri1;:L
fopwri1;:E
fopwri1;:)
fopwri1;:\s
fopwri1;:[
fopwri1;:g
fopwri1;:f
fopwri1;:x
fopwri1;:c
fopwri1;:o
fopwri1;:n
fopwri1;:\s
fopwri1;:-
fopwri1;:c
fopwri1;:p
fopwri1;:r
fopwri1;:l
fopwri1;:e
fopwri1;:n
fopwri1;:]
fopwri1;:\n
#print newline
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-19
gotoif;>keyprompt--loop-19
#goto (extra code stores away return address.)
setreg1;>goto--jumper-22
s1push1
goto;>RL_decode--label
null;;goto--jumper-22
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-25
gotoif;>keyprompt--loop-25
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-27
s1push1
goto;>RL_decode--label
null;;goto--jumper-27
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-29
gotoif;>keyprompt--loop-29
#print newline
fopwri1;:\n
#stop (shutdown vm)
stop
#label
null;;RL_decode--label
#val (used with set to change variable value during runtime.)
setreg1;0
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#copy variables 
dataread1;>image_offset
datawrite1;>RL_pointer
#get(1) (may be used with set, or asm code)
dataread1;>RL_pointer
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #54
datawrite1;>RL_GET_SIZE#SSTNPL Source Line: '54' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #55
dataread1;;RL_GET_SIZE#SSTNPL Source Line: '55' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#subtract (2op math)
dataread1;>RL_SIZE
dataread2;>@1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_SIZE
#add (2op math)
dataread1;>RL_pointer
dataread2;>@1
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_pointer
#Upward range iterator
dataread1;>RL_pointer
datawrite1;>rl_iter
setreg1;>uiter-retpos-64;uiter-loopback-64
s1push1
goto;>RL_decode_mainloop--label
dataread1;>rl_iter;uiter-retpos-64
setreg2;10x1
add
datawrite1;>rl_iter
dataread2;>RL_SIZE
gotoifless;>uiter-loopback-64
gotoif;>uiter-loopback-64

#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_decode_mainloop--label
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #75
datawrite1;>RL_GET_DATA#SSTNPL Source Line: '75' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #76
dataread1;;RL_GET_DATA#SSTNPL Source Line: '76' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_data
#get(1) (may be used with set, or asm code)
dataread1;>rl_iter
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #82
datawrite1;>RL_GET_LEN#SSTNPL Source Line: '82' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #83
instread1;;RL_GET_LEN#SSTNPL Source Line: '83' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>RL_loopcount
#conditional goto
dataread1;>RL_loopcount
dataread2;>@-1
gotoif;>goto--branch-87
goto;>goto--jumper-87
setreg1;>goto--jumper-87;goto--branch-87
goto;>RL_newline--label
null;;goto--jumper-87
#Upward range iterator
dataread1;>@0
datawrite1;>RL_ilvar
setreg1;>uiter-retpos-91;uiter-loopback-91
s1push1
goto;>RL_printlooop--label
dataread1;>RL_ilvar;uiter-retpos-91
setreg2;10x1
add
datawrite1;>RL_ilvar
dataread2;>RL_loopcount
gotoifless;>uiter-loopback-91
gotoif;>uiter-loopback-91

#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_newline--label
#print newline
fopwri1;:\n
#return from subroutine.
s1pop1
gotoreg1
#label
null;;RL_printlooop--label
#get(1) (may be used with set, or asm code)
dataread1;>RL_data
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #100
iowrite1;>io.cpack#SSTNPL Source Line: '100' 
#return from subroutine.
s1pop1
gotoreg1
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #109
include;comppack+image.tas0;image_offset_asm#SSTNPL Source Line: '109' 
#END OF FILE
