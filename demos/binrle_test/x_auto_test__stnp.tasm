#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_test
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/binrle_test/auto_test.stnp
null;10x31;@31
null;000000000;*000000000
#Set SBTGA mode
dataread1;>@31
iowrite1;>ga.mode
#plotter fill
dataread1;>*000000000
iowrite1;>plot.fill
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #6
setreg1;>test_image2#SSTNPL Source Line: '6' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.offset
#val (used with set to change variable value during runtime.)
setreg1;10x-247
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.posy
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.pixy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-16
s1push1
goto;>brl.decode--label
null;;goto--jumper-16
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-18
gotoif;>keyprompt--loop-18
#Set SBTGA mode
dataread1;>@31
iowrite1;>ga.mode
#plotter fill
dataread1;>*000000000
iowrite1;>plot.fill
#val (used with set to change variable value during runtime.)
setreg1;00000++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.off
#val (used with set to change variable value during runtime.)
setreg1;0++0+++++
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #27
setreg1;>test_image#SSTNPL Source Line: '27' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.offset
#val (used with set to change variable value during runtime.)
setreg1;10x-287
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.posy
#val (used with set to change variable value during runtime.)
setreg1;10x1
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.pixx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>brl.pixy
#goto (extra code stores away return address.)
setreg1;>goto--jumper-36
s1push1
goto;>brl.decode--label
null;;goto--jumper-36
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-38
gotoif;>keyprompt--loop-38
#module include: line 42: binrle as brl
includeas;binrle,brl
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #43
include;binrle_test/image.tas0;test_image#SSTNPL Source Line: '43' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #44
include;binrle_test/image2.tas0;test_image2#SSTNPL Source Line: '44' 
#END OF FILE
