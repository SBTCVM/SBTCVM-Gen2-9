#SSTNPL COMPILER v0.4.0
#header
head-rname=drop
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/ternarydreams/drop.stnp
null;10x-5;velx
null;10x3;vely
null;10x110;floorlevel
null;10x115;floorlevel_draw
null;10x0;xpos
null;10x110;ypos
null;0;debug_buffsize
null;10x-20;hitvelocity_y
null;10x5;@5
null;0000++000;*0000++000
null;000+++000;trailcolor
null;000++0000;*000++0000
null;000+++000;*000+++000
null;10x-1;@-1
null;10x-121;@-121
null;10x121;@121
null;+++++++++;*+++++++++
null;10x4;@4
#label
zerosize;;pre_init--label
#plotter width
dataread1;>@5
iowrite1;>plot.width
#plotter height
dataread1;>@5
iowrite1;>plot.height
#plotter x pos 1
dataread1;>xpos
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>ypos
iowrite1;>plot.y1
#plotter fill
dataread1;>*0000++000
iowrite1;>plot.fill
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;cycle_run--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-35
s1push1
goto;>main--label
zerosize;;goto--jumper-35
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;main--label
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-43
setreg1;0;waitcy-loopback-43
setreg2;10x1
add
datawrite1;>waitcy-loopback-43
setreg2;10x1
gotoifless;>waitcy-loopback-43

#Random ranged number
dataread1;>*000++0000
dataread2;>*000+++000
iowrite1;>rand1.start
iowrite2;>rand1.end
ioread1;>rand1.get#set(1) (used after 2-op math, asm code, or get)
datawrite1;>trailcolor
#plotter draw line
dataread1;>trailcolor
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter x pos 1
dataread1;>xpos
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>ypos
iowrite1;>plot.y1
#add (2op math)
dataread1;>ypos
dataread2;>vely
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>ypos
#subtract (2op math)
dataread1;>vely
dataread2;>@-1
sub
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>vely
#add (2op math)
dataread1;>xpos
dataread2;>velx
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>xpos
#conditional set
dataread1;>xpos
dataread2;>@-121
gotoifless;>goto--branch-61
goto;>goto--jumper-61
dataread1;>@121;goto--branch-61
datawrite1;>xpos
zerosize;;goto--jumper-61
#conditional set
dataread1;>xpos
dataread2;>@121
gotoifmore;>goto--branch-62
goto;>goto--jumper-62
dataread1;>@-121;goto--branch-62
datawrite1;>xpos
zerosize;;goto--jumper-62
#conditional set
dataread1;>ypos
dataread2;>floorlevel
gotoifless;>goto--jumper-67
goto;>goto--branch-67
dataread1;>hitvelocity_y;goto--branch-67
datawrite1;>vely
zerosize;;goto--jumper-67
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#goto (extra code stores away return address.)
setreg1;>goto--jumper-72
s1push1
goto;>debug1--label
zerosize;;goto--jumper-72
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;debug1--label
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #80
ioread1;>plot.buffer#SSTNPL Source Line: '80' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>debug_buffsize
#conditional subroutine goto
dataread1;>debug_buffsize
dataread2;>@4
gotoifmore;>goto--branch-82
goto;>goto--jumper-82
setreg1;>goto--jumper-82;goto--branch-82
s1push1
goto;>debug1_print--label
zerosize;;goto--jumper-82
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;debug1_print--label
#Dump (decimal)
dataread1;>debug_buffsize
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#Wait loop
setreg1;0
datawrite1;>waitcy-loopback-88
setreg1;0;waitcy-loopback-88
setreg2;10x1
add
datawrite1;>waitcy-loopback-88
setreg2;10x16
gotoifless;>waitcy-loopback-88

#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
