#SSTNPL COMPILER v0.3.0
#header
head-rname=auto_plottest
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/plottest/auto_plottest.stnp
null;0;buff
null;10x32;@32
null;10x30;@30
null;-0+-000++;*-0+-000++
null;+++++++++;*+++++++++
null;10x0;linecount
null;10x0;@0
null;10x50;@50
null;00000000+;*00000000+
null;10x-121;@-121
null;10x121;@121
null;---------;*---------
null;+++000+00;*+++000+00
null;10x12;@12
null;10x14;@14
null;10x-1;@-1
null;10x-21;@-21
null;10x43;@43
null;10x-20;@-20
null;10x-10;@-10
null;10x-200;@-200
null;+++---+++;*+++---+++
null;10x-50;@-50
null;+00---000;*+00---000
null;+0-------;*+0-------
null;10x1;lspace
null;0;lpos
null;10x4;@4
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:i
fopwri1;:s
fopwri1;:\s
fopwri1;:w
fopwri1;:i
fopwri1;:l
fopwri1;:l
fopwri1;:\s
fopwri1;:s
fopwri1;:h
fopwri1;:o
fopwri1;:w
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:b
fopwri1;:a
fopwri1;:s
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:p
fopwri1;:l
fopwri1;:o
fopwri1;:t
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:a
fopwri1;:m
fopwri1;:p
fopwri1;:l
fopwri1;:e
fopwri1;:\m
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:w
fopwri1;:a
fopwri1;:i
fopwri1;:t
fopwri1;:\s
fopwri1;:f
fopwri1;:o
fopwri1;:r
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:.
fopwri1;:\n
#prline
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:w
fopwri1;:h
fopwri1;:e
fopwri1;:n
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:e
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:p
fopwri1;:i
fopwri1;:n
fopwri1;:k
fopwri1;:\s
fopwri1;:s
fopwri1;:p
fopwri1;:a
fopwri1;:c
fopwri1;:e
fopwri1;:c
fopwri1;:r
fopwri1;:a
fopwri1;:f
fopwri1;:t
fopwri1;:\s
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:t
fopwri1;:h
fopwri1;:e
fopwri1;:\s
fopwri1;:b
fopwri1;:l
fopwri1;:u
fopwri1;:e
fopwri1;:\s
fopwri1;:&
fopwri1;:\s
fopwri1;:g
fopwri1;:r
fopwri1;:e
fopwri1;:y
fopwri1;:\n
#prline
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:g
fopwri1;:a
fopwri1;:r
fopwri1;:\s
fopwri1;:[
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:b
fopwri1;:e
fopwri1;:g
fopwri1;:i
fopwri1;:n
fopwri1;:\s
fopwri1;:d
fopwri1;:e
fopwri1;:m
fopwri1;:o
fopwri1;:]
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-6
gotoif;>keyprompt--loop-6
#plotter y pos 1
dataread1;>@32
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>@30
iowrite1;>plot.y2
#plotter draw line
iowrite1;>plot.line
#plotter flush buffer.
iowrite1;>plot.buffer
#plotter fill
dataread1;>*-0+-000++
iowrite1;>plot.fill
#plotter draw line
dataread1;>*+++++++++
iowrite1;>plot.color
#Upward range iterator
dataread1;>@0
datawrite1;>linecount
setreg1;>uiter-retpos-30;uiter-loopback-30
s1push1
goto;>floor_lines--label
dataread1;>linecount;uiter-retpos-30
setreg2;10x1
add
datawrite1;>linecount
dataread2;>@50
gotoifless;>uiter-loopback-30
gotoif;>uiter-loopback-30

#plotter draw line
dataread1;>*00000000+
iowrite1;>plot.color
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter x pos 2
dataread1;>@121
iowrite1;>plot.x2
#plotter y pos 2
dataread1;>@121
iowrite1;>plot.y2
#plotter x pos 3
dataread1;>@121
iowrite1;>plot.x3
#plotter y pos 3
dataread1;>@-121
iowrite1;>plot.y3
#plotter draw triangle
iowrite1;>plot.tri
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@-121
iowrite1;>plot.y1
#plotter width
dataread1;>@121
iowrite1;>plot.width
#plotter height
dataread1;>@121
iowrite1;>plot.height
#plotter draw line
dataread1;>*---------
iowrite1;>plot.color
#plotter draw rect
iowrite1;>plot.rect
#plotter draw line
dataread1;>*+++000+00
iowrite1;>plot.color
#plotter x pos 1
dataread1;>@12
iowrite1;>plot.x1
#plotter y pos 1
dataread1;>@14
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>@-1
iowrite1;>plot.y2
#plotter x pos 2
dataread1;>@-21
iowrite1;>plot.x2
#plotter y pos 3
dataread1;>@43
iowrite1;>plot.y3
#plotter x pos 3
dataread1;>@-20
iowrite1;>plot.x3
#plotter draw triangle
iowrite1;>plot.tri
#plotter draw line
dataread1;>*---------
iowrite1;>plot.color
#plotter x pos 1
dataread1;>@-10
iowrite1;>plot.x1
#plotter draw triangle
iowrite1;>plot.tri
#plotter x pos 3
dataread1;>@-200
iowrite1;>plot.x3
#plotter draw line
dataread1;>*+++---+++
iowrite1;>plot.color
#plotter draw triangle
iowrite1;>plot.tri
#plotter y pos 3
dataread1;>@-50
iowrite1;>plot.y3
#plotter draw line
dataread1;>*+00---000
iowrite1;>plot.color
#plotter draw triangle
iowrite1;>plot.tri
#plotter y pos 3
dataread1;>@14
iowrite1;>plot.y3
#plotter x pos 3
dataread1;>@12
iowrite1;>plot.x3
#plotter draw line
dataread1;>*+0-------
iowrite1;>plot.color
#plotter draw triangle
iowrite1;>plot.tri
#plotter get buffer content length.
ioread1;>plot.buffer
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>buff
#Dump (decimal)
dataread1;>buff
iowrite1;>io.decdump
#print newline
fopwri1;:\n
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-106
gotoif;>keyprompt--loop-106
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#prline
fopwri1;:T
fopwri1;:h
fopwri1;:a
fopwri1;:n
fopwri1;:k
fopwri1;:\s
fopwri1;:y
fopwri1;:o
fopwri1;:u
fopwri1;:.
fopwri1;:\s
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-112
gotoif;>keyprompt--loop-112
#stop (shutdown vm)
stop
#label
null;;floor_lines--label
#plotter x pos 1
dataread1;>@-121
iowrite1;>plot.x1
#plotter x pos 2
dataread1;>@121
iowrite1;>plot.x2
#plotter y pos 1
dataread1;>lpos
iowrite1;>plot.y1
#plotter y pos 2
dataread1;>lpos
iowrite1;>plot.y2
#add (2op math)
dataread1;>lpos
dataread2;>lspace
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>lpos
#add (2op math)
dataread1;>lspace
dataread2;>@4
add
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>lspace
#plotter draw line
iowrite1;>plot.line
#return from subroutine.
s1pop1
gotoreg1
#END OF FILE
