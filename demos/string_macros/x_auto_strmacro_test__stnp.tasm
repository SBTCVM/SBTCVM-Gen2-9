#SSTNPL COMPILER v0.4.0
#header
head-rname=auto_strmacro_test
head-nspin=stdnsp
fopset1;>io.ttywr
fopset2;>io.packart
#stnp source file: (autogenerated from) "demos/string_macros/auto_strmacro_test.stnp
null;10x30;@30
null;---------;*---------
null;10x0;@0
null;10x1;@1
null;:n;out
#goto 
goto;>sam_STRMAC_end--label
#label
zerosize;;sam_STRMAC--label
#print
fopwri1;:T
fopwri1;:H
fopwri1;:I
fopwri1;:S
fopwri1;:\s
fopwri1;:I
fopwri1;:S
fopwri1;:\s
fopwri1;:S
fopwri1;:A
fopwri1;:M
fopwri1;:.
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;sam_STRMAC_end--label
#goto 
goto;>bob_STRMAC_end--label
#label
zerosize;;bob_STRMAC--label
#print
fopwri1;:H
fopwri1;:I
fopwri1;:\s
fopwri1;:I
fopwri1;:M
fopwri1;:\s
fopwri1;:B
fopwri1;:O
fopwri1;:B
fopwri1;:.
fopwri1;:\s
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;bob_STRMAC_end--label
#goto (extra code stores away return address.)
setreg1;>goto--jumper-7-1
s1push1
goto;>sam_STRMAC--label
zerosize;;goto--jumper-7-1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-8-1
s1push1
goto;>bob_STRMAC--label
zerosize;;goto--jumper-8-1
#goto (extra code stores away return address.)
setreg1;>goto--jumper-9-1
s1push1
goto;>sam_STRMAC--label
zerosize;;goto--jumper-9-1
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-10-1
s1push1
goto;>sam_STRMAC--label
zerosize;;goto--jumper-10-1
#print newline
fopwri1;:\n
#goto (extra code stores away return address.)
setreg1;>goto--jumper-11-1
s1push1
goto;>bob_STRMAC--label
zerosize;;goto--jumper-11-1
#print newline
fopwri1;:\n
#prline
fopwri1;:P
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:e
fopwri1;:r
fopwri1;:\s
fopwri1;:s
fopwri1;:e
fopwri1;:g
fopwri1;:m
fopwri1;:e
fopwri1;:n
fopwri1;:t
fopwri1;:-
fopwri1;:s
fopwri1;:p
fopwri1;:e
fopwri1;:c
fopwri1;:i
fopwri1;:f
fopwri1;:i
fopwri1;:c
fopwri1;:\s
fopwri1;:m
fopwri1;:a
fopwri1;:c
fopwri1;:r
fopwri1;:o
fopwri1;:\s
fopwri1;:t
fopwri1;:e
fopwri1;:s
fopwri1;:t
fopwri1;:.
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-15-0
gotoif;>keyprompt--loop-15-0
#Set SBTGA mode
dataread1;>@30
iowrite1;>ga.mode
#plotter fill
dataread1;>*---------
iowrite1;>plot.fill
#val (used with set to change variable value during runtime.)
setreg1;+++++++++
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.color_on
#val (used with set to change variable value during runtime.)
setreg1;10x-119
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posx
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.posy
#val (used with set to change variable value during runtime.)
setreg1;10x2
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.height
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.width
#val (used with set to change variable value during runtime.)
setreg1;10x6
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.vert_space
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>seg.hori_space
#goto (extra code stores away return address.)
setreg1;>goto--jumper-34-0
s1push1
goto;>seg.init_pos--label
zerosize;;goto--jumper-34-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #36-1
fopset1;>buffer.1.write.tail#SSTNPL Source Line: '36-1' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-36-2
s1push1
goto;>sam_STRMAC--label
zerosize;;goto--jumper-36-2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #36-3
fopset1;>io.ttywr#SSTNPL Source Line: '36-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #37-1
fopset1;>buffer.1.write.tail#SSTNPL Source Line: '37-1' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-37-2
s1push1
goto;>bob_STRMAC--label
zerosize;;goto--jumper-37-2
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #37-3
fopset1;>io.ttywr#SSTNPL Source Line: '37-3' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #38-1
fopset1;>buffer.1.write.tail#SSTNPL Source Line: '38-1' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-38-2
s1push1
goto;>sam_STRMAC--label
zerosize;;goto--jumper-38-2
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #38-4
fopset1;>io.ttywr#SSTNPL Source Line: '38-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #39-1
fopset1;>buffer.1.write.tail#SSTNPL Source Line: '39-1' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-39-2
s1push1
goto;>sam_STRMAC--label
zerosize;;goto--jumper-39-2
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #39-4
fopset1;>io.ttywr#SSTNPL Source Line: '39-4' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #40-1
fopset1;>buffer.1.write.tail#SSTNPL Source Line: '40-1' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-40-2
s1push1
goto;>bob_STRMAC--label
zerosize;;goto--jumper-40-2
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #40-4
fopset1;>io.ttywr#SSTNPL Source Line: '40-4' 
#bprinttail1
fopset1;>buffer.1.write.tail
fopwri1;:-
fopwri1;:-
fopwri1;:P
fopwri1;:R
fopwri1;:E
fopwri1;:S
fopwri1;:S
fopwri1;:\s
fopwri1;:A
fopwri1;:\s
fopwri1;:K
fopwri1;:E
fopwri1;:Y
fopwri1;:\s
fopwri1;:T
fopwri1;:O
fopwri1;:\s
fopwri1;:E
fopwri1;:N
fopwri1;:T
fopwri1;:E
fopwri1;:R
fopwri1;:\s
fopwri1;:S
fopwri1;:B
fopwri1;:T
fopwri1;:V
fopwri1;:D
fopwri1;:I
fopwri1;:\s
fopwri1;:T
fopwri1;:E
fopwri1;:S
fopwri1;:T
fopwri1;:-
fopwri1;:-
fopwri1;:\n
fopset1;>io.ttywr
#goto (extra code stores away return address.)
setreg1;>goto--jumper-44-0
s1push1
goto;>seg.output--label
zerosize;;goto--jumper-44-0
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-47-0
gotoif;>keyprompt--loop-47-0
#Set SBTGA mode
dataread1;>@0
iowrite1;>ga.mode
#goto 
goto;>help_test_STRMAC_end--label
#label
zerosize;;help_test_STRMAC--label
#print
fopwri1;:h
fopwri1;:e
fopwri1;:l
fopwri1;:p
#return from subroutine.
s1pop1
gotoreg1
#label
zerosize;;help_test_STRMAC_end--label
#vdi mode set
dataread1;>@1
iowrite1;>vdi.cli.status
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #56-1
fopset1;>vdi.cli.in#SSTNPL Source Line: '56-1' 
#goto (extra code stores away return address.)
setreg1;>goto--jumper-56-2
s1push1
goto;>help_test_STRMAC--label
zerosize;;goto--jumper-56-2
#print newline
fopwri1;:\n
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #56-4
fopset1;>io.ttywr#SSTNPL Source Line: '56-4' 
#conditional flow control begin
null;;flowloop--con-x-1--start
dataread1;>out
dataread2;>@0
gotoif;>goto--branch-58-0
goto;>goto--jumper-58-0
goto;>flowloop--con-x-1;goto--branch-58-0
zerosize;;goto--jumper-58-0
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #59-0
ioread1;>vdi.cli.out#SSTNPL Source Line: '59-0' 
#___RAW ASSEMBLY CODE___
#_______NOTE: this corresponds to SSTNPL source line #60-0
iowrite1;>io.ttywr#SSTNPL Source Line: '60-0' 
#set(1) (used after 2-op math, asm code, or get)
datawrite1;>out
goto;>flowloop--con-x-1--start
zerosize;;flowloop--con-x-1
#prline
fopwri1;:p
fopwri1;:r
fopwri1;:e
fopwri1;:s
fopwri1;:s
fopwri1;:\s
fopwri1;:a
fopwri1;:\s
fopwri1;:k
fopwri1;:e
fopwri1;:y
fopwri1;:\s
fopwri1;:t
fopwri1;:o
fopwri1;:\s
fopwri1;:e
fopwri1;:x
fopwri1;:i
fopwri1;:t
fopwri1;:\n
#keprompt: prompt for single keypress, continue only when keypress is received.
setreg2;0
iowrite1;>io.ttyrd
ioread1;>io.ttyrd;keyprompt--loop-65-0
gotoif;>keyprompt--loop-65-0
#stop (shutdown vm)
stop
#module include: line 70-0: strmacro as stm
includeas;strmacro,stm
#module include: line 71-0: segment as seg
includeas;segment,seg
#END OF FILE
