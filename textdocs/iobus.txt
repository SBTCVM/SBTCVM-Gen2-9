key:

m=mode
[w]=write only
[r]=read only
[b]=bidirectional/both read & write

x=address

x :  m : asm varname  : description
--+----+--------------+------------------------- 
1 : [w]: io.ttywr     : TTY (terminal) write
2 : [w]: io.tritdump  : trit dump
3 : [w]: io.decdump   : decimal dump
4 : [r]: io.ttyrd     : TTY (terminal) read (buffered, returns null upon empty buffer)
5 : [w]: io.packart   : 3-shade, trit-encoded terminal art mechanism. output quality varies with frontend.
6 : [w]: io.textcolor : set text color as 6 trit value. key: (fffbbb) where fff is 
		foreground and bbb is background. 3-trit RGB values. 
		NOT SUPPORTED BY CURSES FRONTEND.
7 : [w]: io.packcolor : set Ternary Packed Art colors as 9 trit value. key: (+++000---) (key is showing corresponding pack-art trits)
		NOT SUPPORTED BY CURSES FRONTEND.
8 : [w]: io.cpack     : RGB packed art. 3 'pixels' specified as 3-trit RGB values.
		NOT SUPPORTED BY CURSES FRONTEND.

50: [b]: rand1.start  : set start of random 1 range.
51: [b]: rand1.end    : set end of random 1 range.
52: [r]: rand1.get    : get random number 1 from configured range.
53: [b]: rand2.start  : set start of random 2 range.
54: [b]: rand2.end    : set end of random 2 range.
55: [r]: rand2.get    : get random number 2 from configured range.
56: [b]: rand3.start  : set start of random 3 range.
57: [b]: rand3.end    : set end of random 3 range.
58: [r]: rand3.get    : get random number 3 from configured range.
59: [b]: rand4.start  : set start of random 4 range.
60: [b]: rand4.end    : set end of random 4 range.
61: [r]: rand4.get    : get random number 4 from configured range.

100-180 reserved for SBTVDI
####SBTVDI design is not finished, vdi.* varnames MAY NOT be in the standard library yet!
#relbuffer and namebuffer can have backspaces piped into them for crude line-editing.

#VDI CLI will handle character mirroring itself. 

100: [w] vdi.cli.in      : VDI CLI SERIAL: write TTY input data here.
101: [r] vdi.cli.out     : VDI CLI SERIAL: read data from here and write to TTY output
102: [b] vdi.cli.status  : write: init VDI CLI interface. read: 0=ok 1=user return 2=user shutdown
103: [b] vdi.cli.mode    : get/set CLI mode.

110: [w] vdi.f0.dir      : file0 relbuffer
111: [w] vdi.f0.name     : file0 namebuffer
112: [b] vdi.f0.status   : write resets file0, read gets most recent status code. i.e. load failure.
113: [w] vdi.f0.loadat   : file0 load at
114: [w] vdi.f0.bootload : file0 soft-reset CPU, load selected file into RAM.
115: [w] vdi.f0.loadat   : file0 relbuffer load at
116: [w] vdi.f0.bootload : file0 relbuffer soft-reset CPU, load selected file into RAM.
117: [w] vdi.f0.dirs     : file0 display text list of dirs in path (if any/applicable.)
118: [w] vdi.f0.files    : file0 display text list of files in path (if any/applicable.)


#NOTE: the SBTSND-200 sound chip is only emulated when a valid backend is available.
#currently this is limited to pygame.

### NOT FINISHED. THE VM DOES NOT LOAD THIS MODULE YET!

#SFX channel 1
200: [w] sfx1.play  : (write fadetime in ms)
201: [w] sfx1.stop  : (write fadetime in ms)
202: [w] sfx1.pulse : (write 0-10)
203: [w] sfx1.vol   : (write 0-10)
204: [w] sfx1.voice : (write 0-5) 
205: [w] sfx1.pan   : (1=left, 0=center, -1=right)

#SFX channel 2
210: [w] sfx2.play  : (write fadetime in ms)
211: [w] sfx2.stop  : (write fadetime in ms)
212: [w] sfx2.pulse : (write 0-10)
213: [w] sfx2.vol   : (write 0-10)
214: [w] sfx2.voice : (write 0-5) 
215: [w] sfx2.pan   : (1=left, 0=center, -1=right)


[TODO: map out music controller IO lines]

### SBTCVM mouse
300: [b] mouse.button  : (read to get next mouse button event, write to clear mouse event buffer.)
301: [r] mouse.lockx   : get x position of last read mouse button event.
302: [r] mouse.locky   : get y position of last read mouse button event.
303: [r] mouse.realx   : get current x position of mouse.
304: [r] mouse.realy   : get current y position of mouse.
		button event values:
			1/-1 , left mouse button
			2/-2 , middle mouse button
			3/-3 , right mouse button
			4/-4 , scroll up
			5/-5 , scroll down
			0    , no events in queue
		[negative button values are button release events]

### SBTGA system

500: [w] ga.mode    : set SBTGA mode (ignored by curses frontend)
501: [w] plot.x1    : set plotter x1 position register
502: [w] plot.y1    : set plotter y1 position register
503: [w] plot.x2    : set plotter x2 position register
504: [w] plot.y2    : set plotter y2 position register
505: [w] plot.color : set plotter 9-trit RGB color register
506: [w] plot.line  : draw line
507: [w] plot.fill  : write a 9-trit RGB color to fill the display with.
520: [w] plot.fhalt : instruct the plotter to wait until next frame.
521: [b] plot.buffer: write: clear draw buffer. read: get number of items in
		draw buffer. (keep at or below 30 for constant drawing.)
