Basic layout for SBTCVM's stack and interrupt systems:


see 'except-interrupt.txt' for exception and interrupt lists.

note: some exceptions, i.e. soft stop (-1), should not be catchable.
note: while the exception/interrupt system is not implemented, all exceptions will be treated as uncaught!

main stack:
This is your bog-standard hardware stack. each entry caches important registers, etc.

interrupt stack:
A special 'secondary' stack that is used to handle any recursive interrupt callbacks and exceptions without mucking up the whole stack.
this stack is handled automatically.

interrupt continue. 'intcont':

This instruction tells the CPU that the callback triggered by an interrupt is
finished. will return to lower item in interrupt stack if any, then when the
interrupt stack is empty, iterate through any remaining interrupt callbacks in
the interrupt backlog in order of priority. When both the interrupt stack and
interrupt backlog are empty, the CPU returns to the last place it was,
keeping the main stack untouched.