#header information
head-mode=trom




#Gen2's VERY FIRST assembly program! :D WOO!

#custom namespace variable syntax
#this is part of g2-asm.py's new unified namespace.
#syntax is as follows v>[varname];varvalue
v>bob2;10x1#new variable syntax.
setreg1;>bob2;start

#new int syntaxes:
#10x[signed decimal int] is a new decimal syntax. 
setreg1;10x22

#the p0n notation, thats also supported by the btint object API, is exposed here.
setreg1;pnpp0

setreg1;>start

#new variable length trit syntax.
setreg1;000+0--+-
setreg1;+
setreg1

#out of range test
#setreg1;10x50000

#nonexistant gotoref test
#setreg1;>bob

#new dual raw numeric data syntax.
#left is instruction word, right is data. useful for i.e. double-packed data.
raw;10x1,10x15
#namespace references also work.
v>int1;10x1
v>int2;10x15
raw;>int1,>int2
# everyone's favorite null instruction :)
null
null
null;10x10
null
null
null

#PRELIMINARY ALU TESTS. ensure these are working correctly once suitable debug interfaces are available!

#add
setreg1;10x1
setreg2;10x1
add

setreg1;10x1
setreg2;10x1
add2

setreg1;10x1
adddata1;10x2

setreg2;10x1
adddata2;10x2
#sub
setreg1;10x1
setreg2;10x1
sub

setreg1;10x1
setreg2;10x1
sub2

setreg1;10x1
subdata1;10x2

setreg2;10x1
subdata2;10x2
#multiplication
setreg1;10x1
setreg2;10x1
mul

setreg1;10x1
setreg2;10x1
mul2

setreg1;10x1
muldata1;10x2

setreg2;10x1
muldata2;10x2
#floor division (note: divide by zero will trigger exception -2)
setreg1;10x1
setreg2;10x1
div

setreg1;10x1
setreg2;10x1
div2

setreg1;10x1
divdata1;10x2

setreg2;10x1
divdata2;10x2

#Stop VM
stop